{
	"id": 0,
	"name": "Web Integrator Studio (wi-studio) SDK ",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 509,
			"name": "\"app/contrib/wi-contrib\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/src/client/app/contrib/wi-contrib.ts",
			"children": [
				{
					"id": 527,
					"name": "AbstractContribActionProvider",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Abstract Action Provider"
					},
					"children": [
						{
							"id": 528,
							"name": "handleAction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 529,
									"name": "handleAction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "abstract handle action function"
									},
									"parameters": [
										{
											"id": 530,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 445
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"name": "IContribActionProvider.handleAction",
										"id": 252
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 104,
									"character": 25
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IContribActionProvider.handleAction",
								"id": 251
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								528
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 99,
							"character": 51
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IContribActionProvider",
							"id": 250
						}
					]
				},
				{
					"id": 517,
					"name": "AbstractContribFieldProvider",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Abstract contrib field provider"
					},
					"children": [
						{
							"id": 518,
							"name": "getFieldValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 519,
									"name": "getFieldValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "getFieldValue"
									},
									"parameters": [
										{
											"id": 520,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 445
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"name": "IContribFieldProvider.getFieldValue",
										"id": 248
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 71,
									"character": 26
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IContribFieldProvider.getFieldValue",
								"id": 247
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								518
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 59,
							"character": 50
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IContribFieldProvider",
							"id": 246
						}
					]
				},
				{
					"id": 510,
					"name": "AbstractContribValidationProvider",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Abstract Validation Provider"
					},
					"children": [
						{
							"id": 511,
							"name": "validate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 512,
									"name": "validate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "validate"
									},
									"parameters": [
										{
											"id": 513,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 445
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationResult",
												"id": 79
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 79
													}
												]
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"name": "IContribValidationProvider.validate",
										"id": 244
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 44,
									"character": 21
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IContribValidationProvider.validate",
								"id": 243
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								511
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 32,
							"character": 55
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IContribValidationProvider",
							"id": 242
						}
					]
				},
				{
					"id": 653,
					"name": "WiContribMessaging",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Abstract Messaging implementation",
						"tags": [
							{
								"tag": "description",
								"text": "There can be different messaging use cases where different type of Subjects can be used\ni.e. {Rx.Subject} or {Rx.BehaviorSubject} which determines what behavior is required for the use case.\n"
							},
							{
								"tag": "example:",
								"text": "\n```\n // Field messaging example\n let messaging = new WiContribMessaging();\n // Emitting data\n messaging.emit<any>(\"Field1\",{ name: \"Robert\" });\n // Handling data\n messaging.on<any>(\"Field1\", (data)=>{ console.log(data.name); } ) // prints \"Robert\"\n // Deleting subject\n messaging.off(\"Field1\");\n // Disposing WiContribMessaging();\n messaging.dispose();\n```\n\n\n```\n import {IMessaging} from \"wi-studio/common/models/messaging\";\n import {WiContribMessaging} from \"wi-studio/app/contrib/wi-contrib\";\n @Injectable()\n @WiContrib({})\n\n export class RestTriggerService extends WiServiceHandlerContribution {\n   private messaging: IMessaging;\n   constructor() {\n      messaging = new WiContribMessaging();\n      super();\n   }\n\n   value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n      if (fieldName === \"field1\") {\n          let field: IFieldDefinition = context.getField(\"field1\");\n          this.messaging.emit<any>(\"field1\",{ name: field.value });\n          return field.value;\n      } else if (fieldName === \"field2\") {\n         return Observable.create(observer => {\n             this.messaging.on<any>(\"field1\", (data)=>{\n                 console.log(data.name);  // prints \"Robert\"\n                 // Calculate the field2 data\n                 observer.next(\"<FIELD2DATA>\");\n                 // The user can delete the subject using this.messaging.off(\"field1\"); if field2 is the only subscriber\n                 // In case of multiple subscribers there is no need to delete as WiContribMessaging uses rxjs/BehaviorSubject\n                 // which only returns the last emitted value to all subscribers\n             });\n         });\n      }\n      return null;\n   }\n\n   ...\n }\n\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 654,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 655,
									"name": "new WiContribMessaging",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "WiContribMessaging",
										"id": 653
									},
									"overwrites": {
										"type": "reference",
										"name": "AbstractMessaging.__constructor",
										"id": 476
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1089,
									"character": 59
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "AbstractMessaging.__constructor",
								"id": 476
							}
						},
						{
							"id": 659,
							"name": "subjects",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 81,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMessaging.subjects",
								"id": 475
							}
						},
						{
							"id": 660,
							"name": "Subjects",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 661,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "AbstractMessaging.Subjects",
										"id": 482
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 91,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMessaging.Subjects",
								"id": 482
							},
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.Subjects",
								"id": 450
							}
						},
						{
							"id": 666,
							"name": "createName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 667,
									"name": "createName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 668,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "AbstractMessaging.createName",
										"id": 488
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 105,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMessaging.createName",
								"id": 488
							}
						},
						{
							"id": 683,
							"name": "dispose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 684,
									"name": "dispose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 685,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "AbstractMessaging.dispose",
										"id": 505
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 132,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMessaging.dispose",
								"id": 505
							},
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.dispose",
								"id": 472
							}
						},
						{
							"id": 669,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 670,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 671,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 672,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 673,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "AbstractMessaging.emit",
										"id": 491
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.emit",
										"id": 459
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 109,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMessaging.emit",
								"id": 491
							},
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.emit",
								"id": 458
							}
						},
						{
							"id": 662,
							"name": "getObservable",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 663,
									"name": "getObservable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 664,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 665,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "AbstractMessaging.getObservable",
										"id": 484
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.getObservable",
										"id": 455
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 95,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMessaging.getObservable",
								"id": 484
							},
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.getObservable",
								"id": 454
							}
						},
						{
							"id": 656,
							"name": "newSubject",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 657,
									"name": "newSubject",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 658,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"type": {
										"type": "reference",
										"name": "Subject",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "AbstractMessaging.newSubject",
										"id": 479
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.newSubject",
										"id": 452
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1094,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "AbstractMessaging.newSubject",
								"id": 479
							},
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.newSubject",
								"id": 451
							}
						},
						{
							"id": 679,
							"name": "off",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 680,
									"name": "off",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 681,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 682,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "AbstractMessaging.off",
										"id": 501
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.off",
										"id": 469
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 124,
									"character": 7
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMessaging.off",
								"id": 501
							},
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.off",
								"id": 468
							}
						},
						{
							"id": 674,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 675,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 676,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 677,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 678,
											"name": "handler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HANDLER_FUNCTION",
												"id": 35,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "AbstractMessaging.on",
										"id": 496
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.on",
										"id": 464
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 117,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMessaging.on",
								"id": 496
							},
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.on",
								"id": 463
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								654
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								659
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								660
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								666,
								683,
								669,
								662,
								656,
								679,
								674
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 1089,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "AbstractMessaging",
							"id": 474
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IMessaging",
							"id": 449
						}
					]
				},
				{
					"id": 600,
					"name": "WiContributionUtils",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " Contribution Utility\n This utility class provides functions to get User defined connections,\n Server Configuration, Context Object unique id's"
					},
					"children": [
						{
							"id": 605,
							"name": "getConnection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 606,
									"name": "getConnection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a connection for a given connection name",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 607,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 608,
											"name": "connection_id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IConnectorContribution",
														"id": 216
													}
												]
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 831,
									"character": 31
								}
							]
						},
						{
							"id": 601,
							"name": "getConnections",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 602,
									"name": "getConnections",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a list of available connections for a given connector type",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 603,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 604,
											"name": "connector_type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IConnectorContribution",
													"id": 216
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 804,
									"character": 32
								}
							]
						},
						{
							"id": 609,
							"name": "getEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 610,
									"name": "getEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets Server Environment Information",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 611,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 612,
											"name": "envName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 880,
									"character": 32
								}
							]
						},
						{
							"id": 613,
							"name": "getUniqueId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 614,
									"name": "getUniqueId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the unique id for a given context object",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 615,
											"name": "ctx",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 445
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 893,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								605,
								601,
								609,
								613
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 798,
							"character": 32
						}
					]
				},
				{
					"id": 616,
					"name": "WiProxyCORSUtils",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Proxy Cross Origin Resource Sharing Utility",
						"tags": [
							{
								"tag": "desc",
								"text": "This utility routes client side HTTP requests via a Server proxy to SAAS\nproviders which have CORS restrictions when accessing the APIs.\n"
							}
						]
					},
					"children": [
						{
							"id": 627,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Constructor"
							},
							"signatures": [
								{
									"id": 630,
									"name": "new WiProxyCORSUtils",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Constructor"
									},
									"parameters": [
										{
											"id": 631,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 632,
											"name": "remoteUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 616
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 925,
									"character": 5
								}
							]
						},
						{
							"id": 620,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 907,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 618,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 905,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "STRING_MAP",
								"id": 8,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 628,
							"name": "http",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 932,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "Http"
							}
						},
						{
							"id": 619,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 906,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "HTTP_METHOD",
								"id": 435
							},
							"defaultValue": " HTTP_METHOD.GET"
						},
						{
							"id": 617,
							"name": "queryParams",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 904,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "STRING_MAP",
								"id": 8,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 629,
							"name": "remoteUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "\n"
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 932,
									"character": 51
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 644,
							"name": "addBody",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 645,
									"name": "addBody",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add Http Body"
									},
									"parameters": [
										{
											"id": 646,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 616
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 972,
									"character": 11
								}
							]
						},
						{
							"id": 637,
							"name": "addHeader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 638,
									"name": "addHeader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add Header key value",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 639,
											"name": "header",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 640,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 616
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 954,
									"character": 13
								}
							]
						},
						{
							"id": 641,
							"name": "addMethod",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 642,
									"name": "addMethod",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Add HTTP method {HTTP_METHOD}"
									},
									"parameters": [
										{
											"id": 643,
											"name": "method",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "HTTP_METHOD",
												"id": 435
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 616
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 963,
									"character": 13
								}
							]
						},
						{
							"id": 633,
							"name": "addQueryParams",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 634,
									"name": "addQueryParams",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add Query Parameters",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 635,
											"name": "param",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 636,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 616
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 943,
									"character": 18
								}
							]
						},
						{
							"id": 649,
							"name": "buildUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 650,
									"name": "buildUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Build URL",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 651,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 652,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "STRING_MAP",
												"id": 8,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1014,
									"character": 12
								}
							]
						},
						{
							"id": 625,
							"name": "getHttp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 626,
									"name": "getHttp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the http connection object",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Http"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 923,
									"character": 18
								}
							]
						},
						{
							"id": 647,
							"name": "send",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 648,
									"name": "send",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Send Http Request and return and Observable for Response",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 981,
									"character": 8
								}
							]
						},
						{
							"id": 621,
							"name": "createRequest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 622,
									"name": "createRequest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create Http Request",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 623,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 624,
											"name": "remoteUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Remote URL is the URL from r"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 616
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 915,
									"character": 31
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								627
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								620,
								618,
								628,
								619,
								617,
								629
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								644,
								637,
								641,
								633,
								649,
								625,
								647,
								621
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 903,
							"character": 29
						}
					]
				},
				{
					"id": 535,
					"name": "WiServiceContribution",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The [[WiServiceContribution]] being the abstract base class is extended  by a contribution provider handler [[WiServiceHandlerContribution]]\nor a [[WiServiceProviderContribution]]. The user can choose either implmentation model to suit their needs.",
						"text": "## [[WiServiceHandlerContribution]]\nThe [[WiServiceHandlerContribution]] represents one way of providing contribution where the contribution will have its own single implementation\nof [[WiServiceHandlerContribution]] and the @[[Injectable]] class decorator will tell the loader that it is loadable by Angular and the single class\nwill provide handler functions for value, validation and action. The @WiContrib({}) deoorator with null metadata indicates it is a one abstract class\n[[WiServiceHandlerContribution]] implmentation.\n\n ### Example [[WiServiceHandlerContribution]]  Contribution Handler Typescript file\n ```\n import {Injectable, Injector} from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import {ValidationResult} from \"../../../../common/models/validation\";\n import {IActivityContribution, ActionResult, IActionResult} from \"../../../../common/models/contrib\";\n import {WiContrib, WiServiceHandlerContribution} from \"../../wi-contrib\";\n import {Http} from \"@angular/http\";\n import {IValidationResult} from \"../../../../common/models/validation\";\n\n @WiContrib({})\n @Injectable()\n export class RestContributionHandler extends WiServiceHandlerContribution {\n     constructor(injector: Injector, http: Http) {\n      super(injector, http);\n  }\n\n  value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n      return Observable.create(observer => {\n          observer.next(\"\");\n     });\n  }\n\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n      return Observable.create(observer => {\n           let vresult: IValidationResult = ValidationResult.newValidationResult();\n           observer.next(vresult);\n       });\n  }\n\n   action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n      return Observable.create(observer => {\n           let aresult: IActionResult = ActionResult.newActionResult();\n           observer.next(aresult);\n       });\n   }\n }\n ```\n ### Example [[WiServiceHandlerContribution]]  Contribution Module Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./rest-contrib\";\n import {WiServiceContribution} from \"../../wi-contrib\";\n @NgModule({\n   imports: [CommonModule,HttpModule],\n   exports: [],\n   declarations: [],\n   entryComponents: [],\n   providers: [{\n     provide: WiServiceContribution,\n     useClass: RestContributionHandler\n   }],\n   bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n## [[WiServiceProviderContribution]]\nThe [[WiServiceProviderContribution]] represents another way of providing contribution\nwhere each field will have its own [[AbstractContribFieldProvider]],[[AbstractContribValidationProvider]],[[AbstractActionProvider]] and the [[WiServiceProviderContribution]]\nimplementation with @[[WiContrib]] decorator will tell the loader that the module is of type [[WiServiceProviderContribution]]. Each field value,validation\nand action provider is also a Angular injectable Service and must be decorated by @Injectable(). The contribution service is also a Angular injectable service\nas decorated with @Injectable() and also a Contribution Service with @WiContrib(metadata) deoorator.\n\n ### Example [[WiServiceProviderContribution]]  Contribution Service Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./timer-contrib\";\n import {WiServiceContribution} from \"wi-contrib\";\n @NgModule({\n imports: [CommonModule,HttpModule],\n exports: [],\n declarations: [],\n entryComponents: [],\n providers: [\n  {\n    provide: WiServiceContribution,\n    useClass: TimerContribService\n  },\n  {\n    provide: Field1Provider,\n    useClass: Field1Provider\n  },\n  {\n    provide: Field1ValidationProvider,\n    useClass: Field1ValidationProvider\n  }],\n bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n ### Example [[WiServiceProviderContribution]]  Contribution Module Typescript file\n ```\n import { ValidationResult } from \"wi-studio/common/models/validation\";\n import { IActivityContribution, IContributionContext } from \"wi-studio/common/models/contrib\";\n import { Injectable, Inject, Injector } from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import { Http } from \"@angular/http\";\n import { AbstractContribFieldProvider, AbstractContribValidationProvider, WiContrib, WiServiceContribution } from \"wi-studio/app/wi-contrib\";\n import {IValidationResult} from \"wi-studio/common/models/validation\";\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n   getFieldValue(context: IActivityContribution): Observable<string[]> {\n       return Observable.create(observer => {\n           observer.next(\"\");\n      });\n   }}\n @Injectable()\n export class Field1ValidationProvider extends AbstractContribValidationProvider {\n    validate(context: IContributionContext): Observable<IValidationResult> {\n        return Observable.create(observer => {\n            // tslint:disable-next-line:no-bitwise\n            let vresult: IValidationResult = ValidationResult.newValidationResult();\n            observer.next(vresult);\n        });\n    }}\n\n @WiContrib({\n    validationProviders: [{\n           field: \"field1\",\n            useClass: Field1ValidationProvider\n        }],\n    fieldProviders: [{\n            field: \"field1\",\n            useClass: Field1Provider\n        }]\n })\n @Injectable()\n export class TimerContribService extends WiServiceProviderContribution {}\n```\n"
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 536,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "constructor"
							},
							"signatures": [
								{
									"id": 539,
									"name": "new WiServiceContribution",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "constructor"
									},
									"parameters": [
										{
											"id": 540,
											"name": "_injector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Injector"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Injector"
											}
										},
										{
											"id": 541,
											"name": "_http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Http"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Http"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiServiceContribution",
										"id": 535
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 389,
									"character": 81
								}
							]
						},
						{
							"id": 538,
							"name": "_http",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "\n"
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "Http"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 395,
									"character": 91
								}
							],
							"type": {
								"type": "reference",
								"name": "Http"
							}
						},
						{
							"id": 537,
							"name": "_injector",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true,
								"isOptional": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "Injector"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 395,
									"character": 51
								}
							],
							"type": {
								"type": "reference",
								"name": "Injector"
							}
						},
						{
							"id": 544,
							"name": "getAnnotations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 545,
									"name": "getAnnotations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "get annotation from metadata"
									},
									"type": {
										"type": "reference",
										"name": "WiContribMetaData",
										"id": 531
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 415,
									"character": 28
								}
							]
						},
						{
							"id": 548,
							"name": "getHttp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 549,
									"name": "getHttp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the [[Http]] object",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Http"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 434,
									"character": 21
								}
							]
						},
						{
							"id": 546,
							"name": "getInjector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 547,
									"name": "getInjector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the injector",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Injector"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 425,
									"character": 25
								}
							]
						},
						{
							"id": 542,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 543,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 446
									},
									"implementationOf": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 328
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 402,
									"character": 18
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 327
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								536
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								538,
								537
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								544,
								548,
								546,
								542
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 389,
							"character": 43
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "WiServiceProviderContribution",
							"id": 550
						},
						{
							"type": "reference",
							"name": "WiServiceHandlerContribution",
							"id": 572
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 326
						}
					]
				},
				{
					"id": 572,
					"name": "WiServiceHandlerContribution",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Abstract Service Handler Contribution\n## [[WiServiceHandlerContribution]]\nThe [[WiServiceHandlerContribution]] represents one way of providing contribution where the contribution will have its own single implementation\nof [[WiServiceHandlerContribution]] and the @[[Injectable]] class decorator will tell the loader that it is loadable by Angular and the single class\nwill provide handler functions for value, validation and action. The @WiContrib({}) deoorator with null metadata indicates it is a one abstract class\n[[WiServiceHandlerContribution]] implmentation.\n\n ### Example [[WiServiceHandlerContribution]]  Contribution Handler Typescript file\n ```\n import {Injectable, Injector} from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import {ValidationResult} from \"../../../../common/models/validation\";\n import {IActivityContribution, ActionResult, IActionResult} from \"../../../../common/models/contrib\";\n import {WiContrib, WiServiceHandlerContribution} from \"../../wi-contrib\";\n import {Http} from \"@angular/http\";\n import {IValidationResult} from \"../../../../common/models/validation\";\n\n @WiContrib({})\n @Injectable()\n export class RestContributionHandler extends WiServiceHandlerContribution {\n     constructor(injector: Injector, http: Http) {\n      super(injector, http);\n  }\n\n  value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n      return Observable.create(observer => {\n          observer.next(\"\");\n     });\n  }\n\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n      return Observable.create(observer => {\n           let vresult: IValidationResult = ValidationResult.newValidationResult();\n           observer.next(vresult);\n       });\n  }\n\n   action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n      return Observable.create(observer => {\n           let aresult: IActionResult = ActionResult.newActionResult();\n           observer.next(aresult);\n       });\n   }\n }\n ```\n ### Example [[WiServiceHandlerContribution]]  Contribution Module Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./rest-contrib\";\n import {WiServiceContribution} from \"../../wi-contrib\";\n @NgModule({\n   imports: [CommonModule,HttpModule],\n   exports: [],\n   declarations: [],\n   entryComponents: [],\n   providers: [{\n     provide: WiServiceContribution,\n     useClass: RestContributionHandler\n   }],\n   bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 573,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "constructor",
										"text": "\n*  ## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n}\n```"
									}
								]
							},
							"signatures": [
								{
									"id": 574,
									"name": "new WiServiceHandlerContribution",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "constructor",
												"text": "\n*  ## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 575,
											"name": "injector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Injector"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Injector"
											}
										},
										{
											"id": 576,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Http"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Http"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiServiceHandlerContribution",
										"id": 572
									},
									"overwrites": {
										"type": "reference",
										"name": "WiServiceContribution.__constructor",
										"id": 536
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 657,
									"character": 123
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "WiServiceContribution.__constructor",
								"id": 536
							}
						},
						{
							"id": 587,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional action handler for form buttons\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```\n"
									},
									{
										"tag": "param",
										"text": "",
										"param": "actionId"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 766,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 588,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 589,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 590,
													"name": "actionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 591,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 445
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 270
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 270
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "app/contrib/wi-contrib.ts",
											"line": 766,
											"character": 19
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.action",
								"id": 354
							}
						},
						{
							"id": 582,
							"name": "validate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Validate a specified field name parameter\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n```\n"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 736,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 583,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 584,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 585,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 586,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 445
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IValidationResult",
																"id": 79
															}
														]
													},
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 79
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "app/contrib/wi-contrib.ts",
											"line": 736,
											"character": 20
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.validate",
								"id": 349
							}
						},
						{
							"id": 577,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
								"text": "Here is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```",
								"tags": [
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 707,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 578,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 579,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 580,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 581,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 445
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "app/contrib/wi-contrib.ts",
											"line": 707,
											"character": 17
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.value",
								"id": 344
							}
						},
						{
							"id": 594,
							"name": "getAnnotations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 595,
									"name": "getAnnotations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "get annotation from metadata"
									},
									"type": {
										"type": "reference",
										"name": "WiContribMetaData",
										"id": 531
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getAnnotations",
										"id": 544
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 415,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getAnnotations",
								"id": 544
							}
						},
						{
							"id": 598,
							"name": "getHttp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 599,
									"name": "getHttp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the [[Http]] object",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Http"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getHttp",
										"id": 548
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 434,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getHttp",
								"id": 548
							}
						},
						{
							"id": 596,
							"name": "getInjector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 597,
									"name": "getInjector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the injector",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Injector"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getInjector",
										"id": 546
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 425,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getInjector",
								"id": 546
							}
						},
						{
							"id": 592,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 593,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 446
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getType",
										"id": 542
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceHandlerContribution.getType",
										"id": 343
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 402,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getType",
								"id": 542
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.getType",
								"id": 342
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								573
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								587,
								582,
								577
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								594,
								598,
								596,
								592
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 657,
							"character": 50
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "WiServiceContribution",
							"id": 535
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 326
						},
						{
							"type": "reference",
							"name": "IWiServiceHandlerContribution",
							"id": 341
						}
					]
				},
				{
					"id": 550,
					"name": "WiServiceProviderContribution",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Abstract Service Contribution\n## [[WiServiceProviderContribution]]\nThe [[WiServiceProviderContribution]] represents another way of providing contribution\nwhere each field will have its own [[AbstractContribFieldProvider]],[[AbstractContribValidationProvider]],[[AbstractActionProvider]] and the [[WiServiceProviderContribution]]\nimplementation with @[[WiContrib]] decorator will tell the loader that the module is of type [[WiServiceProviderContribution]]. Each field value,validation\nand action provider is also a Angular injectable Service and must be decorated by @Injectable(). The contribution service is also a Angular injectable service\nas decorated with @Injectable() and also a Contribution Service with @WiContrib(metadata) deoorator.\n\n ### Example [[WiServiceProviderContribution]]  Contribution Service Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./timer-contrib\";\n import {WiServiceContribution} from \"wi-contrib\";\n @NgModule({\n imports: [CommonModule,HttpModule],\n exports: [],\n declarations: [],\n entryComponents: [],\n providers: [\n  {\n    provide: WiServiceContribution,\n    useClass: TimerContribService\n  },\n  {\n    provide: Field1Provider,\n    useClass: Field1Provider\n  },\n  {\n    provide: Field1ValidationProvider,\n    useClass: Field1ValidationProvider\n  }],\n bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n ### Example [[WiServiceProviderContribution]]  Contribution Module Typescript file\n ```\n import { ValidationResult } from \"wi-studio/common/models/validation\";\n import { IActivityContribution, IContributionContext } from \"wi-studio/common/models/contrib\";\n import { Injectable, Inject, Injector } from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import { Http } from \"@angular/http\";\n import { AbstractContribFieldProvider, AbstractContribValidationProvider, WiContrib, WiServiceContribution } from \"wi-studio/app/wi-contrib\";\n import {IValidationResult} from \"wi-studio/common/models/validation\";\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n   getFieldValue(context: IActivityContribution): Observable<string[]> {\n       return Observable.create(observer => {\n           observer.next(\"\");\n      });\n   }}\n @Injectable()\n export class Field1ValidationProvider extends AbstractContribValidationProvider {\n    validate(context: IContributionContext): Observable<IValidationResult> {\n        return Observable.create(observer => {\n            // tslint:disable-next-line:no-bitwise\n            let vresult: IValidationResult = ValidationResult.newValidationResult();\n            observer.next(vresult);\n        });\n    }}\n\n @WiContrib({\n    validationProviders: [{\n           field: \"field1\",\n            useClass: Field1ValidationProvider\n        }],\n    fieldProviders: [{\n            field: \"field1\",\n            useClass: Field1Provider\n        }]\n })\n @Injectable()\n export class TimerContribService extends WiServiceProviderContribution {}\n```\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 551,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "constructor"
							},
							"signatures": [
								{
									"id": 552,
									"name": "new WiServiceProviderContribution",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "constructor"
									},
									"parameters": [
										{
											"id": 553,
											"name": "injector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Injector"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Injector"
											}
										},
										{
											"id": 554,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Http"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Http"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiServiceProviderContribution",
										"id": 550
									},
									"overwrites": {
										"type": "reference",
										"name": "WiServiceContribution.__constructor",
										"id": 536
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 523,
									"character": 125
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "WiServiceContribution.__constructor",
								"id": 536
							}
						},
						{
							"id": 561,
							"name": "getActionHandler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 562,
									"name": "getActionHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "get action provider"
									},
									"parameters": [
										{
											"id": 563,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribActionProvider",
										"id": 250
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getActionHandler",
										"id": 337
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 572,
									"character": 20
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getActionHandler",
								"id": 336
							}
						},
						{
							"id": 566,
							"name": "getAnnotations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 567,
									"name": "getAnnotations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "get annotation from metadata"
									},
									"type": {
										"type": "reference",
										"name": "WiContribMetaData",
										"id": 531
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getAnnotations",
										"id": 544
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 415,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getAnnotations",
								"id": 544
							}
						},
						{
							"id": 555,
							"name": "getFieldProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 556,
									"name": "getFieldProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "get field provider"
									},
									"parameters": [
										{
											"id": 557,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribFieldProvider",
										"id": 246
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getFieldProvider",
										"id": 331
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 538,
									"character": 20
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getFieldProvider",
								"id": 330
							}
						},
						{
							"id": 570,
							"name": "getHttp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 571,
									"name": "getHttp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the [[Http]] object",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Http"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getHttp",
										"id": 548
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 434,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getHttp",
								"id": 548
							}
						},
						{
							"id": 568,
							"name": "getInjector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 569,
									"name": "getInjector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the injector",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Injector"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getInjector",
										"id": 546
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 425,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getInjector",
								"id": 546
							}
						},
						{
							"id": 564,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 565,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 446
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getType",
										"id": 542
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getType",
										"id": 340
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 402,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getType",
								"id": 542
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getType",
								"id": 339
							}
						},
						{
							"id": 558,
							"name": "getValidationProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 559,
									"name": "getValidationProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "get validation provider"
									},
									"parameters": [
										{
											"id": 560,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribValidationProvider",
										"id": 242
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getValidationProvider",
										"id": 334
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 555,
									"character": 25
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getValidationProvider",
								"id": 333
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								551
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								561,
								566,
								555,
								570,
								568,
								564,
								558
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 523,
							"character": 51
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "WiServiceContribution",
							"id": 535
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 326
						},
						{
							"type": "reference",
							"name": "IWiServiceProviderContribution",
							"id": 329
						}
					]
				},
				{
					"id": 524,
					"name": "IContribActionProviderMap",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action Provider Map"
					},
					"children": [
						{
							"id": 525,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Field Name"
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 89,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 526,
							"name": "useClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Action Provider Class"
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 93,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IContribActionProvider",
										"id": 250
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								525,
								526
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 85,
							"character": 42
						}
					]
				},
				{
					"id": 521,
					"name": "IContribFieldProviderMap",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "field provider map"
					},
					"children": [
						{
							"id": 522,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 78,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 523,
							"name": "useClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 79,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IContribFieldProvider",
										"id": 246
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								522,
								523
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 77,
							"character": 41
						}
					]
				},
				{
					"id": 514,
					"name": "IContribValidationProviderMap",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "interface Validation provider map"
					},
					"children": [
						{
							"id": 515,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 51,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 516,
							"name": "useClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 52,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IContribValidationProvider",
										"id": 242
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								515,
								516
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 50,
							"character": 46
						}
					]
				},
				{
					"id": 531,
					"name": "WiContribMetaData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Type of the WiContrib metadata."
					},
					"children": [
						{
							"id": 534,
							"name": "actionProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Defines the set of action providers that are available in the contribution\nof this module.\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ActionProvider extends AbstractActionProvider {\n  handleAction(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceProviderContribution {}\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 235,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IContribActionProviderMap",
									"id": 524
								}
							}
						},
						{
							"id": 533,
							"name": "fieldProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Defines the set of validation providers that are available in the contribution\nof this module.\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1Provider extends AbstractContribFieldProvider {\n  getFieldValue(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 192,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IContribFieldProviderMap",
									"id": 521
								}
							}
						},
						{
							"id": 532,
							"name": "validationProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the set of validation providers that are available in the contribution\nof this module.",
								"text": "## Simple Example\n\nHere is an example of a validation provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ValidationProvider extends AbstractContribValidationProvider {\n     validate(context: IContributionContext): Observable<IValidationResult> {\n         return Observable.create(observer => {\n              let vresult: IValidationResult = ValidationResult.newValidationResult();\n                     observer.next(vresult);\n          });\n     }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```\n"
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 155,
									"character": 23
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IContribValidationProviderMap",
									"id": 514
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								534,
								533,
								532
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 117,
							"character": 34
						}
					]
				},
				{
					"id": 686,
					"name": "WI_CONTRIB_SYMBOL",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"tags": [
							{
								"tag": "type",
								"text": "{symbol}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 111,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "symbol"
					},
					"defaultValue": " Symbol(\"@WiContrib\")"
				},
				{
					"id": 687,
					"name": "WiContrib",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 688,
							"name": "WiContrib",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "This decorator and annotation indicates the typescript class is a Web Integrator contribution\n## Example\n```\n\n  @WiContrib()\n  class RestService {}\n```\n\n"
									},
									{
										"tag": "constructor",
										"text": "\n"
									}
								]
							},
							"parameters": [
								{
									"id": 689,
									"name": "metadata",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "WiContribMetaData",
										"id": 531
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 690,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 691,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 692,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Function"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "app/contrib/wi-contrib.ts",
											"line": 785,
											"character": 55
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 785,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						527,
						517,
						510,
						653,
						600,
						616,
						535,
						572,
						550
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						524,
						521,
						514,
						531
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						686
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						687
					]
				}
			],
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 133,
			"name": "\"common/models/contrib\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/src/client/common/models/contrib.ts",
			"children": [
				{
					"id": 307,
					"name": "ActionResult",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action Result implementation"
					},
					"children": [
						{
							"id": 313,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {},
							"signatures": [
								{
									"id": 314,
									"name": "new ActionResult",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 315,
											"name": "result",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 40
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ActionResult",
										"id": 307
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 863,
									"character": 5
								}
							]
						},
						{
							"id": 309,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 854,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IValidationError",
										"id": 40
									},
									{
										"type": "reference",
										"name": "IAuthenticationResult",
										"id": 283
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.result",
								"id": 272
							}
						},
						{
							"id": 308,
							"name": "success",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 853,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.success",
								"id": 271
							}
						},
						{
							"id": 324,
							"name": "getResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 325,
									"name": "getResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "get Result Data",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IActionResult.getResult",
										"id": 282
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 907,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.getResult",
								"id": 281
							}
						},
						{
							"id": 316,
							"name": "isSuccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 317,
									"name": "isSuccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns if the action is successful or not",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IActionResult.isSuccess",
										"id": 274
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 879,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.isSuccess",
								"id": 273
							}
						},
						{
							"id": 321,
							"name": "setResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 322,
									"name": "setResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set result data",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 323,
											"name": "result",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 40
													},
													{
														"type": "reference",
														"name": "IAuthenticationResult",
														"id": 283
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 270
									},
									"implementationOf": {
										"type": "reference",
										"name": "IActionResult.setResult",
										"id": 279
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 898,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.setResult",
								"id": 278
							}
						},
						{
							"id": 318,
							"name": "setSuccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 319,
									"name": "setSuccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "set success or failure boolean state",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 320,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 270
									},
									"implementationOf": {
										"type": "reference",
										"name": "IActionResult.setSuccess",
										"id": 276
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 888,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.setSuccess",
								"id": 275
							}
						},
						{
							"id": 310,
							"name": "newActionResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 311,
									"name": "newActionResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "static constructor",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 312,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 40
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 270
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 861,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								313
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								309,
								308
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								324,
								316,
								321,
								318,
								310
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 852,
							"character": 25
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IActionResult",
							"id": 270
						}
					]
				},
				{
					"id": 287,
					"name": "AuthenticationResult",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "AuthenticationResult implementation"
					},
					"children": [
						{
							"id": 294,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "constructor"
							},
							"signatures": [
								{
									"id": 295,
									"name": "new AuthenticationResult",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "constructor"
									},
									"parameters": [
										{
											"id": 296,
											"name": "atype",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"name": "AUTHENTICATION_TYPE",
												"id": 432
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "AuthenticationResult",
										"id": 287
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 785,
									"character": 5
								}
							]
						},
						{
							"id": 290,
							"name": "authData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 776,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "IOAuthData",
								"id": 388
							},
							"implementationOf": {
								"type": "reference",
								"name": "IAuthenticationResult.authData",
								"id": 286
							}
						},
						{
							"id": 288,
							"name": "authType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 774,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "AUTHENTICATION_TYPE",
								"id": 432
							},
							"implementationOf": {
								"type": "reference",
								"name": "IAuthenticationResult.authType",
								"id": 284
							}
						},
						{
							"id": 289,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 775,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IConnectorContribution",
								"id": 216
							},
							"implementationOf": {
								"type": "reference",
								"name": "IAuthenticationResult.context",
								"id": 285
							}
						},
						{
							"id": 302,
							"name": "getAuthData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 303,
									"name": "getAuthData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the Authentication Data Object {{IOAuthData}} which holds the information for {AUTHENTICATION_TYPE.BASIC}\nOR\nReturns the Authentication Data Object {{IOAuthData}} which holds\nthe information for {AUTHENTICATION_TYPE.OAUTH1} | {AUTHENTICATION_TYPE.OAUTH2} |{AUTHENTICATION_TYPE.OAUTH2_TWOLEG}\ntype authentication mechanisms. The contribution developer needs to provide this information based on which\nthe contribution mechanism will introspect the callback return state information. It is not assumed that every authentication\ntype will not have this information requirement as it may not involve a callback. In case of OAUTH type authentication\nit is also not assumed that the state information is available by introspecting a fixed parameter name e.g. \"state\" so\nthe contribution developer need to provide this based on the SAAS authentication provider specifications.",
										"returns": "| {IBasicAuthData}\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IOAuthData",
												"id": 388
											},
											{
												"type": "reference",
												"name": "IBasicAuthData",
												"id": 386
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 827,
									"character": 15
								}
							]
						},
						{
							"id": 297,
							"name": "getContext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 298,
									"name": "getContext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "desc",
												"text": "Returns the Connector contribution JSON object which has the\nwhole connection context object passed to the Handler or Provider\nand gives the connector contribution mechanism to identify the connection\ninstance being created."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "IConnectorContribution",
										"id": 216
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 802,
									"character": 14
								}
							]
						},
						{
							"id": 304,
							"name": "setAuthData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 305,
									"name": "setAuthData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Authentication Data Object {{IOAuthData}} which holds the information for {AUTHENTICATION_TYPE.BASIC}\nOR\nSets the Authentication Data Object {{IOAuthData}} which holds\nthe information for {AUTHENTICATION_TYPE.OAUTH1} | {AUTHENTICATION_TYPE.OAUTH2} |{AUTHENTICATION_TYPE.OAUTH2_TWOLEG}\ntype authentication mechanisms. The contribution developer needs to provide this information based on which\nthe contribution mechanism will introspect the callback return state information. It is not assumed that every authentication\ntype will not have this information requirement as it may not involve a callback. In case of OAUTH type authentication\nit is also not assumed that the state information is available by introspecting a fixed parameter name e.g. \"state\" so\nthe contribution developer need to provide this based on the SAAS authentication provider specifications."
									},
									"parameters": [
										{
											"id": 306,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IOAuthData",
												"id": 388
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 843,
									"character": 15
								}
							]
						},
						{
							"id": 299,
							"name": "setContext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 300,
									"name": "setContext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "desc",
												"text": "Sets the connection context object passed to the Handler or Provider\nand gives the connector contribution mechanism to identify the connection"
											}
										]
									},
									"parameters": [
										{
											"id": 301,
											"name": "ctx",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IConnectorContribution",
												"id": 216
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 811,
									"character": 14
								}
							]
						},
						{
							"id": 291,
							"name": "newAuthenticationResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 292,
									"name": "newAuthenticationResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "static constructor",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 293,
											"name": "atype",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "AUTHENTICATION_TYPE",
												"id": 432
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IAuthenticationResult",
										"id": 283
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 783,
									"character": 34
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								294
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								290,
								288,
								289
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								302,
								297,
								304,
								299,
								291
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 773,
							"character": 33
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IAuthenticationResult",
							"id": 283
						}
					]
				},
				{
					"id": 134,
					"name": "ContributionTypeConverter",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Contribution type converter from Flogo types"
					},
					"children": [
						{
							"id": 135,
							"name": "fromString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 136,
									"name": "fromString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 137,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CONTRIBUTION_TYPE",
										"id": 406
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 19,
									"character": 28
								}
							]
						},
						{
							"id": 138,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 139,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 140,
											"name": "ctype",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CONTRIBUTION_TYPE",
												"id": 406
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 31,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								135,
								138
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 18,
							"character": 38
						}
					]
				},
				{
					"id": 391,
					"name": "OAuthData",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "IOAuthData implementation",
						"tags": [
							{
								"tag": "desc",
								"text": "Helper class to create {{IOAuthData}} objects\n"
							}
						]
					},
					"children": [
						{
							"id": 398,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "constructor"
							},
							"signatures": [
								{
									"id": 399,
									"name": "new OAuthData",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "constructor"
									},
									"parameters": [
										{
											"id": 400,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 401,
											"name": "stateQueryParam",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OAuthData",
										"id": 391
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1123,
									"character": 5
								}
							]
						},
						{
							"id": 392,
							"name": "authLoginUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1112,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IOAuthData.authLoginUrl",
								"id": 389
							}
						},
						{
							"id": 393,
							"name": "authStateQueryParam",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1113,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IOAuthData.authStateQueryParam",
								"id": 390
							}
						},
						{
							"id": 402,
							"name": "getAuthLoginURL",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 403,
									"name": "getAuthLoginURL",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "desc",
												"text": "Returns the Authentication Login URL provided by the Connector without any state information parameters"
											},
											{
												"tag": "example",
												"text": "https://login.salesforce.com/services/oauth2/authorize?response_type=code&client_id=CLIENTID&redirect_uri=REDIRECTURL&display=popup&prompt=login consent\n where REDIRECT_URL=https://localdev-integration.cloud.tibco.com/wistudio/connectiondetails\n NOTE: state information parameter for Salesforce \"state\" is not part of the URL"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1142,
									"character": 19
								}
							]
						},
						{
							"id": 404,
							"name": "getAuthStateQueryParam",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 405,
									"name": "getAuthStateQueryParam",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the property which tells the Contribution Model what is the state information parameter name being used by the OAUTH provider\nto return state of the Application before making the authentication request to the SAAS authentication provider.",
										"returns": "\n",
										"tags": [
											{
												"tag": "example",
												"text": "For Saleforce the state information parameter is \"state\""
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1152,
									"character": 26
								}
							]
						},
						{
							"id": 394,
							"name": "newOAuthData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 395,
									"name": "newOAuthData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "static constructor",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 396,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 397,
											"name": "stateQueryParam",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OAuthData",
										"id": 391
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1121,
									"character": 23
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								398
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								392,
								393
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								402,
								404,
								394
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1111,
							"character": 22
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IOAuthData",
							"id": 388
						}
					]
				},
				{
					"id": 213,
					"name": "IActionDefinition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action Definition interface"
					},
					"children": [
						{
							"id": 215,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Button display settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 405,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IFieldDisplay",
								"id": 144
							}
						},
						{
							"id": 214,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Unique name to identify the button. If display name is not provided name will be used."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 401,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215,
								214
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 397,
							"character": 34
						}
					]
				},
				{
					"id": 270,
					"name": "IActionResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The result of any button action is return values."
					},
					"children": [
						{
							"id": 272,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "if the action is a failure then any associated errors are returned.\nOR Authentication Results OR any"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 712,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IValidationError",
										"id": 40
									},
									{
										"type": "reference",
										"name": "IAuthenticationResult",
										"id": 283
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 271,
							"name": "success",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "property hold status if the action was a success or a failure"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 707,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 281,
							"name": "getResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 282,
									"name": "getResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "property getter for [[result]]",
										"returns": "\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationError",
												"id": 40
											},
											{
												"type": "reference",
												"name": "IAuthenticationResult",
												"id": 283
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 738,
									"character": 13
								}
							]
						},
						{
							"id": 273,
							"name": "isSuccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 274,
									"name": "isSuccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " getter function of [[success]] property",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 718,
									"character": 13
								}
							]
						},
						{
							"id": 278,
							"name": "setResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 279,
									"name": "setResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "property setter for [[result]]",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 280,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 40
													},
													{
														"type": "reference",
														"name": "IAuthenticationResult",
														"id": 283
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 270
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 732,
									"character": 13
								}
							]
						},
						{
							"id": 275,
							"name": "setSuccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 276,
									"name": "setSuccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "property setter for [[success]]",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 277,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 270
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 725,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								272,
								271
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								281,
								273,
								278,
								275
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 703,
							"character": 30
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "ActionResult",
							"id": 307
						}
					]
				},
				{
					"id": 199,
					"name": "IActivityContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Activity Contribution"
					},
					"children": [
						{
							"id": 212,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 71,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.appId",
								"id": 143
							}
						},
						{
							"id": 211,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.changelist",
								"id": 142
							}
						},
						{
							"id": 205,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display Settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 377,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IContributionDisplay",
								"id": 174
							}
						},
						{
							"id": 206,
							"name": "inputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity Inputs"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 381,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 165
								}
							}
						},
						{
							"id": 200,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity name, must be unique, no spaces"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 357,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 207,
							"name": "outputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity Outputs"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 385,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 165
								}
							}
						},
						{
							"id": 204,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "URI reference for the contribution"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 373,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 201,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Title to display on the activity tile"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 361,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 203,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 369,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 202,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Version number, use semver versioning"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 365,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 208,
							"name": "getField",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 209,
									"name": "getField",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a field from inputs,outputs. Field Names must be unique within the activity"
									},
									"parameters": [
										{
											"id": 210,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IFieldDefinition",
										"id": 165
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 391,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								212,
								211,
								205,
								206,
								200,
								207,
								204,
								201,
								203,
								202
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								208
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 353,
							"character": 38
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IContributionContext",
							"id": 141
						}
					]
				},
				{
					"id": 283,
					"name": "IAuthenticationResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents the Authentication Result data structure returned by the\nconnector contribution developer when a OAUTH login action is invoked from the\nconnector form buttons defined in connector.json",
						"text": "The {{IAuthenticationResult}} is returned with the {{IActionResult}} result\nparameter.\n"
					},
					"children": [
						{
							"id": 286,
							"name": "authData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Depending on {{AUTHENTICATION_TYPE}} authData will hold different\ntypes of Data Interfaces.\n * {{AUTHENTICATION_TYPE.BASIC}} : {{IBasicAuthData}}\n * {{AUTHENTICATION_TYPE.OAUTH1}} : {{IOAuthData}}\n * {{AUTHENTICATION_TYPE.OAUTH2}} : {{IOAuthData}}\n * {{AUTHENTICATION_TYPE.OAUTH2_TWOLEG}} : {{IOAuthData}}"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 766,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IOAuthData",
										"id": 388
									},
									{
										"type": "reference",
										"name": "IBasicAuthData",
										"id": 386
									}
								]
							}
						},
						{
							"id": 284,
							"name": "authType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The {{AUTHENTICATION_TYPE}} being used for the action result"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 753,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "AUTHENTICATION_TYPE",
								"id": 432
							}
						},
						{
							"id": 285,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The contribution context being used in the action handler OR provider"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 757,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IConnectorContribution",
								"id": 216
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								286,
								284,
								285
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 749,
							"character": 38
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AuthenticationResult",
							"id": 287
						}
					]
				},
				{
					"id": 326,
					"name": "IBaseServiceContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Base Service Contribution"
					},
					"children": [
						{
							"id": 327,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 328,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 446
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 927,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								327
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 922,
							"character": 41
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IWiServiceProviderContribution",
							"id": 329
						},
						{
							"type": "reference",
							"name": "IWiServiceHandlerContribution",
							"id": 341
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "WiServiceContribution",
							"id": 535
						},
						{
							"type": "reference",
							"name": "WiServiceHandlerContribution",
							"id": 572
						},
						{
							"type": "reference",
							"name": "WiServiceProviderContribution",
							"id": 550
						}
					]
				},
				{
					"id": 386,
					"name": "IBasicAuthData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents the OAUTH data structure in {{IAuthenticationResult}} returned by the\nconnector contribution developer when a OAUTH login action is invoked from the\nconnector form buttons defined in connector.json",
						"text": "Authentication Data Structure if {AUTHENTICATION_TYPE} is\n * {AUTHENTICATION_TYPE.BASIC}\n"
					},
					"children": [
						{
							"id": 387,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1077,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								387
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1076,
							"character": 31
						}
					]
				},
				{
					"id": 162,
					"name": "IConnectionAllowedValue",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "desc",
								"text": "This interface defines the contract between the value provider of a field\nwhose display field type is {{DisplayFieldType.connection}}.\n"
							}
						]
					},
					"children": [
						{
							"id": 164,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This is a name which is either calculated or provided via field value\nin the connection JSON settings. In absence of name unique_id will be\nused for display as a drop down choice."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 200,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 163,
							"name": "unique_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "desc",
										"text": "This is the unique id assigned to a new connection during creation"
									},
									{
										"tag": "example",
										"text": "uuid\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 194,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								164,
								163
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 189,
							"character": 40
						}
					]
				},
				{
					"id": 216,
					"name": "IConnectorContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Connector Contribution"
					},
					"children": [
						{
							"id": 225,
							"name": "actions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Form Action configuration"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 465,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IActionDefinition",
									"id": 213
								}
							}
						},
						{
							"id": 227,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 71,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.appId",
								"id": 143
							}
						},
						{
							"id": 226,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.changelist",
								"id": 142
							}
						},
						{
							"id": 223,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display Settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 441,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IContributionDisplay",
								"id": 174
							}
						},
						{
							"id": 222,
							"name": "keyfield",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Provider the field name in settings section which will hold identifiable\nname for the connection. In the absence of this keyfield the unique\nconnection record identifier e.g. uuid will be used for display."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 437,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 217,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Connector name. Must be unique, no spaces"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 415,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 221,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "URI reference for connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 431,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 224,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Static connector configurations e.g. connection name, connection description, connection configuration etc.",
								"text": "FOR {{AUTHENTICATION_TYPE}} IS {{AUTHENTICATION_TYPE.OAUTH1 }} | {{AUTHENTICATION_TYPE.OAUTH2 }} | {{AUTHENTICATION_TYPE.OAUTH2_TWOLEG }}\nFIXED ReEntry Field Name **WI_STUDIO_OAUTH_CONNECTOR_INFO** is mandatory.\n\nThis field is not required for other Authentication purposes where it does not\ninvolve a round trip to the third party auth system with a callback\nThe user can save all the required authentication tokens in this field which is\nthen used by the activity contribution developer to use this information.\n\n{\n  \"name\" : \"WI_STUDIO_OAUTH_CONNECTOR_INFO\",\n  \"type\" : \"string\",\n  \"display\": {\n     \"visible\": false\n  }\n }\n"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 461,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 165
								}
							}
						},
						{
							"id": 218,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Title to display on the connection tile"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 419,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 220,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 427,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 219,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Connector version. Must follow semver versioning"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 423,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								225,
								227,
								226,
								223,
								222,
								217,
								221,
								224,
								218,
								220,
								219
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 411,
							"character": 39
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IContributionContext",
							"id": 141
						}
					]
				},
				{
					"id": 250,
					"name": "IContribActionProvider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "interface Action handler provider"
					},
					"children": [
						{
							"id": 251,
							"name": "handleAction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 252,
									"name": "handleAction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "handle action",
										"returns": "\n",
										"tags": [
											{
												"tag": "typeparam",
												"text": "The generic type parameter indicating the value type being returned.",
												"param": "T"
											}
										]
									},
									"parameters": [
										{
											"id": 253,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 445
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 601,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								251
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 593,
							"character": 39
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AbstractContribActionProvider",
							"id": 527
						}
					]
				},
				{
					"id": 246,
					"name": "IContribFieldProvider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "interface Field Provider"
					},
					"children": [
						{
							"id": 247,
							"name": "getFieldValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 248,
									"name": "getFieldValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets Field Value",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 249,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 445
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 587,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								247
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 580,
							"character": 38
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AbstractContribFieldProvider",
							"id": 517
						}
					]
				},
				{
					"id": 242,
					"name": "IContribValidationProvider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "interface Validation provider"
					},
					"children": [
						{
							"id": 243,
							"name": "validate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 244,
									"name": "validate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "validate",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 245,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 445
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationResult",
												"id": 79
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 79
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 574,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								243
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 568,
							"character": 43
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AbstractContribValidationProvider",
							"id": 510
						}
					]
				},
				{
					"id": 141,
					"name": "IContributionContext",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The UI form sends the IContributionContext"
					},
					"children": [
						{
							"id": 143,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 71,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 142,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								143,
								142
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 69,
							"character": 37
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ITriggerContribution",
							"id": 184
						},
						{
							"type": "reference",
							"name": "IActivityContribution",
							"id": 199
						},
						{
							"type": "reference",
							"name": "IConnectorContribution",
							"id": 216
						}
					]
				},
				{
					"id": 174,
					"name": "IContributionDisplay",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Display attributes for the contribution"
					},
					"children": [
						{
							"id": 176,
							"name": "category",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Specifies the category of the contribution e.g. Salesforce,Marketo , default is \"General\""
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 261,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 180,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Description"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 277,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 179,
							"name": "largeIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the small icon path. The path is relative to the contribution folder root. i.e. icons/file.png"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 273,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 175,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "display name for the contribution"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 257,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 181,
							"name": "sections",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sections for dynamic tabs"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 281,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 178,
							"name": "smallIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the small icon path. The path is relative to the contribution folder root. i.e. icons/file.png"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 269,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 177,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies if a contribution is visible and enabled"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 265,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								176,
								180,
								179,
								175,
								181,
								178,
								177
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 253,
							"character": 37
						}
					]
				},
				{
					"id": 254,
					"name": "IContributionHandler",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " Contribution Handler interface",
						"tags": [
							{
								"tag": "description",
								"text": "A comtribution handler implementation provides the following handlers\n * value - value provider for the given field\n * validate - vrules provider for the given field\n * action - action handler for a given button.\n"
							}
						]
					},
					"children": [
						{
							"id": 265,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional action handler for form buttons\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "actionId"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 697,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 266,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 267,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 268,
													"name": "actionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 269,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 445
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 270
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 270
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 697,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 260,
							"name": "validate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Validate a specified field name parameter\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 668,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 261,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 262,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 263,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 264,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 445
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IValidationResult",
																"id": 79
															}
														]
													},
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 79
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 668,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 255,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
								"text": "Here is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```",
								"tags": [
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 640,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 256,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 257,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 258,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 259,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 445
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 640,
											"character": 10
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								265,
								260,
								255
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 613,
							"character": 37
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IWiServiceHandlerContribution",
							"id": 341
						}
					]
				},
				{
					"id": 165,
					"name": "IFieldDefinition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Field Definition"
					},
					"children": [
						{
							"id": 170,
							"name": "allowed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "specified allowed value for display field type \"dropdown\", keeping it same as flogo\nFor field display type == {{DisplayFieldType.connections}} then allowed property should\nreturn array of {{IConnectionAllowedValue}}"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 235,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IConnectionAllowedValue",
											"id": 162
										}
									}
								]
							}
						},
						{
							"id": 172,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Description"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 243,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 173,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Field display settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 247,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IFieldDisplay",
								"id": 144
							}
						},
						{
							"id": 166,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "name of the field, not same as display name"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 217,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 169,
							"name": "required",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "specifies if the form field is required"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 229,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 171,
							"name": "section",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to place the field in a customized form tab section"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 239,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 167,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "data type of the field in string e.g. string,number"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 221,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "FieldType",
								"id": 442
							}
						},
						{
							"id": 168,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "value of the field"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 225,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								170,
								172,
								173,
								166,
								169,
								171,
								167,
								168
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 213,
							"character": 33
						}
					]
				},
				{
					"id": 144,
					"name": "IFieldDisplay",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Field display settings"
					},
					"children": [
						{
							"id": 155,
							"name": "buttonStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Button Styles when display type is button. Default style is \"btn-default\""
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 156,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonStyle",
								"id": 430
							}
						},
						{
							"id": 154,
							"name": "buttonType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the button type. Default type is \"button\""
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 152,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonType",
								"id": 428
							}
						},
						{
							"id": 148,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Descrption for the field"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 128,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 149,
							"name": "fileExtensions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used with display field type fileselector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 132,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 160,
							"name": "inputSettingsOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display in only Input Settings but not in mapper"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 177,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 150,
							"name": "mappable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "true when field is also shown in mapper, else false"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 136,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 145,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Named used in display"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 116,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 161,
							"name": "outputSettingsOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display in only Output Settings but not in output tree"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 182,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 156,
							"name": "readonly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sets the widget in read-only mode"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 160,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 152,
							"name": "schema",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used with display field type table"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 144,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 147,
							"name": "selection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used with display field type dropdown"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 124,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 159,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display in only mapper but not on input settings/ output settings even though there is display section"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 172,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 151,
							"name": "syntax",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": " Used with display field type texteditor"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 140,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 146,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display field type"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 120,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "DisplayFieldType",
								"id": 426
							}
						},
						{
							"id": 158,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 167,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 157,
							"name": "valid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether the field is valid or not"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 164,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 153,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "specifies if the field is visible , the field is always enabled. The default is true."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 148,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								155,
								154,
								148,
								149,
								160,
								150,
								145,
								161,
								156,
								152,
								147,
								159,
								151,
								146,
								158,
								157,
								153
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 112,
							"character": 30
						}
					]
				},
				{
					"id": 228,
					"name": "IFunctionArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Function args"
					},
					"children": [
						{
							"id": 231,
							"name": "array",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates if the argument should be an array.\nFalse by default.\nThis field in combination with type determine the expected parameter type.",
								"tags": [
									{
										"tag": "example",
										"text": "\n { name: \"example\", type: \"string\", array: true } means function expects a parameter of type string[] or Array<string>\n\n @default false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 491,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 229,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Argument name"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 476,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 232,
							"name": "required",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates that the argument is required. Otherwise it will be considered as optional.\nTrue by default.",
								"text": "* @default true\n"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 498,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 230,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Argument type",
								"tags": [
									{
										"tag": "example",
										"text": "string, integer, object, boolean, any\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 481,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 233,
							"name": "variable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates that the function can handle an indefinite number of arguments starting in this argument's position.\nFalse by default.\nOnly allowed for trailing arguments.",
								"text": "This flag works in combination with the \"required\" flag in the following way:\nvariable=true and required=true => argument expected one or more times\nvariable=true and required=false => argument expected zero or more times\n",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 510,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								231,
								229,
								232,
								230,
								233
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 472,
							"character": 30
						}
					]
				},
				{
					"id": 237,
					"name": "IFunctionContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Function contribution"
					},
					"children": [
						{
							"id": 240,
							"name": "args",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Function argument definition"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 548,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFunctionArgs",
									"id": 228
								}
							}
						},
						{
							"id": 239,
							"name": "category",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Function category"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 544,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 238,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Name of the function"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 540,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 241,
							"name": "return",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Return information"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 552,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "IFunctionReturn",
								"id": 234
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								240,
								239,
								238,
								241
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 536,
							"character": 38
						}
					]
				},
				{
					"id": 234,
					"name": "IFunctionReturn",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Function return"
					},
					"children": [
						{
							"id": 236,
							"name": "array",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates if the argument should be an array.\nFalse by default.\nThis field in combination with type determine the expected parameter type.",
								"tags": [
									{
										"tag": "default",
										"text": "false"
									},
									{
										"tag": "example",
										"text": "\n { type: \"string\", array: true } means function expects a parameter of type string[] or Array<string>\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 530,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 235,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Argument type",
								"tags": [
									{
										"tag": "example",
										"text": "string, integer, object, boolean, any\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 521,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								236,
								235
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 516,
							"character": 32
						}
					]
				},
				{
					"id": 182,
					"name": "IHandlerDefinition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Endpoint Definition"
					},
					"children": [
						{
							"id": 183,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Endpoint settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 299,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 165
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								183
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 295,
							"character": 35
						}
					]
				},
				{
					"id": 388,
					"name": "IOAuthData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents the OAUTH data structure in {IAuthenticationResult} returned by the\nconnector contribution developer when a OAUTH login action is invoked from the\nconnector form buttons defined in connector.json",
						"text": "Authentication Data Structure if {AUTHENTICATION_TYPE} is\n * {AUTHENTICATION_TYPE.OAUTH1}\n * {AUTHENTICATION_TYPE.OAUTH2}\n * {AUTHENTICATION_TYPE.OAUTH2_TWOLEG}\n"
					},
					"children": [
						{
							"id": 389,
							"name": "authLoginUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Authentication Login URL provided by the Connector without any state information parameters",
								"tags": [
									{
										"tag": "example",
										"text": "https://login.salesforce.com/services/oauth2/authorize?response_type=code&client_id=CLIENTID&redirect_uri=REDIRECTURL&display=popup&prompt=login consent\n where REDIRECT_URL=https://localdev-integration.cloud.tibco.com/wistudio/connectiondetails\n NOTE: state information parameter for Salesforce \"state\" is not part of the URL\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1098,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 390,
							"name": "authStateQueryParam",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This property will tell the Contribution Model what is the state information parameter name being used by the OAUTH provider\nto return state of the Application before making the authentication request to the SAAS authentication provider.",
								"tags": [
									{
										"tag": "example",
										"text": "For Saleforce the state information parameter is \"state\"\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1104,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								389,
								390
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1091,
							"character": 27
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "OAuthData",
							"id": 391
						}
					]
				},
				{
					"id": 184,
					"name": "ITriggerContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Trigger Contribution interface"
					},
					"children": [
						{
							"id": 198,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 71,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.appId",
								"id": 143
							}
						},
						{
							"id": 197,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.changelist",
								"id": 142
							}
						},
						{
							"id": 190,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display Settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 329,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IContributionDisplay",
								"id": 174
							}
						},
						{
							"id": 192,
							"name": "handler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger handler endpoint settings, e.g. for each port setting there can be multiple handlers"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 337,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IHandlerDefinition",
								"id": 182
							}
						},
						{
							"id": 185,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " trigger name, must be unique, no spaces"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 309,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 193,
							"name": "outputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger output fields"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 341,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 165
								}
							}
						},
						{
							"id": 189,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "URI reference for the contribution"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 325,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 191,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger static settings i.e. port number, logging etc."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 333,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 165
								}
							}
						},
						{
							"id": 186,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Title to display on the trigger tile"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 313,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 321,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 187,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Version number , use semver versioning"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 317,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 194,
							"name": "getField",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 195,
									"name": "getField",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a field from settings,endpoint,outputs. Field names must be unique within the trigger"
									},
									"parameters": [
										{
											"id": 196,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IFieldDefinition",
										"id": 165
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 347,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								198,
								197,
								190,
								192,
								185,
								193,
								189,
								191,
								186,
								188,
								187
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								194
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 305,
							"character": 37
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IContributionContext",
							"id": 141
						}
					]
				},
				{
					"id": 359,
					"name": "IWiServiceContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Service contribution interface"
					},
					"children": [
						{
							"id": 372,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional action handler for form buttons\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "actionId"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 697,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 373,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 374,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 375,
													"name": "actionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 376,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 445
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 270
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 270
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 697,
											"character": 12
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.action",
								"id": 265
							}
						},
						{
							"id": 367,
							"name": "validate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Validate a specified field name parameter\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 668,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 368,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 369,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 370,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 371,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 445
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IValidationResult",
																"id": 79
															}
														]
													},
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 79
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 668,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.validate",
								"id": 260
							}
						},
						{
							"id": 362,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
								"text": "Here is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```",
								"tags": [
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 640,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 363,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 364,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 365,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 366,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 445
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 640,
											"character": 10
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.value",
								"id": 255
							}
						},
						{
							"id": 383,
							"name": "getActionHandler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 384,
									"name": "getActionHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the action provider for a given button field in the form.\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ActionProvider extends AbstractActionProvider {\n  handleAction(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceProviderContribution {}\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 385,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribActionProvider",
										"id": 250
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getActionHandler",
										"id": 336
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1053,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getActionHandler",
								"id": 336
							}
						},
						{
							"id": 377,
							"name": "getFieldProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 378,
									"name": "getFieldProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the FieldProvider for a given field.\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n  getFieldValue(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 379,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribFieldProvider",
										"id": 246
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getFieldProvider",
										"id": 330
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 970,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getFieldProvider",
								"id": 330
							}
						},
						{
							"id": 360,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 361,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 446
									},
									"overwrites": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 327
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 327
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 927,
									"character": 11
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 327
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 327
							}
						},
						{
							"id": 380,
							"name": "getValidationProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 381,
									"name": "getValidationProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the vrules provider for a given field.\n\nHere is an example of a vrules provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ValidationProvider extends AbstractContribValidationProvider {\n     validate(context: IContributionContext): Observable<IValidationResult> {\n         return Observable.create(observer => {\n              let vresult: IValidationResult = ValidationResult.newValidationResult();\n                     observer.next(vresult);\n          });\n     }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 382,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribValidationProvider",
										"id": 242
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getValidationProvider",
										"id": 333
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1008,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getValidationProvider",
								"id": 333
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								372,
								367,
								362
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								383,
								377,
								360,
								380
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1065,
							"character": 39
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IWiServiceHandlerContribution",
							"id": 341
						},
						{
							"type": "reference",
							"name": "IWiServiceProviderContribution",
							"id": 329
						}
					]
				},
				{
					"id": 341,
					"name": "IWiServiceHandlerContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Handler Service contribution interface"
					},
					"children": [
						{
							"id": 354,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional action handler for form buttons\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "actionId"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 697,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 355,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 356,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 357,
													"name": "actionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 358,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 445
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 270
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 270
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 697,
											"character": 12
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.action",
								"id": 265
							}
						},
						{
							"id": 349,
							"name": "validate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Validate a specified field name parameter\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 668,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 350,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 351,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 352,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 353,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 445
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IValidationResult",
																"id": 79
															}
														]
													},
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 79
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 668,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.validate",
								"id": 260
							}
						},
						{
							"id": 344,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
								"text": "Here is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```",
								"tags": [
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 640,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 345,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 346,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 347,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 348,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 445
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 640,
											"character": 10
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.value",
								"id": 255
							}
						},
						{
							"id": 342,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 343,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 446
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 327
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 927,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 327
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								354,
								349,
								344
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								342
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1059,
							"character": 46
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 326
						},
						{
							"type": "reference",
							"name": "IContributionHandler",
							"id": 254
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IWiServiceContribution",
							"id": 359
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "WiServiceHandlerContribution",
							"id": 572
						}
					]
				},
				{
					"id": 329,
					"name": "IWiServiceProviderContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Provider Service contribution interface"
					},
					"children": [
						{
							"id": 336,
							"name": "getActionHandler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 337,
									"name": "getActionHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the action provider for a given button field in the form.\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ActionProvider extends AbstractActionProvider {\n  handleAction(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceProviderContribution {}\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 338,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribActionProvider",
										"id": 250
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1053,
									"character": 20
								}
							]
						},
						{
							"id": 330,
							"name": "getFieldProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 331,
									"name": "getFieldProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the FieldProvider for a given field.\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n  getFieldValue(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 332,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribFieldProvider",
										"id": 246
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 970,
									"character": 20
								}
							]
						},
						{
							"id": 339,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 340,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 446
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 327
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 927,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 327
							}
						},
						{
							"id": 333,
							"name": "getValidationProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 334,
									"name": "getValidationProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the vrules provider for a given field.\n\nHere is an example of a vrules provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ValidationProvider extends AbstractContribValidationProvider {\n     validate(context: IContributionContext): Observable<IValidationResult> {\n         return Observable.create(observer => {\n              let vresult: IValidationResult = ValidationResult.newValidationResult();\n                     observer.next(vresult);\n          });\n     }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 335,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribValidationProvider",
										"id": 242
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1008,
									"character": 25
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								336,
								330,
								339,
								333
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 933,
							"character": 47
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 326
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IWiServiceContribution",
							"id": 359
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "WiServiceProviderContribution",
							"id": 550
						}
					]
				},
				{
					"id": 437,
					"name": "ActionButton",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action item for button catalog"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 103,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 438,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 440,
									"name": "actionId",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 105,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 441,
									"name": "display",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 106,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "IFieldDisplay",
										"id": 144
									}
								},
								{
									"id": 439,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 104,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										440,
										441,
										439
									]
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 103,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 422,
					"name": "CONTRIBUTION_LOAD_RESULT",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "CONTRIBUTION_LOAD_RESULT type"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 64,
							"character": 36
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 423,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 425,
									"name": "data",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 64,
											"character": 61
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 424,
									"name": "status",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 64,
											"character": 47
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										425,
										424
									]
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 64,
									"character": 38
								}
							]
						}
					}
				},
				{
					"id": 416,
					"name": "FUNCTION_CONTRIBUTION",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "FUNCTION_CONTRIBUTION type",
						"tags": [
							{
								"tag": "typeparam",
								"text": "The generic type parameter indicating the value type being returned.",
								"param": "T"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 54,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 417,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 419,
									"name": "category",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 56,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 421,
									"name": "function",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 58,
											"character": 12
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 418,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 55,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 420,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 57,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "CONTRIBUTION_TYPE",
										"id": 406
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										419,
										421,
										418,
										420
									]
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 54,
									"character": 38
								}
							]
						}
					}
				},
				{
					"id": 445,
					"name": "IContributionTypes",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Union Type from all contribution types"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 558,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "IContributionContext",
								"id": 141
							},
							{
								"type": "reference",
								"name": "ITriggerContribution",
								"id": 184
							},
							{
								"type": "reference",
								"name": "IActivityContribution",
								"id": 199
							},
							{
								"type": "reference",
								"name": "IConnectorContribution",
								"id": 216
							}
						]
					}
				},
				{
					"id": 408,
					"name": "MODULE_CONTRIBUTION",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "MODULE_CONTRIBUTION type",
						"tags": [
							{
								"tag": "typeparam",
								"text": "The generic type parameter indicating the value type being returned",
								"param": "T"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 41,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 409,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 414,
									"name": "files",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 46,
											"character": 9
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 410,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 42,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 412,
									"name": "route",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 44,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 413,
									"name": "routePath",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 45,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 415,
									"name": "service",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 47,
											"character": 11
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 411,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 43,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "CONTRIBUTION_TYPE",
										"id": 406
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										414,
										410,
										412,
										413,
										415,
										411
									]
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 41,
									"character": 36
								}
							]
						}
					}
				},
				{
					"id": 432,
					"name": "AUTHENTICATION_TYPE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 93,
							"character": 32
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 94,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "BASIC"
							},
							{
								"type": "stringLiteral",
								"value": "OAUTH1"
							},
							{
								"type": "stringLiteral",
								"value": "OAUTH2"
							},
							{
								"type": "stringLiteral",
								"value": "OAUTH2_TWOLEG"
							}
						]
					},
					"defaultValue": " strEnum([\"BASIC\", \"OAUTH1\", \"OAUTH2\", \"OAUTH2_TWOLEG\"])"
				},
				{
					"id": 430,
					"name": "ButtonStyle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " Button Style string enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string|string|string|string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 90,
							"character": 24
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 91,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "primary"
							},
							{
								"type": "stringLiteral",
								"value": "success"
							},
							{
								"type": "stringLiteral",
								"value": "info"
							},
							{
								"type": "stringLiteral",
								"value": "warning"
							},
							{
								"type": "stringLiteral",
								"value": "danger"
							}
						]
					},
					"defaultValue": " strEnum([\"default\", \"primary\", \"success\", \"info\", \"warning\", \"danger\"])"
				},
				{
					"id": 428,
					"name": "ButtonType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Button Type string enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 84,
							"character": 23
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 85,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "button"
							},
							{
								"type": "stringLiteral",
								"value": "submit"
							},
							{
								"type": "stringLiteral",
								"value": "reset"
							}
						]
					},
					"defaultValue": " strEnum([\"submit\", \"reset\", \"button\"])"
				},
				{
					"id": 406,
					"name": "CONTRIBUTION_TYPE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Contribution type enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string|string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 12,
							"character": 30
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 13,
							"character": 29
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "trigger"
							},
							{
								"type": "stringLiteral",
								"value": "activity"
							},
							{
								"type": "stringLiteral",
								"value": "connector"
							},
							{
								"type": "stringLiteral",
								"value": "function"
							}
						]
					},
					"defaultValue": " strEnum([\"trigger\", \"activity\", \"connector\", \"function\"])"
				},
				{
					"id": 434,
					"name": "CONTRIB_PROXY_END_POINT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 96,
							"character": 36
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "/wistudio/v1/contributions/proxy/"
					},
					"defaultValue": "\"/wistudio/v1/contributions/proxy/\""
				},
				{
					"id": 444,
					"name": "DEFAULT_CONTRIBUTION_CATEGORY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Default contribution category",
						"tags": [
							{
								"tag": "type",
								"text": "{string}"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 290,
							"character": 42
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "General"
					},
					"defaultValue": "\"General\""
				},
				{
					"id": 426,
					"name": "DisplayFieldType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " DisplayField Type string enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string|string|string|string|string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 78,
							"character": 29
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 79,
							"character": 28
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "connection"
							},
							{
								"type": "stringLiteral",
								"value": "dropdown"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "texteditor"
							},
							{
								"type": "stringLiteral",
								"value": "fileselector"
							},
							{
								"type": "stringLiteral",
								"value": "connectiondata"
							},
							{
								"type": "stringLiteral",
								"value": "button"
							},
							{
								"type": "stringLiteral",
								"value": "params"
							}
						]
					},
					"defaultValue": " strEnum([\"connection\", \"dropdown\", \"table\", \"texteditor\", \"fileselector\", \"connectiondata\", \"button\", \"params\"])"
				},
				{
					"id": 442,
					"name": "FieldType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "FieldType string enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string | string | string | string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 207,
							"character": 22
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 208,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "array"
							},
							{
								"type": "stringLiteral",
								"value": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "integer"
							},
							{
								"type": "stringLiteral",
								"value": "number"
							},
							{
								"type": "stringLiteral",
								"value": "object"
							},
							{
								"type": "stringLiteral",
								"value": "string"
							},
							{
								"type": "stringLiteral",
								"value": "complex_object"
							}
						]
					},
					"defaultValue": " strEnum([\"string\", \"number\", \"boolean\", \"complex_object\", \"array\", \"object\", \"integer\"])"
				},
				{
					"id": 435,
					"name": "HTTP_METHOD",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 98,
							"character": 24
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 99,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "GET"
							},
							{
								"type": "stringLiteral",
								"value": "POST"
							},
							{
								"type": "stringLiteral",
								"value": "PUT"
							},
							{
								"type": "stringLiteral",
								"value": "DELETE"
							}
						]
					},
					"defaultValue": " strEnum([\"GET\", \"POST\", \"PUT\", \"DELETE\"])"
				},
				{
					"id": 446,
					"name": "IServiceContributionType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Service Contribution Type",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 916,
							"character": 37
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 917,
							"character": 36
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "Provider"
							},
							{
								"type": "stringLiteral",
								"value": "Handler"
							}
						]
					},
					"defaultValue": " strEnum([\"Provider\", \"Handler\"])"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						307,
						287,
						134,
						391
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						213,
						270,
						199,
						283,
						326,
						386,
						162,
						216,
						250,
						246,
						242,
						141,
						174,
						254,
						165,
						144,
						228,
						237,
						234,
						182,
						388,
						184,
						359,
						341,
						329
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						437,
						422,
						416,
						445,
						408
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						432,
						430,
						428,
						406,
						434,
						444,
						426,
						442,
						435,
						446
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 448,
			"name": "\"common/models/messaging\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/src/client/common/models/messaging.ts",
			"children": [
				{
					"id": 474,
					"name": "AbstractMessaging",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Abstract Messaging implementation",
						"tags": [
							{
								"tag": "description",
								"text": "There can be different messaging use cases where different type of Subjects can be used\ni.e. {Rx.Subject} or {Rx.ReplaySubject} which determines what behavior is required for the use case.\n"
							},
							{
								"tag": "example:",
								"text": "\n```\n public class TestMessaging extends AbstractMessaging {\n  static fromSubjects(subjects: any): AppMessaging {\n     return new ContribMessaging(subjects);\n  }\n\n  constructor(subjects?: any) {\n      super(subjects);\n  }\n\n  public newSubject<T>(): Subject<T> {\n      return new ReplaySubject<T>();\n  }\n }\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 476,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 477,
									"name": "new AbstractMessaging",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 478,
											"name": "subjects",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "AbstractMessaging",
										"id": 474
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 81,
									"character": 23
								}
							]
						},
						{
							"id": 475,
							"name": "subjects",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 81,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 482,
							"name": "Subjects",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 483,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 91,
									"character": 16
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.Subjects",
								"id": 450
							}
						},
						{
							"id": 488,
							"name": "createName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 489,
									"name": "createName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 490,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 105,
									"character": 14
								}
							]
						},
						{
							"id": 505,
							"name": "dispose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 506,
									"name": "dispose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 507,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 132,
									"character": 11
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.dispose",
								"id": 472
							}
						},
						{
							"id": 491,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 492,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 493,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 494,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 495,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.emit",
										"id": 459
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 109,
									"character": 8
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.emit",
								"id": 458
							}
						},
						{
							"id": 484,
							"name": "getObservable",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 485,
									"name": "getObservable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 486,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 487,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.getObservable",
										"id": 455
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 95,
									"character": 17
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.getObservable",
								"id": 454
							}
						},
						{
							"id": 479,
							"name": "newSubject",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 480,
									"name": "newSubject",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 481,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"type": {
										"type": "reference",
										"name": "Subject",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.newSubject",
										"id": 452
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 89,
									"character": 23
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.newSubject",
								"id": 451
							}
						},
						{
							"id": 501,
							"name": "off",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 502,
									"name": "off",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 503,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 504,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.off",
										"id": 469
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 124,
									"character": 7
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.off",
								"id": 468
							}
						},
						{
							"id": 496,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 497,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 498,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 499,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 500,
											"name": "handler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HANDLER_FUNCTION",
												"id": 35,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.on",
										"id": 464
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 117,
									"character": 6
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.on",
								"id": 463
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								476
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								475
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								482
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								488,
								505,
								491,
								484,
								479,
								501,
								496
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/messaging.ts",
							"line": 80,
							"character": 39
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "WiContribMessaging",
							"id": 653
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IMessaging",
							"id": 449
						}
					]
				},
				{
					"id": 449,
					"name": "IMessaging",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Asynchronous Messaging interface",
						"tags": [
							{
								"tag": "description",
								"text": "The messaging interface provides a publisher-subscriber broadcastubg servuce where one\n side publishes data and other sides subscribe to the data.\n"
							}
						]
					},
					"children": [
						{
							"id": 450,
							"name": "Subjects",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Object for holding subjects as properties"
							},
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 16,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 472,
							"name": "dispose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 473,
									"name": "dispose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Dispose all the subjects and reinitialize the {Subjects} Object"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 55,
									"character": 11
								}
							]
						},
						{
							"id": 458,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 459,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "description",
												"text": "Emit data of type {T} for a given subject name"
											}
										]
									},
									"typeParameter": [
										{
											"id": 460,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 461,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 462,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 36,
									"character": 8
								}
							]
						},
						{
							"id": 454,
							"name": "getObservable",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 455,
									"name": "getObservable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns an Observable for the given subject name"
											}
										]
									},
									"typeParameter": [
										{
											"id": 456,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 457,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 29,
									"character": 17
								}
							]
						},
						{
							"id": 451,
							"name": "newSubject",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 452,
									"name": "newSubject",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Creates a new Subject"
											}
										]
									},
									"typeParameter": [
										{
											"id": 453,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"type": {
										"type": "reference",
										"name": "Subject",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 22,
									"character": 14
								}
							]
						},
						{
							"id": 468,
							"name": "off",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 469,
									"name": "off",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete the subject from the messaging subjects"
									},
									"typeParameter": [
										{
											"id": 470,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 471,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 50,
									"character": 7
								}
							]
						},
						{
							"id": 463,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 464,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Handle data of type {T} for a given subject name"
									},
									"typeParameter": [
										{
											"id": 465,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 466,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 467,
											"name": "handler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "HANDLER_FUNCTION",
												"id": 35,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 43,
									"character": 6
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								450
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								472,
								458,
								454,
								451,
								468,
								463
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/messaging.ts",
							"line": 12,
							"character": 27
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AbstractMessaging",
							"id": 474
						},
						{
							"type": "reference",
							"name": "WiContribMessaging",
							"id": 653
						}
					]
				},
				{
					"id": 508,
					"name": "hasOwnProp",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/messaging.ts",
							"line": 4,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"name": "hasOwnProperty"
					},
					"defaultValue": " {}.hasOwnProperty"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						474
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						449
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						508
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/messaging.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 39,
			"name": "\"common/models/validation\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/src/client/common/models/validation.ts",
			"children": [
				{
					"id": 75,
					"name": "EnumValidationState",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Field Validation State Enumeration"
					},
					"children": [
						{
							"id": 76,
							"name": "WI_READONLY",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The field is read only based on the bit flag",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 118,
									"character": 15
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 78,
							"name": "WI_VALID",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The field is valid based on the bit flag",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 128,
									"character": 12
								}
							],
							"defaultValue": "8"
						},
						{
							"id": 77,
							"name": "WI_VISIBLE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " The field is visible based on the bit flag",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 123,
									"character": 14
								}
							],
							"defaultValue": "4"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								76,
								78,
								77
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 113,
							"character": 31
						}
					]
				},
				{
					"id": 53,
					"name": "ValidationError",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Validation Error Implementation"
					},
					"children": [
						{
							"id": 58,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Constructor - Create a new validation error instance",
								"tags": [
									{
										"tag": "constructor",
										"text": ""
									}
								]
							},
							"signatures": [
								{
									"id": 62,
									"name": "new ValidationError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Constructor - Create a new validation error instance",
										"tags": [
											{
												"tag": "constructor",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 63,
											"name": "errorCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 64,
											"name": "errorMsg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 65,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"name": "STRING_MAP",
												"id": 8,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ValidationError",
										"id": 53
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 61,
									"character": 5
								}
							]
						},
						{
							"id": 61,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "\n"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 70,
									"character": 81
								}
							],
							"type": {
								"type": "reference",
								"name": "STRING_MAP",
								"id": 8,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.context",
								"id": 43
							}
						},
						{
							"id": 59,
							"name": "errorCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 70,
									"character": 32
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.errorCode",
								"id": 41
							}
						},
						{
							"id": 60,
							"name": "errorMsg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 70,
									"character": 57
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.errorMsg",
								"id": 42
							}
						},
						{
							"id": 66,
							"name": "getErrorCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 67,
									"name": "getErrorCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Error Code",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationError.getErrorCode",
										"id": 45
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 80,
									"character": 23
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.getErrorCode",
								"id": 44
							}
						},
						{
							"id": 68,
							"name": "getErrorMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 69,
									"name": "getErrorMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Error Message",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationError.getErrorMessage",
										"id": 47
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 88,
									"character": 26
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.getErrorMessage",
								"id": 46
							}
						},
						{
							"id": 72,
							"name": "setContext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 73,
									"name": "setContext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "Set the error context"
									},
									"parameters": [
										{
											"id": 74,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "STRING_MAP",
												"id": 8,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationError.setContext",
										"id": 51
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 105,
									"character": 21
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.setContext",
								"id": 50
							}
						},
						{
							"id": 70,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 71,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a string representation of the error",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationError.toString",
										"id": 49
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 96,
									"character": 19
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.toString",
								"id": 48
							}
						},
						{
							"id": 54,
							"name": "newError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 55,
									"name": "newError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Static Constructor Create a new validation error instance",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 56,
											"name": "errorCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 57,
											"name": "errorMsg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationError",
										"id": 40
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 59,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								58
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								61,
								59,
								60
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								66,
								68,
								72,
								70,
								54
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 52,
							"character": 28
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IValidationError",
							"id": 40
						}
					]
				},
				{
					"id": 103,
					"name": "ValidationResult",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Validation Result Implementation"
					},
					"children": [
						{
							"id": 109,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "constructor",
										"text": ""
									}
								]
							},
							"signatures": [
								{
									"id": 110,
									"name": "new ValidationResult",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "constructor",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 111,
											"name": "errors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 40
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IValidationError",
															"id": 40
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ValidationResult",
										"id": 103
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 216,
									"character": 5
								}
							]
						},
						{
							"id": 105,
							"name": "errors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 207,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IValidationError",
									"id": 40
								}
							},
							"defaultValue": " []",
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.errors",
								"id": 81
							}
						},
						{
							"id": 104,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 206,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "EnumValidationState",
										"id": 75
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"defaultValue": " EnumValidationState.WI_VALID | EnumValidationState.WI_VISIBLE",
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.state",
								"id": 80
							}
						},
						{
							"id": 131,
							"name": "getErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 132,
									"name": "getErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IValidationError",
											"id": 40
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.getErrors",
										"id": 102
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 268,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.getErrors",
								"id": 101
							}
						},
						{
							"id": 112,
							"name": "isReadOnly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 113,
									"name": "isReadOnly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.isReadOnly",
										"id": 83
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 236,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.isReadOnly",
								"id": 82
							}
						},
						{
							"id": 116,
							"name": "isValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 117,
									"name": "isValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.isValid",
										"id": 87
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 244,
									"character": 11
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.isValid",
								"id": 86
							}
						},
						{
							"id": 114,
							"name": "isVisible",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 115,
									"name": "isVisible",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.isVisible",
										"id": 85
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 240,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.isVisible",
								"id": 84
							}
						},
						{
							"id": 127,
							"name": "setError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 128,
									"name": "setError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129,
											"name": "errorCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 130,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.setError",
										"id": 98
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 263,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setError",
								"id": 97
							}
						},
						{
							"id": 118,
							"name": "setReadOnly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 119,
									"name": "setReadOnly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 120,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.setReadOnly",
										"id": 89
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 248,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setReadOnly",
								"id": 88
							}
						},
						{
							"id": 124,
							"name": "setValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 125,
									"name": "setValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 126,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.setValid",
										"id": 95
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 258,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setValid",
								"id": 94
							}
						},
						{
							"id": 121,
							"name": "setVisible",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 122,
									"name": "setVisible",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 123,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.setVisible",
										"id": 92
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 253,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setVisible",
								"id": 91
							}
						},
						{
							"id": 106,
							"name": "newValidationResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 107,
									"name": "newValidationResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Static constructor",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 108,
											"name": "errors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 40
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IValidationError",
															"id": 40
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 214,
									"character": 30
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								109
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								105,
								104
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								131,
								112,
								116,
								114,
								127,
								118,
								124,
								121,
								106
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 203,
							"character": 29
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IValidationResult",
							"id": 79
						}
					]
				},
				{
					"id": 40,
					"name": "IValidationError",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Validation Error Interface"
					},
					"children": [
						{
							"id": 43,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Error Context"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 21,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "STRING_MAP",
								"id": 8,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 41,
							"name": "errorCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Error Code"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 11,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 42,
							"name": "errorMsg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Error Message"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 16,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 44,
							"name": "getErrorCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 45,
									"name": "getErrorCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Error Code",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 27,
									"character": 16
								}
							]
						},
						{
							"id": 46,
							"name": "getErrorMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 47,
									"name": "getErrorMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Error Message",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 33,
									"character": 19
								}
							]
						},
						{
							"id": 50,
							"name": "setContext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 51,
									"name": "setContext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "Set Context Map for the Error i.e Flow -> Activity -> Property"
									},
									"parameters": [
										{
											"id": 52,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "STRING_MAP",
												"id": 8,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 46,
									"character": 14
								}
							]
						},
						{
							"id": 48,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 49,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a string representation of the Error",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 39,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								43,
								41,
								42
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								44,
								46,
								50,
								48
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 6,
							"character": 33
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "ValidationError",
							"id": 53
						}
					]
				},
				{
					"id": 79,
					"name": "IValidationResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Validation Result interface"
					},
					"children": [
						{
							"id": 81,
							"name": "errors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Validation Errors"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 144,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IValidationError",
									"id": 40
								}
							}
						},
						{
							"id": 80,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Validation State"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 139,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "EnumValidationState",
										"id": 75
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 101,
							"name": "getErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 102,
									"name": "getErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Validation Errors",
										"returns": "\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IValidationError",
											"id": 40
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 197,
									"character": 13
								}
							]
						},
						{
							"id": 82,
							"name": "isReadOnly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 83,
									"name": "isReadOnly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the Validation Read Only state",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 150,
									"character": 14
								}
							]
						},
						{
							"id": 86,
							"name": "isValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 87,
									"name": "isValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the Validation validity state",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 162,
									"character": 11
								}
							]
						},
						{
							"id": 84,
							"name": "isVisible",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 85,
									"name": "isVisible",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the Validation Visible state",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 156,
									"character": 13
								}
							]
						},
						{
							"id": 97,
							"name": "setError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 98,
									"name": "setError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds Validation error",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 99,
											"name": "errorCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 100,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 191,
									"character": 12
								}
							]
						},
						{
							"id": 88,
							"name": "setReadOnly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 89,
									"name": "setReadOnly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Validation Read Only state",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 90,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 169,
									"character": 15
								}
							]
						},
						{
							"id": 94,
							"name": "setValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 95,
									"name": "setValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Validation valid state",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 96,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 183,
									"character": 12
								}
							]
						},
						{
							"id": 91,
							"name": "setVisible",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 92,
									"name": "setVisible",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Validation Visible state",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 93,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 176,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								81,
								80
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								101,
								82,
								86,
								84,
								97,
								88,
								94,
								91
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 134,
							"character": 34
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "ValidationResult",
							"id": 103
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						75
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						53,
						103
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						40,
						79
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/validation.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"common/types\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/src/client/common/types.ts",
			"children": [
				{
					"id": 2,
					"name": "JSONSCHEMATypeInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "JSON Schema Type Information"
					},
					"children": [
						{
							"id": 4,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 68,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "JSON_FORMAT",
								"id": 26
							}
						},
						{
							"id": 7,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 71,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 6,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 70,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5,
							"name": "pattern",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 69,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 67,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "JSON_TYPE",
								"id": 24
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4,
								7,
								6,
								5,
								3
							]
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 66,
							"character": 35
						}
					]
				},
				{
					"id": 23,
					"name": "ARRAY_STR_ARRAY",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 19,
							"character": 27
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9,
					"name": "ENUM_MAP",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 2,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Map",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "E"
							},
							{
								"type": "typeParameter",
								"name": "P"
							}
						]
					}
				},
				{
					"id": 35,
					"name": "HANDLER_FUNCTION",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Messaging handler function prototype"
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 98,
							"character": 28
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 37,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 38,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 98,
									"character": 33
								}
							]
						}
					}
				},
				{
					"id": 30,
					"name": "JSON_SCHEMA_TYPE",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 73,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "JSONSCHEMATypeInfo",
						"id": 2
					}
				},
				{
					"id": 8,
					"name": "STRING_MAP",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 1,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "Map",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "typeParameter",
								"name": "P"
							}
						]
					}
				},
				{
					"id": 28,
					"name": "GOLANG_TYPE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "GO Lang Type enumerations",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string | string | string | string | string | string | string | string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 60,
							"character": 24
						},
						{
							"fileName": "common/types.ts",
							"line": 61,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "any"
							},
							{
								"type": "stringLiteral",
								"value": "array"
							},
							{
								"type": "stringLiteral",
								"value": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "integer"
							},
							{
								"type": "stringLiteral",
								"value": "number"
							},
							{
								"type": "stringLiteral",
								"value": "object"
							},
							{
								"type": "stringLiteral",
								"value": "string"
							},
							{
								"type": "stringLiteral",
								"value": "complex_object"
							}
						]
					},
					"defaultValue": " strEnum([\"string\", \"integer\", \"number\", \"boolean\", \"object\", \"array\", \"any\", \"complex_object\"])"
				},
				{
					"id": 26,
					"name": "JSON_FORMAT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "JSON Schema Type Format enumerations\nhttps://developers.google.com/discovery/v1/type-format\nhttp://json-schema.org/latest/json-schema-validation.html#rfc.section.3.2",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string | string | string | string | string | string | string | string | string | string | string | string | string | string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 35,
							"character": 24
						},
						{
							"fileName": "common/types.ts",
							"line": 54,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "object"
							},
							{
								"type": "stringLiteral",
								"value": "int32"
							},
							{
								"type": "stringLiteral",
								"value": "uint32"
							},
							{
								"type": "stringLiteral",
								"value": "double"
							},
							{
								"type": "stringLiteral",
								"value": "float"
							},
							{
								"type": "stringLiteral",
								"value": "byte"
							},
							{
								"type": "stringLiteral",
								"value": "date"
							},
							{
								"type": "stringLiteral",
								"value": "date_time"
							},
							{
								"type": "stringLiteral",
								"value": "int64"
							},
							{
								"type": "stringLiteral",
								"value": "uint64"
							},
							{
								"type": "stringLiteral",
								"value": "email"
							},
							{
								"type": "stringLiteral",
								"value": "hostname"
							},
							{
								"type": "stringLiteral",
								"value": "ipv4"
							},
							{
								"type": "stringLiteral",
								"value": "ipv6"
							},
							{
								"type": "stringLiteral",
								"value": "uri"
							},
							{
								"type": "stringLiteral",
								"value": "uri_reference"
							},
							{
								"type": "stringLiteral",
								"value": "uri_template"
							},
							{
								"type": "stringLiteral",
								"value": "json_pointer"
							}
						]
					},
					"defaultValue": " strEnum([\n    \"int32\",\n    \"uint32\",\n    \"double\",\n    \"float\",\n    \"byte\",\n    \"date\",\n    \"date_time\",\n    \"int64\",\n    \"uint64\",\n    \"object\",\n    \"email\",\n    \"hostname\",\n    \"ipv4\",\n    \"ipv6\",\n    \"uri\",\n    \"uri_reference\",\n    \"uri_template\",\n    \"json_pointer\"])"
				},
				{
					"id": 31,
					"name": "JSON_RT_TYPE_MAPPING",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 75,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"name": "ENUM_MAP",
						"id": 9,
						"typeArguments": [
							{
								"type": "reference",
								"name": "GOLANG_TYPE",
								"id": 28
							},
							{
								"type": "reference",
								"name": "JSON_SCHEMA_TYPE",
								"id": 30
							}
						]
					},
					"defaultValue": " new Map<GOLANG_TYPE, JSON_SCHEMA_TYPE>()"
				},
				{
					"id": 24,
					"name": "JSON_TYPE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "JSON Schema Type enumerations\nhttps://developers.google.com/discovery/v1/type-format\nhttp://json-schema.org/latest/json-schema-validation.html#rfc.section.3.2",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string | string | string | string | string | string | string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 26,
							"character": 22
						},
						{
							"fileName": "common/types.ts",
							"line": 27,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "any"
							},
							{
								"type": "stringLiteral",
								"value": "array"
							},
							{
								"type": "stringLiteral",
								"value": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "integer"
							},
							{
								"type": "stringLiteral",
								"value": "number"
							},
							{
								"type": "stringLiteral",
								"value": "object"
							},
							{
								"type": "stringLiteral",
								"value": "string"
							}
						]
					},
					"defaultValue": " strEnum([\"any\", \"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\"])"
				},
				{
					"id": 32,
					"name": "RTtoJSONTypeMap",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 33,
							"name": "RTtoJSONTypeMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a {{JSON_SCHEMA_TYPE}}",
								"tags": [
									{
										"tag": "constructor",
										"text": "\n"
									}
								]
							},
							"parameters": [
								{
									"id": 34,
									"name": "rtType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "GOLANG_TYPE",
										"id": 28
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "JSON_SCHEMA_TYPE",
								"id": 30
							}
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 91,
							"character": 31
						}
					]
				},
				{
					"id": 18,
					"name": "jsonToMap",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 19,
							"name": "jsonToMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 20,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 21,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 22,
									"name": "jsonStr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Map",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "K"
									},
									{
										"type": "typeParameter",
										"name": "V"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 15,
							"character": 25
						}
					]
				},
				{
					"id": 15,
					"name": "mapToJson",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 16,
							"name": "mapToJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 17,
									"name": "map",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 12,
							"character": 25
						}
					]
				},
				{
					"id": 10,
					"name": "strEnum",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 11,
							"name": "strEnum",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 12,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 13,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Array",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "common/types.ts",
											"line": 4,
											"character": 55
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 4,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						23,
						9,
						35,
						30,
						8
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						28,
						26,
						31,
						24
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						32,
						18,
						15,
						10
					]
				}
			],
			"sources": [
				{
					"fileName": "common/types.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				509,
				133,
				448,
				39,
				1
			]
		}
	]
}