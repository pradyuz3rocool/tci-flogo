{
	"id": 0,
	"name": "Web Integrator Studio (wi-studio) SDK ",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 438,
			"name": "\"app/contrib/wi-contrib\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/pdhar/dev/cloud/wi-studio/client/app/contrib/wi-contrib.ts",
			"children": [
				{
					"id": 456,
					"name": "AbstractContribActionProvider",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Abstract Action Provider"
					},
					"children": [
						{
							"id": 457,
							"name": "handleAction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 458,
									"name": "handleAction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "abstract handle action function"
									},
									"parameters": [
										{
											"id": 459,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 435
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"name": "IContribActionProvider.handleAction",
										"id": 242
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 101,
									"character": 25
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IContribActionProvider.handleAction",
								"id": 241
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								457
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 96,
							"character": 51
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IContribActionProvider",
							"id": 240
						}
					]
				},
				{
					"id": 446,
					"name": "AbstractContribFieldProvider",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Abstract contrib field provider"
					},
					"children": [
						{
							"id": 447,
							"name": "getFieldValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 448,
									"name": "getFieldValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "getFieldValue"
									},
									"parameters": [
										{
											"id": 449,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 435
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"name": "IContribFieldProvider.getFieldValue",
										"id": 238
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 68,
									"character": 26
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IContribFieldProvider.getFieldValue",
								"id": 237
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								447
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 56,
							"character": 50
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IContribFieldProvider",
							"id": 236
						}
					]
				},
				{
					"id": 439,
					"name": "AbstractContribValidationProvider",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Abstract Validation Provider"
					},
					"children": [
						{
							"id": 440,
							"name": "validate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 441,
									"name": "validate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "validate"
									},
									"parameters": [
										{
											"id": 442,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 435
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationResult",
												"id": 75
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 75
													}
												]
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"name": "IContribValidationProvider.validate",
										"id": 234
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 41,
									"character": 21
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IContribValidationProvider.validate",
								"id": 233
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								440
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 29,
							"character": 55
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IContribValidationProvider",
							"id": 232
						}
					]
				},
				{
					"id": 529,
					"name": "WiContributionUtils",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " Contribution Utility\n This utility class provides functions to get User defined connections,\n Server Configuration, Context Object unique id's"
					},
					"children": [
						{
							"id": 534,
							"name": "getConnection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 535,
									"name": "getConnection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a connection for a given connection name",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 536,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 537,
											"name": "connection_id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IConnectorContribution",
														"id": 212
													}
												]
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 828,
									"character": 31
								}
							]
						},
						{
							"id": 530,
							"name": "getConnections",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 531,
									"name": "getConnections",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a list of available connections for a given connector type",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 532,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 533,
											"name": "connector_type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IConnectorContribution",
													"id": 212
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 801,
									"character": 32
								}
							]
						},
						{
							"id": 538,
							"name": "getEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 539,
									"name": "getEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets Server Environment Information",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 540,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 541,
											"name": "envName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 877,
									"character": 32
								}
							]
						},
						{
							"id": 542,
							"name": "getUniqueId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 543,
									"name": "getUniqueId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the unique id for a given context object",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 544,
											"name": "ctx",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 435
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 890,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								534,
								530,
								538,
								542
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 795,
							"character": 32
						}
					]
				},
				{
					"id": 545,
					"name": "WiProxyCORSUtils",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Proxy Cross Origin Resource Sharing Utility",
						"tags": [
							{
								"tag": "desc",
								"text": "This utility routes client side HTTP requests via a Server proxy to SAAS\nproviders which have CORS restrictions when accessing the APIs.\n"
							}
						]
					},
					"children": [
						{
							"id": 554,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"signatures": [
								{
									"id": 557,
									"name": "new WiProxyCORSUtils",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 558,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 559,
											"name": "remoteUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 545
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 914,
									"character": 5
								}
							]
						},
						{
							"id": 549,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 904,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 547,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 902,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "STRING_MAP",
								"id": 8,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 555,
							"name": "http",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 921,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "Http"
							}
						},
						{
							"id": 548,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 903,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "HTTP_METHOD",
								"id": 425
							},
							"defaultValue": " HTTP_METHOD.GET"
						},
						{
							"id": 546,
							"name": "queryParams",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 901,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "STRING_MAP",
								"id": 8,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 556,
							"name": "remoteUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"comment": {
								"shortText": "\n"
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 921,
									"character": 53
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 571,
							"name": "addBody",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 572,
									"name": "addBody",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 573,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 545
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 961,
									"character": 11
								}
							]
						},
						{
							"id": 564,
							"name": "addHeader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 565,
									"name": "addHeader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 566,
											"name": "header",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 567,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 545
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 943,
									"character": 13
								}
							]
						},
						{
							"id": 568,
							"name": "addMethod",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 569,
									"name": "addMethod",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 570,
											"name": "method",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "HTTP_METHOD",
												"id": 425
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 545
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 952,
									"character": 13
								}
							]
						},
						{
							"id": 560,
							"name": "addQueryParams",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 561,
									"name": "addQueryParams",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 562,
											"name": "param",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 563,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 545
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 932,
									"character": 18
								}
							]
						},
						{
							"id": 576,
							"name": "buildUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 577,
									"name": "buildUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 578,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 579,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "STRING_MAP",
												"id": 8,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 996,
									"character": 12
								}
							]
						},
						{
							"id": 574,
							"name": "send",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 575,
									"name": "send",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 969,
									"character": 8
								}
							]
						},
						{
							"id": 550,
							"name": "createRequest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 551,
									"name": "createRequest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 552,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 553,
											"name": "remoteUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Remote URL is the URL from r"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 545
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 912,
									"character": 31
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								554
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								549,
								547,
								555,
								548,
								546,
								556
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								571,
								564,
								568,
								560,
								576,
								574,
								550
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 900,
							"character": 29
						}
					]
				},
				{
					"id": 464,
					"name": "WiServiceContribution",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The [[WiServiceContribution]] being the abstract base class is extended  by a contribution provider handler [[WiServiceHandlerContribution]]\nor a [[WiServiceProviderContribution]]. The user can choose either implmentation model to suit their needs.",
						"text": "## [[WiServiceHandlerContribution]]\nThe [[WiServiceHandlerContribution]] represents one way of providing contribution where the contribution will have its own single implementation\nof [[WiServiceHandlerContribution]] and the @[[Injectable]] class decorator will tell the loader that it is loadable by Angular and the single class\nwill provide handler functions for value, validation and action. The @WiContrib({}) deoorator with null metadata indicates it is a one abstract class\n[[WiServiceHandlerContribution]] implmentation.\n\n ### Example [[WiServiceHandlerContribution]]  Contribution Handler Typescript file\n ```\n import {Injectable, Injector} from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import {ValidationResult} from \"../../../../common/models/validation\";\n import {IActivityContribution, ActionResult, IActionResult} from \"../../../../common/models/contrib\";\n import {WiContrib, WiServiceHandlerContribution} from \"../../wi-contrib\";\n import {Http} from \"@angular/http\";\n import {IValidationResult} from \"../../../../common/models/validation\";\n\n @WiContrib({})\n @Injectable()\n export class RestContributionHandler extends WiServiceHandlerContribution {\n     constructor(injector: Injector, http: Http) {\n      super(injector, http);\n  }\n\n  value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n      return Observable.create(observer => {\n          observer.next(\"\");\n     });\n  }\n\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n      return Observable.create(observer => {\n           let vresult: IValidationResult = ValidationResult.newValidationResult();\n           observer.next(vresult);\n       });\n  }\n\n   action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n      return Observable.create(observer => {\n           let aresult: IActionResult = ActionResult.newActionResult();\n           observer.next(aresult);\n       });\n   }\n }\n ```\n ### Example [[WiServiceHandlerContribution]]  Contribution Module Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./rest-contrib\";\n import {WiServiceContribution} from \"../../wi-contrib\";\n @NgModule({\n   imports: [CommonModule,HttpModule],\n   exports: [],\n   declarations: [],\n   entryComponents: [],\n   providers: [{\n     provide: WiServiceContribution,\n     useClass: RestContributionHandler\n   }],\n   bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n## [[WiServiceProviderContribution]]\nThe [[WiServiceProviderContribution]] represents another way of providing contribution\nwhere each field will have its own [[AbstractContribFieldProvider]],[[AbstractContribValidationProvider]],[[AbstractActionProvider]] and the [[WiServiceProviderContribution]]\nimplementation with @[[WiContrib]] decorator will tell the loader that the module is of type [[WiServiceProviderContribution]]. Each field value,validation\nand action provider is also a Angular injectable Service and must be decorated by @Injectable(). The contribution service is also a Angular injectable service\nas decorated with @Injectable() and also a Contribution Service with @WiContrib(metadata) deoorator.\n\n ### Example [[WiServiceProviderContribution]]  Contribution Service Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./timer-contrib\";\n import {WiServiceContribution} from \"wi-contrib\";\n @NgModule({\n imports: [CommonModule,HttpModule],\n exports: [],\n declarations: [],\n entryComponents: [],\n providers: [\n  {\n    provide: WiServiceContribution,\n    useClass: TimerContribService\n  },\n  {\n    provide: Field1Provider,\n    useClass: Field1Provider\n  },\n  {\n    provide: Field1ValidationProvider,\n    useClass: Field1ValidationProvider\n  }],\n bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n ### Example [[WiServiceProviderContribution]]  Contribution Module Typescript file\n ```\n import { ValidationResult } from \"wi-studio/common/models/validation\";\n import { IActivityContribution, IContributionContext } from \"wi-studio/common/models/contrib\";\n import { Injectable, Inject, Injector } from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import { Http } from \"@angular/http\";\n import { AbstractContribFieldProvider, AbstractContribValidationProvider, WiContrib, WiServiceContribution } from \"wi-studio/app/wi-contrib\";\n import {IValidationResult} from \"wi-studio/common/models/validation\";\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n   getFieldValue(context: IActivityContribution): Observable<string[]> {\n       return Observable.create(observer => {\n           observer.next(\"\");\n      });\n   }}\n @Injectable()\n export class Field1ValidationProvider extends AbstractContribValidationProvider {\n    validate(context: IContributionContext): Observable<IValidationResult> {\n        return Observable.create(observer => {\n            // tslint:disable-next-line:no-bitwise\n            let vresult: IValidationResult = ValidationResult.newValidationResult();\n            observer.next(vresult);\n        });\n    }}\n\n @WiContrib({\n    validationProviders: [{\n           field: \"field1\",\n            useClass: Field1ValidationProvider\n        }],\n    fieldProviders: [{\n            field: \"field1\",\n            useClass: Field1Provider\n        }]\n })\n @Injectable()\n export class TimerContribService extends WiServiceProviderContribution {}\n```\n"
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 465,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "constructor"
							},
							"signatures": [
								{
									"id": 468,
									"name": "new WiServiceContribution",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "constructor"
									},
									"parameters": [
										{
											"id": 469,
											"name": "_injector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Injector"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Injector"
											}
										},
										{
											"id": 470,
											"name": "_http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Http"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Http"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiServiceContribution",
										"id": 464
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 386,
									"character": 81
								}
							]
						},
						{
							"id": 467,
							"name": "_http",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "\n"
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "Http"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 392,
									"character": 91
								}
							],
							"type": {
								"type": "reference",
								"name": "Http"
							}
						},
						{
							"id": 466,
							"name": "_injector",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true,
								"isOptional": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "Injector"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 392,
									"character": 51
								}
							],
							"type": {
								"type": "reference",
								"name": "Injector"
							}
						},
						{
							"id": 473,
							"name": "getAnnotations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 474,
									"name": "getAnnotations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "get annotation from metadata"
									},
									"type": {
										"type": "reference",
										"name": "WiContribMetaData",
										"id": 460
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 412,
									"character": 28
								}
							]
						},
						{
							"id": 477,
							"name": "getHttp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 478,
									"name": "getHttp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the [[Http]] object",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Http"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 431,
									"character": 21
								}
							]
						},
						{
							"id": 475,
							"name": "getInjector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 476,
									"name": "getInjector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the injector",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Injector"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 422,
									"character": 25
								}
							]
						},
						{
							"id": 471,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 472,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 436
									},
									"implementationOf": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 318
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 399,
									"character": 18
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 317
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								465
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								467,
								466
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								473,
								477,
								475,
								471
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 386,
							"character": 43
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "WiServiceProviderContribution",
							"id": 479
						},
						{
							"type": "reference",
							"name": "WiServiceHandlerContribution",
							"id": 501
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 316
						}
					]
				},
				{
					"id": 501,
					"name": "WiServiceHandlerContribution",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Abstract Service Handler Contribution\n## [[WiServiceHandlerContribution]]\nThe [[WiServiceHandlerContribution]] represents one way of providing contribution where the contribution will have its own single implementation\nof [[WiServiceHandlerContribution]] and the @[[Injectable]] class decorator will tell the loader that it is loadable by Angular and the single class\nwill provide handler functions for value, validation and action. The @WiContrib({}) deoorator with null metadata indicates it is a one abstract class\n[[WiServiceHandlerContribution]] implmentation.\n\n ### Example [[WiServiceHandlerContribution]]  Contribution Handler Typescript file\n ```\n import {Injectable, Injector} from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import {ValidationResult} from \"../../../../common/models/validation\";\n import {IActivityContribution, ActionResult, IActionResult} from \"../../../../common/models/contrib\";\n import {WiContrib, WiServiceHandlerContribution} from \"../../wi-contrib\";\n import {Http} from \"@angular/http\";\n import {IValidationResult} from \"../../../../common/models/validation\";\n\n @WiContrib({})\n @Injectable()\n export class RestContributionHandler extends WiServiceHandlerContribution {\n     constructor(injector: Injector, http: Http) {\n      super(injector, http);\n  }\n\n  value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n      return Observable.create(observer => {\n          observer.next(\"\");\n     });\n  }\n\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n      return Observable.create(observer => {\n           let vresult: IValidationResult = ValidationResult.newValidationResult();\n           observer.next(vresult);\n       });\n  }\n\n   action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n      return Observable.create(observer => {\n           let aresult: IActionResult = ActionResult.newActionResult();\n           observer.next(aresult);\n       });\n   }\n }\n ```\n ### Example [[WiServiceHandlerContribution]]  Contribution Module Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./rest-contrib\";\n import {WiServiceContribution} from \"../../wi-contrib\";\n @NgModule({\n   imports: [CommonModule,HttpModule],\n   exports: [],\n   declarations: [],\n   entryComponents: [],\n   providers: [{\n     provide: WiServiceContribution,\n     useClass: RestContributionHandler\n   }],\n   bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 502,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "constructor",
										"text": "\n*  ## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n}\n```"
									}
								]
							},
							"signatures": [
								{
									"id": 503,
									"name": "new WiServiceHandlerContribution",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "constructor",
												"text": "\n*  ## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 504,
											"name": "injector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Injector"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Injector"
											}
										},
										{
											"id": 505,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Http"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Http"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiServiceHandlerContribution",
										"id": 501
									},
									"overwrites": {
										"type": "reference",
										"name": "WiServiceContribution.__constructor",
										"id": 465
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 654,
									"character": 123
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "WiServiceContribution.__constructor",
								"id": 465
							}
						},
						{
							"id": 516,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional action handler for form buttons\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```\n"
									},
									{
										"tag": "param",
										"text": "",
										"param": "actionId"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 763,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 517,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 518,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 519,
													"name": "actionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 520,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 435
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 260
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 260
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "app/contrib/wi-contrib.ts",
											"line": 763,
											"character": 19
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.action",
								"id": 344
							}
						},
						{
							"id": 511,
							"name": "validate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Validate a specified field name parameter\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n```\n"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 733,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 512,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 513,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 514,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 515,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 435
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IValidationResult",
																"id": 75
															}
														]
													},
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 75
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "app/contrib/wi-contrib.ts",
											"line": 733,
											"character": 20
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.validate",
								"id": 339
							}
						},
						{
							"id": 506,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
								"text": "Here is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```",
								"tags": [
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 704,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 507,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 508,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 509,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 510,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 435
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "app/contrib/wi-contrib.ts",
											"line": 704,
											"character": 17
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.value",
								"id": 334
							}
						},
						{
							"id": 523,
							"name": "getAnnotations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 524,
									"name": "getAnnotations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "get annotation from metadata"
									},
									"type": {
										"type": "reference",
										"name": "WiContribMetaData",
										"id": 460
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getAnnotations",
										"id": 473
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 412,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getAnnotations",
								"id": 473
							}
						},
						{
							"id": 527,
							"name": "getHttp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 528,
									"name": "getHttp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the [[Http]] object",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Http"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getHttp",
										"id": 477
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 431,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getHttp",
								"id": 477
							}
						},
						{
							"id": 525,
							"name": "getInjector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 526,
									"name": "getInjector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the injector",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Injector"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getInjector",
										"id": 475
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 422,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getInjector",
								"id": 475
							}
						},
						{
							"id": 521,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 522,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 436
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getType",
										"id": 471
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceHandlerContribution.getType",
										"id": 333
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 399,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getType",
								"id": 471
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.getType",
								"id": 332
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								502
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								516,
								511,
								506
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								523,
								527,
								525,
								521
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 654,
							"character": 50
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "WiServiceContribution",
							"id": 464
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 316
						},
						{
							"type": "reference",
							"name": "IWiServiceHandlerContribution",
							"id": 331
						}
					]
				},
				{
					"id": 479,
					"name": "WiServiceProviderContribution",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Abstract Service Contribution\n## [[WiServiceProviderContribution]]\nThe [[WiServiceProviderContribution]] represents another way of providing contribution\nwhere each field will have its own [[AbstractContribFieldProvider]],[[AbstractContribValidationProvider]],[[AbstractActionProvider]] and the [[WiServiceProviderContribution]]\nimplementation with @[[WiContrib]] decorator will tell the loader that the module is of type [[WiServiceProviderContribution]]. Each field value,validation\nand action provider is also a Angular injectable Service and must be decorated by @Injectable(). The contribution service is also a Angular injectable service\nas decorated with @Injectable() and also a Contribution Service with @WiContrib(metadata) deoorator.\n\n ### Example [[WiServiceProviderContribution]]  Contribution Service Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./timer-contrib\";\n import {WiServiceContribution} from \"wi-contrib\";\n @NgModule({\n imports: [CommonModule,HttpModule],\n exports: [],\n declarations: [],\n entryComponents: [],\n providers: [\n  {\n    provide: WiServiceContribution,\n    useClass: TimerContribService\n  },\n  {\n    provide: Field1Provider,\n    useClass: Field1Provider\n  },\n  {\n    provide: Field1ValidationProvider,\n    useClass: Field1ValidationProvider\n  }],\n bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n ### Example [[WiServiceProviderContribution]]  Contribution Module Typescript file\n ```\n import { ValidationResult } from \"wi-studio/common/models/validation\";\n import { IActivityContribution, IContributionContext } from \"wi-studio/common/models/contrib\";\n import { Injectable, Inject, Injector } from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import { Http } from \"@angular/http\";\n import { AbstractContribFieldProvider, AbstractContribValidationProvider, WiContrib, WiServiceContribution } from \"wi-studio/app/wi-contrib\";\n import {IValidationResult} from \"wi-studio/common/models/validation\";\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n   getFieldValue(context: IActivityContribution): Observable<string[]> {\n       return Observable.create(observer => {\n           observer.next(\"\");\n      });\n   }}\n @Injectable()\n export class Field1ValidationProvider extends AbstractContribValidationProvider {\n    validate(context: IContributionContext): Observable<IValidationResult> {\n        return Observable.create(observer => {\n            // tslint:disable-next-line:no-bitwise\n            let vresult: IValidationResult = ValidationResult.newValidationResult();\n            observer.next(vresult);\n        });\n    }}\n\n @WiContrib({\n    validationProviders: [{\n           field: \"field1\",\n            useClass: Field1ValidationProvider\n        }],\n    fieldProviders: [{\n            field: \"field1\",\n            useClass: Field1Provider\n        }]\n })\n @Injectable()\n export class TimerContribService extends WiServiceProviderContribution {}\n```\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 480,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "constructor"
							},
							"signatures": [
								{
									"id": 481,
									"name": "new WiServiceProviderContribution",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "constructor"
									},
									"parameters": [
										{
											"id": 482,
											"name": "injector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Injector"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Injector"
											}
										},
										{
											"id": 483,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Http"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Http"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiServiceProviderContribution",
										"id": 479
									},
									"overwrites": {
										"type": "reference",
										"name": "WiServiceContribution.__constructor",
										"id": 465
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 520,
									"character": 125
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "WiServiceContribution.__constructor",
								"id": 465
							}
						},
						{
							"id": 490,
							"name": "getActionHandler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 491,
									"name": "getActionHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "get action provider"
									},
									"parameters": [
										{
											"id": 492,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribActionProvider",
										"id": 240
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getActionHandler",
										"id": 327
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 569,
									"character": 20
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getActionHandler",
								"id": 326
							}
						},
						{
							"id": 495,
							"name": "getAnnotations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 496,
									"name": "getAnnotations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "get annotation from metadata"
									},
									"type": {
										"type": "reference",
										"name": "WiContribMetaData",
										"id": 460
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getAnnotations",
										"id": 473
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 412,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getAnnotations",
								"id": 473
							}
						},
						{
							"id": 484,
							"name": "getFieldProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 485,
									"name": "getFieldProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "get field provider"
									},
									"parameters": [
										{
											"id": 486,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribFieldProvider",
										"id": 236
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getFieldProvider",
										"id": 321
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 535,
									"character": 20
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getFieldProvider",
								"id": 320
							}
						},
						{
							"id": 499,
							"name": "getHttp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 500,
									"name": "getHttp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the [[Http]] object",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Http"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getHttp",
										"id": 477
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 431,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getHttp",
								"id": 477
							}
						},
						{
							"id": 497,
							"name": "getInjector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 498,
									"name": "getInjector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the injector",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Injector"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getInjector",
										"id": 475
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 422,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getInjector",
								"id": 475
							}
						},
						{
							"id": 493,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 494,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 436
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getType",
										"id": 471
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getType",
										"id": 330
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 399,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getType",
								"id": 471
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getType",
								"id": 329
							}
						},
						{
							"id": 487,
							"name": "getValidationProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 488,
									"name": "getValidationProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "get validation provider"
									},
									"parameters": [
										{
											"id": 489,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribValidationProvider",
										"id": 232
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getValidationProvider",
										"id": 324
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 552,
									"character": 25
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getValidationProvider",
								"id": 323
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								480
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								490,
								495,
								484,
								499,
								497,
								493,
								487
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 520,
							"character": 51
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "WiServiceContribution",
							"id": 464
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 316
						},
						{
							"type": "reference",
							"name": "IWiServiceProviderContribution",
							"id": 319
						}
					]
				},
				{
					"id": 453,
					"name": "IContribActionProviderMap",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action Provider Map"
					},
					"children": [
						{
							"id": 454,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Field Name"
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 86,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 455,
							"name": "useClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Action Provider Class"
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 90,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IContribActionProvider",
										"id": 240
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								454,
								455
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 82,
							"character": 42
						}
					]
				},
				{
					"id": 450,
					"name": "IContribFieldProviderMap",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "field provider map"
					},
					"children": [
						{
							"id": 451,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 75,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 452,
							"name": "useClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 76,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IContribFieldProvider",
										"id": 236
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								451,
								452
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 74,
							"character": 41
						}
					]
				},
				{
					"id": 443,
					"name": "IContribValidationProviderMap",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "interface Validation provider map"
					},
					"children": [
						{
							"id": 444,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 48,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 445,
							"name": "useClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 49,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IContribValidationProvider",
										"id": 232
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								444,
								445
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 47,
							"character": 46
						}
					]
				},
				{
					"id": 460,
					"name": "WiContribMetaData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Type of the WiContrib metadata."
					},
					"children": [
						{
							"id": 463,
							"name": "actionProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Defines the set of action providers that are available in the contribution\nof this module.\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ActionProvider extends AbstractActionProvider {\n  handleAction(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceProviderContribution {}\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 232,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IContribActionProviderMap",
									"id": 453
								}
							}
						},
						{
							"id": 462,
							"name": "fieldProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Defines the set of validation providers that are available in the contribution\nof this module.\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1Provider extends AbstractContribFieldProvider {\n  getFieldValue(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 189,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IContribFieldProviderMap",
									"id": 450
								}
							}
						},
						{
							"id": 461,
							"name": "validationProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the set of validation providers that are available in the contribution\nof this module.",
								"text": "## Simple Example\n\nHere is an example of a validation provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ValidationProvider extends AbstractContribValidationProvider {\n     validate(context: IContributionContext): Observable<IValidationResult> {\n         return Observable.create(observer => {\n              let vresult: IValidationResult = ValidationResult.newValidationResult();\n                     observer.next(vresult);\n          });\n     }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```\n"
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 152,
									"character": 23
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IContribValidationProviderMap",
									"id": 443
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								463,
								462,
								461
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 114,
							"character": 34
						}
					]
				},
				{
					"id": 580,
					"name": "WI_CONTRIB_SYMBOL",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"tags": [
							{
								"tag": "type",
								"text": "{symbol}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 108,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "symbol"
					},
					"defaultValue": " Symbol(\"@WiContrib\")"
				},
				{
					"id": 581,
					"name": "WiContrib",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 582,
							"name": "WiContrib",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "This decorator and annotation indicates the typescript class is a Web Integrator contribution\n## Example\n```\n\n  @WiContrib()\n  class RestService {}\n```\n\n"
									},
									{
										"tag": "constructor",
										"text": "\n"
									}
								]
							},
							"parameters": [
								{
									"id": 583,
									"name": "metadata",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "WiContribMetaData",
										"id": 460
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 584,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 585,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 586,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Function"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "app/contrib/wi-contrib.ts",
											"line": 782,
											"character": 55
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 782,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						456,
						446,
						439,
						529,
						545,
						464,
						501,
						479
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						453,
						450,
						443,
						460
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						580
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						581
					]
				}
			],
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 129,
			"name": "\"common/models/contrib\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/pdhar/dev/cloud/wi-studio/client/common/models/contrib.ts",
			"children": [
				{
					"id": 297,
					"name": "ActionResult",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action Result implementation"
					},
					"children": [
						{
							"id": 303,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {},
							"signatures": [
								{
									"id": 304,
									"name": "new ActionResult",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 305,
											"name": "result",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 36
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ActionResult",
										"id": 297
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 811,
									"character": 5
								}
							]
						},
						{
							"id": 299,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 802,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IValidationError",
										"id": 36
									},
									{
										"type": "reference",
										"name": "IAuthenticationResult",
										"id": 273
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.result",
								"id": 262
							}
						},
						{
							"id": 298,
							"name": "success",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 801,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.success",
								"id": 261
							}
						},
						{
							"id": 314,
							"name": "getResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 315,
									"name": "getResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "get Result Data",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IActionResult.getResult",
										"id": 272
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 855,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.getResult",
								"id": 271
							}
						},
						{
							"id": 306,
							"name": "isSuccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 307,
									"name": "isSuccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns if the action is successful or not",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IActionResult.isSuccess",
										"id": 264
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 827,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.isSuccess",
								"id": 263
							}
						},
						{
							"id": 311,
							"name": "setResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 312,
									"name": "setResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set result data",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 313,
											"name": "result",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 36
													},
													{
														"type": "reference",
														"name": "IAuthenticationResult",
														"id": 273
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 260
									},
									"implementationOf": {
										"type": "reference",
										"name": "IActionResult.setResult",
										"id": 269
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 846,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.setResult",
								"id": 268
							}
						},
						{
							"id": 308,
							"name": "setSuccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 309,
									"name": "setSuccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "set success or failure boolean state",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 310,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 260
									},
									"implementationOf": {
										"type": "reference",
										"name": "IActionResult.setSuccess",
										"id": 266
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 836,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.setSuccess",
								"id": 265
							}
						},
						{
							"id": 300,
							"name": "newActionResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 301,
									"name": "newActionResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "static constructor",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 302,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 36
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 260
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 809,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								303
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								299,
								298
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								314,
								306,
								311,
								308,
								300
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 800,
							"character": 25
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IActionResult",
							"id": 260
						}
					]
				},
				{
					"id": 277,
					"name": "AuthenticationResult",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "AuthenticationResult implementation"
					},
					"children": [
						{
							"id": 284,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "constructor"
							},
							"signatures": [
								{
									"id": 285,
									"name": "new AuthenticationResult",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "constructor"
									},
									"parameters": [
										{
											"id": 286,
											"name": "atype",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"name": "AUTHENTICATION_TYPE",
												"id": 422
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "AuthenticationResult",
										"id": 277
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 733,
									"character": 5
								}
							]
						},
						{
							"id": 280,
							"name": "authData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 724,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "IOAuthData",
								"id": 378
							},
							"implementationOf": {
								"type": "reference",
								"name": "IAuthenticationResult.authData",
								"id": 276
							}
						},
						{
							"id": 278,
							"name": "authType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 722,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "AUTHENTICATION_TYPE",
								"id": 422
							},
							"implementationOf": {
								"type": "reference",
								"name": "IAuthenticationResult.authType",
								"id": 274
							}
						},
						{
							"id": 279,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 723,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IConnectorContribution",
								"id": 212
							},
							"implementationOf": {
								"type": "reference",
								"name": "IAuthenticationResult.context",
								"id": 275
							}
						},
						{
							"id": 292,
							"name": "getAuthData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 293,
									"name": "getAuthData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the Authentication Data Object {{IOAuthData}} which holds the information for {AUTHENTICATION_TYPE.BASIC}\nOR\nReturns the Authentication Data Object {{IOAuthData}} which holds\nthe information for {AUTHENTICATION_TYPE.OAUTH1} | {AUTHENTICATION_TYPE.OAUTH2} |{AUTHENTICATION_TYPE.OAUTH2_TWOLEG}\ntype authentication mechanisms. The contribution developer needs to provide this information based on which\nthe contribution mechanism will introspect the callback return state information. It is not assumed that every authentication\ntype will not have this information requirement as it may not involve a callback. In case of OAUTH type authentication\nit is also not assumed that the state information is available by introspecting a fixed parameter name e.g. \"state\" so\nthe contribution developer need to provide this based on the SAAS authentication provider specifications.",
										"returns": "| {IBasicAuthData}\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IOAuthData",
												"id": 378
											},
											{
												"type": "reference",
												"name": "IBasicAuthData",
												"id": 376
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 775,
									"character": 15
								}
							]
						},
						{
							"id": 287,
							"name": "getContext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 288,
									"name": "getContext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "desc",
												"text": "Returns the Connector contribution JSON object which has the\nwhole connection context object passed to the Handler or Provider\nand gives the connector contribution mechanism to identify the connection\ninstance being created."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "IConnectorContribution",
										"id": 212
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 750,
									"character": 14
								}
							]
						},
						{
							"id": 294,
							"name": "setAuthData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 295,
									"name": "setAuthData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Authentication Data Object {{IOAuthData}} which holds the information for {AUTHENTICATION_TYPE.BASIC}\nOR\nSets the Authentication Data Object {{IOAuthData}} which holds\nthe information for {AUTHENTICATION_TYPE.OAUTH1} | {AUTHENTICATION_TYPE.OAUTH2} |{AUTHENTICATION_TYPE.OAUTH2_TWOLEG}\ntype authentication mechanisms. The contribution developer needs to provide this information based on which\nthe contribution mechanism will introspect the callback return state information. It is not assumed that every authentication\ntype will not have this information requirement as it may not involve a callback. In case of OAUTH type authentication\nit is also not assumed that the state information is available by introspecting a fixed parameter name e.g. \"state\" so\nthe contribution developer need to provide this based on the SAAS authentication provider specifications."
									},
									"parameters": [
										{
											"id": 296,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IOAuthData",
												"id": 378
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 791,
									"character": 15
								}
							]
						},
						{
							"id": 289,
							"name": "setContext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 290,
									"name": "setContext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "desc",
												"text": "Sets the connection context object passed to the Handler or Provider\nand gives the connector contribution mechanism to identify the connection"
											}
										]
									},
									"parameters": [
										{
											"id": 291,
											"name": "ctx",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IConnectorContribution",
												"id": 212
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 759,
									"character": 14
								}
							]
						},
						{
							"id": 281,
							"name": "newAuthenticationResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 282,
									"name": "newAuthenticationResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "static constructor",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 283,
											"name": "atype",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "AUTHENTICATION_TYPE",
												"id": 422
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IAuthenticationResult",
										"id": 273
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 731,
									"character": 34
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								284
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								280,
								278,
								279
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								292,
								287,
								294,
								289,
								281
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 721,
							"character": 33
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IAuthenticationResult",
							"id": 273
						}
					]
				},
				{
					"id": 130,
					"name": "ContributionTypeConverter",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Contribution type converter from Flogo types"
					},
					"children": [
						{
							"id": 131,
							"name": "fromString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 132,
									"name": "fromString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 133,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CONTRIBUTION_TYPE",
										"id": 396
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 17,
									"character": 28
								}
							]
						},
						{
							"id": 134,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 135,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 136,
											"name": "ctype",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CONTRIBUTION_TYPE",
												"id": 396
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 29,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								131,
								134
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 16,
							"character": 38
						}
					]
				},
				{
					"id": 381,
					"name": "OAuthData",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "IOAuthData implementation",
						"tags": [
							{
								"tag": "desc",
								"text": "Helper class to create {{IOAuthData}} objects\n"
							}
						]
					},
					"children": [
						{
							"id": 388,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "constructor"
							},
							"signatures": [
								{
									"id": 389,
									"name": "new OAuthData",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "constructor"
									},
									"parameters": [
										{
											"id": 390,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 391,
											"name": "stateQueryParam",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OAuthData",
										"id": 381
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1071,
									"character": 5
								}
							]
						},
						{
							"id": 382,
							"name": "authLoginUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1060,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IOAuthData.authLoginUrl",
								"id": 379
							}
						},
						{
							"id": 383,
							"name": "authStateQueryParam",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1061,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IOAuthData.authStateQueryParam",
								"id": 380
							}
						},
						{
							"id": 392,
							"name": "getAuthLoginURL",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 393,
									"name": "getAuthLoginURL",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "desc",
												"text": "Returns the Authentication Login URL provided by the Connector without any state information parameters"
											},
											{
												"tag": "example",
												"text": "https://login.salesforce.com/services/oauth2/authorize?response_type=code&client_id=CLIENTID&redirect_uri=REDIRECTURL&display=popup&prompt=login consent\n where REDIRECT_URL=https://localdev-integration.cloud.tibco.com/wistudio/connectiondetails\n NOTE: state information parameter for Salesforce \"state\" is not part of the URL"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1090,
									"character": 19
								}
							]
						},
						{
							"id": 394,
							"name": "getAuthStateQueryParam",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 395,
									"name": "getAuthStateQueryParam",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the property which tells the Contribution Model what is the state information parameter name being used by the OAUTH provider\nto return state of the Application before making the authentication request to the SAAS authentication provider.",
										"returns": "\n",
										"tags": [
											{
												"tag": "example",
												"text": "For Saleforce the state information parameter is \"state\""
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1100,
									"character": 26
								}
							]
						},
						{
							"id": 384,
							"name": "newOAuthData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 385,
									"name": "newOAuthData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "static constructor",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 386,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 387,
											"name": "stateQueryParam",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OAuthData",
										"id": 381
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1069,
									"character": 23
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								388
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								382,
								383
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								392,
								394,
								384
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1059,
							"character": 22
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IOAuthData",
							"id": 378
						}
					]
				},
				{
					"id": 209,
					"name": "IActionDefinition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action Definition interface"
					},
					"children": [
						{
							"id": 211,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Button display settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 403,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IFieldDisplay",
								"id": 140
							}
						},
						{
							"id": 210,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Unique name to identify the button. If display name is not provided name will be used."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 399,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								211,
								210
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 395,
							"character": 34
						}
					]
				},
				{
					"id": 260,
					"name": "IActionResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The result of any button action is return values."
					},
					"children": [
						{
							"id": 262,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "if the action is a failure then any associated errors are returned.\nOR Authentication Results OR any"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 660,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IValidationError",
										"id": 36
									},
									{
										"type": "reference",
										"name": "IAuthenticationResult",
										"id": 273
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 261,
							"name": "success",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "property hold status if the action was a success or a failure"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 655,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 271,
							"name": "getResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 272,
									"name": "getResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "property getter for [[result]]",
										"returns": "\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationError",
												"id": 36
											},
											{
												"type": "reference",
												"name": "IAuthenticationResult",
												"id": 273
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 686,
									"character": 13
								}
							]
						},
						{
							"id": 263,
							"name": "isSuccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 264,
									"name": "isSuccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " getter function of [[success]] property",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 666,
									"character": 13
								}
							]
						},
						{
							"id": 268,
							"name": "setResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 269,
									"name": "setResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "property setter for [[result]]",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 270,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 36
													},
													{
														"type": "reference",
														"name": "IAuthenticationResult",
														"id": 273
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 260
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 680,
									"character": 13
								}
							]
						},
						{
							"id": 265,
							"name": "setSuccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 266,
									"name": "setSuccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "property setter for [[success]]",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 267,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 260
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 673,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								262,
								261
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								271,
								263,
								268,
								265
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 651,
							"character": 30
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "ActionResult",
							"id": 297
						}
					]
				},
				{
					"id": 195,
					"name": "IActivityContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Activity Contribution"
					},
					"children": [
						{
							"id": 208,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 69,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.appId",
								"id": 139
							}
						},
						{
							"id": 207,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 68,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.changelist",
								"id": 138
							}
						},
						{
							"id": 201,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display Settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 375,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IContributionDisplay",
								"id": 170
							}
						},
						{
							"id": 202,
							"name": "inputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity Inputs"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 379,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 161
								}
							}
						},
						{
							"id": 196,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity name, must be unique, no spaces"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 355,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 203,
							"name": "outputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity Outputs"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 383,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 161
								}
							}
						},
						{
							"id": 200,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "URI reference for the contribution"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 371,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 197,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Title to display on the activity tile"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 359,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 199,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 367,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 198,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Version number, use semver versioning"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 363,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 204,
							"name": "getField",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 205,
									"name": "getField",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a field from inputs,outputs. Field Names must be unique within the activity"
									},
									"parameters": [
										{
											"id": 206,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IFieldDefinition",
										"id": 161
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 389,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								208,
								207,
								201,
								202,
								196,
								203,
								200,
								197,
								199,
								198
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								204
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 351,
							"character": 38
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IContributionContext",
							"id": 137
						}
					]
				},
				{
					"id": 273,
					"name": "IAuthenticationResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents the Authentication Result data structure returned by the\nconnector contribution developer when a OAUTH login action is invoked from the\nconnector form buttons defined in connector.json",
						"text": "The {{IAuthenticationResult}} is returned with the {{IActionResult}} result\nparameter.\n"
					},
					"children": [
						{
							"id": 276,
							"name": "authData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Depending on {{AUTHENTICATION_TYPE}} authData will hold different\ntypes of Data Interfaces.\n * {{AUTHENTICATION_TYPE.BASIC}} : {{IBasicAuthData}}\n * {{AUTHENTICATION_TYPE.OAUTH1}} : {{IOAuthData}}\n * {{AUTHENTICATION_TYPE.OAUTH2}} : {{IOAuthData}}\n * {{AUTHENTICATION_TYPE.OAUTH2_TWOLEG}} : {{IOAuthData}}"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 714,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IOAuthData",
										"id": 378
									},
									{
										"type": "reference",
										"name": "IBasicAuthData",
										"id": 376
									}
								]
							}
						},
						{
							"id": 274,
							"name": "authType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The {{AUTHENTICATION_TYPE}} being used for the action result"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 701,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "AUTHENTICATION_TYPE",
								"id": 422
							}
						},
						{
							"id": 275,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The contribution context being used in the action handler OR provider"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 705,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IConnectorContribution",
								"id": 212
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								276,
								274,
								275
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 697,
							"character": 38
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AuthenticationResult",
							"id": 277
						}
					]
				},
				{
					"id": 316,
					"name": "IBaseServiceContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Base Service Contribution"
					},
					"children": [
						{
							"id": 317,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 318,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 436
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 875,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								317
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 870,
							"character": 41
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IWiServiceProviderContribution",
							"id": 319
						},
						{
							"type": "reference",
							"name": "IWiServiceHandlerContribution",
							"id": 331
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "WiServiceContribution",
							"id": 464
						},
						{
							"type": "reference",
							"name": "WiServiceHandlerContribution",
							"id": 501
						},
						{
							"type": "reference",
							"name": "WiServiceProviderContribution",
							"id": 479
						}
					]
				},
				{
					"id": 376,
					"name": "IBasicAuthData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents the OAUTH data structure in {{IAuthenticationResult}} returned by the\nconnector contribution developer when a OAUTH login action is invoked from the\nconnector form buttons defined in connector.json",
						"text": "Authentication Data Structure if {AUTHENTICATION_TYPE} is\n * {AUTHENTICATION_TYPE.BASIC}\n"
					},
					"children": [
						{
							"id": 377,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1025,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								377
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1024,
							"character": 31
						}
					]
				},
				{
					"id": 158,
					"name": "IConnectionAllowedValue",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "desc",
								"text": "This interface defines the contract between the value provider of a field\nwhose display field type is {{DisplayFieldType.connection}}.\n"
							}
						]
					},
					"children": [
						{
							"id": 160,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This is a name which is either calculated or provided via field value\nin the connection JSON settings. In absence of name unique_id will be\nused for display as a drop down choice."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 198,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 159,
							"name": "unique_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "desc",
										"text": "This is the unique id assigned to a new connection during creation"
									},
									{
										"tag": "example",
										"text": "uuid\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 192,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								160,
								159
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 187,
							"character": 40
						}
					]
				},
				{
					"id": 212,
					"name": "IConnectorContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Connector Contribution"
					},
					"children": [
						{
							"id": 221,
							"name": "actions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Form Action configuration"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 463,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IActionDefinition",
									"id": 209
								}
							}
						},
						{
							"id": 223,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 69,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.appId",
								"id": 139
							}
						},
						{
							"id": 222,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 68,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.changelist",
								"id": 138
							}
						},
						{
							"id": 219,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display Settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 439,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IContributionDisplay",
								"id": 170
							}
						},
						{
							"id": 218,
							"name": "keyfield",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Provider the field name in settings section which will hold identifiable\nname for the connection. In the absence of this keyfield the unique\nconnection record identifier e.g. uuid will be used for display."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 435,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 213,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Connector name. Must be unique, no spaces"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 413,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 217,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "URI reference for connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 429,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 220,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Static connector configurations e.g. connection name, connection description, connection configuration etc.",
								"text": "FOR {{AUTHENTICATION_TYPE}} IS {{AUTHENTICATION_TYPE.OAUTH1 }} | {{AUTHENTICATION_TYPE.OAUTH2 }} | {{AUTHENTICATION_TYPE.OAUTH2_TWOLEG }}\nFIXED ReEntry Field Name **WI_STUDIO_OAUTH_CONNECTOR_INFO** is mandatory.\n\nThis field is not required for other Authentication purposes where it does not\ninvolve a round trip to the third party auth system with a callback\nThe user can save all the required authentication tokens in this field which is\nthen used by the activity contribution developer to use this information.\n\n{\n  \"name\" : \"WI_STUDIO_OAUTH_CONNECTOR_INFO\",\n  \"type\" : \"string\",\n  \"display\": {\n     \"visible\": false\n  }\n }\n"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 459,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 161
								}
							}
						},
						{
							"id": 214,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Title to display on the connection tile"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 417,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 425,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 215,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Connector version. Must follow semver versioning"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 421,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								221,
								223,
								222,
								219,
								218,
								213,
								217,
								220,
								214,
								216,
								215
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 409,
							"character": 39
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IContributionContext",
							"id": 137
						}
					]
				},
				{
					"id": 240,
					"name": "IContribActionProvider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "interface Action handler provider"
					},
					"children": [
						{
							"id": 241,
							"name": "handleAction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 242,
									"name": "handleAction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "handle action",
										"returns": "\n",
										"tags": [
											{
												"tag": "typeparam",
												"text": "The generic type parameter indicating the value type being returned.",
												"param": "T"
											}
										]
									},
									"parameters": [
										{
											"id": 243,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 435
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 549,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								241
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 541,
							"character": 39
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AbstractContribActionProvider",
							"id": 456
						}
					]
				},
				{
					"id": 236,
					"name": "IContribFieldProvider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "interface Field Provider"
					},
					"children": [
						{
							"id": 237,
							"name": "getFieldValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 238,
									"name": "getFieldValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets Field Value",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 239,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 435
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 535,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								237
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 528,
							"character": 38
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AbstractContribFieldProvider",
							"id": 446
						}
					]
				},
				{
					"id": 232,
					"name": "IContribValidationProvider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "interface Validation provider"
					},
					"children": [
						{
							"id": 233,
							"name": "validate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 234,
									"name": "validate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "validate",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 235,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 435
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationResult",
												"id": 75
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 75
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 522,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								233
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 516,
							"character": 43
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AbstractContribValidationProvider",
							"id": 439
						}
					]
				},
				{
					"id": 137,
					"name": "IContributionContext",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The UI form sends the IContributionContext"
					},
					"children": [
						{
							"id": 139,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 69,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 138,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 68,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								139,
								138
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 67,
							"character": 37
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ITriggerContribution",
							"id": 180
						},
						{
							"type": "reference",
							"name": "IActivityContribution",
							"id": 195
						},
						{
							"type": "reference",
							"name": "IConnectorContribution",
							"id": 212
						}
					]
				},
				{
					"id": 170,
					"name": "IContributionDisplay",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Display attributes for the contribution"
					},
					"children": [
						{
							"id": 172,
							"name": "category",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Specifies the category of the contribution e.g. Salesforce,Marketo , default is \"General\""
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 259,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 176,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Description"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 275,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 175,
							"name": "largeIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the small icon path. The path is relative to the contribution folder root. i.e. icons/file.png"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 271,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 171,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "display name for the contribution"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 255,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 177,
							"name": "sections",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sections for dynamic tabs"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 279,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 174,
							"name": "smallIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the small icon path. The path is relative to the contribution folder root. i.e. icons/file.png"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 267,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 173,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies if a contribution is visible and enabled"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 263,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								172,
								176,
								175,
								171,
								177,
								174,
								173
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 251,
							"character": 37
						}
					]
				},
				{
					"id": 244,
					"name": "IContributionHandler",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " Contribution Handler interface",
						"tags": [
							{
								"tag": "description",
								"text": "A comtribution handler implementation provides the following handlers\n * value - value provider for the given field\n * validate - vrules provider for the given field\n * action - action handler for a given button.\n"
							}
						]
					},
					"children": [
						{
							"id": 255,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional action handler for form buttons\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "actionId"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 645,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 256,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 257,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 258,
													"name": "actionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 259,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 435
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 260
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 260
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 645,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 250,
							"name": "validate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Validate a specified field name parameter\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 616,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 251,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 252,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 253,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 254,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 435
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IValidationResult",
																"id": 75
															}
														]
													},
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 75
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 616,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 245,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
								"text": "Here is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```",
								"tags": [
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 588,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 246,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 247,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 248,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 249,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 435
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 588,
											"character": 10
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								255,
								250,
								245
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 561,
							"character": 37
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IWiServiceHandlerContribution",
							"id": 331
						}
					]
				},
				{
					"id": 161,
					"name": "IFieldDefinition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Field Definition"
					},
					"children": [
						{
							"id": 166,
							"name": "allowed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "specified allowed value for display field type \"dropdown\", keeping it same as flogo\nFor field display type == {{DisplayFieldType.connections}} then allowed property should\nreturn array of {{IConnectionAllowedValue}}"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 233,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IConnectionAllowedValue",
											"id": 158
										}
									}
								]
							}
						},
						{
							"id": 168,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Description"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 241,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 169,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Field display settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 245,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IFieldDisplay",
								"id": 140
							}
						},
						{
							"id": 162,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "name of the field, not same as display name"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 215,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 165,
							"name": "required",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "specifies if the form field is required"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 227,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 167,
							"name": "section",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to place the field in a customized form tab section"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 237,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 163,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "data type of the field in string e.g. string,number"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 219,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "FieldType",
								"id": 432
							}
						},
						{
							"id": 164,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "value of the field"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 223,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								166,
								168,
								169,
								162,
								165,
								167,
								163,
								164
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 211,
							"character": 33
						}
					]
				},
				{
					"id": 140,
					"name": "IFieldDisplay",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Field display settings"
					},
					"children": [
						{
							"id": 151,
							"name": "buttonStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Button Styles when display type is button. Default style is \"btn-default\""
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 154,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonStyle",
								"id": 420
							}
						},
						{
							"id": 150,
							"name": "buttonType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the button type. Default type is \"button\""
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 150,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonType",
								"id": 418
							}
						},
						{
							"id": 144,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Descrption for the field"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 126,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 145,
							"name": "fileExtensions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used with display field type fileselector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 130,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 156,
							"name": "inputSettingsOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display in only Input Settings but not in mapper"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 175,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 146,
							"name": "mappable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "true when field is also shown in mapper, else false"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 134,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 141,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Named used in display"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 114,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 157,
							"name": "outputSettingsOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display in only Output Settings but not in output tree"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 180,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 152,
							"name": "readonly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sets the widget in read-only mode"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 158,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 148,
							"name": "schema",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used with display field type table"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 142,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 143,
							"name": "selection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used with display field type dropdown"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 122,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 155,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display in only mapper but not on input settings/ output settings even though there is display section"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 170,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 147,
							"name": "syntax",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": " Used with display field type texteditor"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 138,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 142,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display field type"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 118,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "DisplayFieldType",
								"id": 416
							}
						},
						{
							"id": 154,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 165,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 153,
							"name": "valid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether the field is valid or not"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 162,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 149,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "specifies if the field is visible , the field is always enabled. The default is true."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 146,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								151,
								150,
								144,
								145,
								156,
								146,
								141,
								157,
								152,
								148,
								143,
								155,
								147,
								142,
								154,
								153,
								149
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 110,
							"character": 30
						}
					]
				},
				{
					"id": 224,
					"name": "IFunctionArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Function args"
					},
					"children": [
						{
							"id": 225,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Argument name"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 474,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 226,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Argument type"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 478,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								225,
								226
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 470,
							"character": 30
						}
					]
				},
				{
					"id": 227,
					"name": "IFunctionContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Function contribution"
					},
					"children": [
						{
							"id": 230,
							"name": "args",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Function argument definition"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 496,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFunctionArgs",
									"id": 224
								}
							}
						},
						{
							"id": 229,
							"name": "category",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Function category"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 492,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 228,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Name of the function"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 488,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 231,
							"name": "return",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Return type"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 500,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								230,
								229,
								228,
								231
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 484,
							"character": 38
						}
					]
				},
				{
					"id": 178,
					"name": "IHandlerDefinition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Endpoint Definition"
					},
					"children": [
						{
							"id": 179,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Endpoint settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 297,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 161
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								179
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 293,
							"character": 35
						}
					]
				},
				{
					"id": 378,
					"name": "IOAuthData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents the OAUTH data structure in {IAuthenticationResult} returned by the\nconnector contribution developer when a OAUTH login action is invoked from the\nconnector form buttons defined in connector.json",
						"text": "Authentication Data Structure if {AUTHENTICATION_TYPE} is\n * {AUTHENTICATION_TYPE.OAUTH1}\n * {AUTHENTICATION_TYPE.OAUTH2}\n * {AUTHENTICATION_TYPE.OAUTH2_TWOLEG}\n"
					},
					"children": [
						{
							"id": 379,
							"name": "authLoginUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Authentication Login URL provided by the Connector without any state information parameters",
								"tags": [
									{
										"tag": "example",
										"text": "https://login.salesforce.com/services/oauth2/authorize?response_type=code&client_id=CLIENTID&redirect_uri=REDIRECTURL&display=popup&prompt=login consent\n where REDIRECT_URL=https://localdev-integration.cloud.tibco.com/wistudio/connectiondetails\n NOTE: state information parameter for Salesforce \"state\" is not part of the URL\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1046,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 380,
							"name": "authStateQueryParam",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This property will tell the Contribution Model what is the state information parameter name being used by the OAUTH provider\nto return state of the Application before making the authentication request to the SAAS authentication provider.",
								"tags": [
									{
										"tag": "example",
										"text": "For Saleforce the state information parameter is \"state\"\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1052,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								379,
								380
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1039,
							"character": 27
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "OAuthData",
							"id": 381
						}
					]
				},
				{
					"id": 180,
					"name": "ITriggerContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Trigger Contribution interface"
					},
					"children": [
						{
							"id": 194,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 69,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.appId",
								"id": 139
							}
						},
						{
							"id": 193,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 68,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.changelist",
								"id": 138
							}
						},
						{
							"id": 186,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display Settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 327,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IContributionDisplay",
								"id": 170
							}
						},
						{
							"id": 188,
							"name": "handler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger handler endpoint settings, e.g. for each port setting there can be multiple handlers"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 335,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IHandlerDefinition",
								"id": 178
							}
						},
						{
							"id": 181,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " trigger name, must be unique, no spaces"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 307,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 189,
							"name": "outputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger output fields"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 339,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 161
								}
							}
						},
						{
							"id": 185,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "URI reference for the contribution"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 323,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 187,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger static settings i.e. port number, logging etc."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 331,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 161
								}
							}
						},
						{
							"id": 182,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Title to display on the trigger tile"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 311,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 184,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 319,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 183,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Version number , use semver versioning"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 315,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 190,
							"name": "getField",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 191,
									"name": "getField",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a field from settings,endpoint,outputs. Field names must be unique within the trigger"
									},
									"parameters": [
										{
											"id": 192,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IFieldDefinition",
										"id": 161
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 345,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								194,
								193,
								186,
								188,
								181,
								189,
								185,
								187,
								182,
								184,
								183
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								190
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 303,
							"character": 37
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IContributionContext",
							"id": 137
						}
					]
				},
				{
					"id": 349,
					"name": "IWiServiceContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Service contribution interface"
					},
					"children": [
						{
							"id": 362,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional action handler for form buttons\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "actionId"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 645,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 363,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 364,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 365,
													"name": "actionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 366,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 435
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 260
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 260
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 645,
											"character": 12
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.action",
								"id": 255
							}
						},
						{
							"id": 357,
							"name": "validate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Validate a specified field name parameter\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 616,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 358,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 359,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 360,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 361,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 435
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IValidationResult",
																"id": 75
															}
														]
													},
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 75
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 616,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.validate",
								"id": 250
							}
						},
						{
							"id": 352,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
								"text": "Here is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```",
								"tags": [
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 588,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 353,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 354,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 355,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 356,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 435
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 588,
											"character": 10
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.value",
								"id": 245
							}
						},
						{
							"id": 373,
							"name": "getActionHandler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 374,
									"name": "getActionHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the action provider for a given button field in the form.\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ActionProvider extends AbstractActionProvider {\n  handleAction(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceProviderContribution {}\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 375,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribActionProvider",
										"id": 240
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getActionHandler",
										"id": 326
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1001,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getActionHandler",
								"id": 326
							}
						},
						{
							"id": 367,
							"name": "getFieldProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 368,
									"name": "getFieldProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the FieldProvider for a given field.\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n  getFieldValue(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 369,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribFieldProvider",
										"id": 236
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getFieldProvider",
										"id": 320
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 918,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getFieldProvider",
								"id": 320
							}
						},
						{
							"id": 350,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 351,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 436
									},
									"overwrites": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 317
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 317
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 875,
									"character": 11
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 317
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 317
							}
						},
						{
							"id": 370,
							"name": "getValidationProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 371,
									"name": "getValidationProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the vrules provider for a given field.\n\nHere is an example of a vrules provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ValidationProvider extends AbstractContribValidationProvider {\n     validate(context: IContributionContext): Observable<IValidationResult> {\n         return Observable.create(observer => {\n              let vresult: IValidationResult = ValidationResult.newValidationResult();\n                     observer.next(vresult);\n          });\n     }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 372,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribValidationProvider",
										"id": 232
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getValidationProvider",
										"id": 323
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 956,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getValidationProvider",
								"id": 323
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								362,
								357,
								352
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								373,
								367,
								350,
								370
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1013,
							"character": 39
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IWiServiceHandlerContribution",
							"id": 331
						},
						{
							"type": "reference",
							"name": "IWiServiceProviderContribution",
							"id": 319
						}
					]
				},
				{
					"id": 331,
					"name": "IWiServiceHandlerContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Handler Service contribution interface"
					},
					"children": [
						{
							"id": 344,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional action handler for form buttons\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "actionId"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 645,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 345,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 346,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 347,
													"name": "actionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 348,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 435
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 260
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 260
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 645,
											"character": 12
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.action",
								"id": 255
							}
						},
						{
							"id": 339,
							"name": "validate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Validate a specified field name parameter\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 616,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 340,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 341,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 342,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 343,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 435
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IValidationResult",
																"id": 75
															}
														]
													},
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 75
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 616,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.validate",
								"id": 250
							}
						},
						{
							"id": 334,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
								"text": "Here is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```",
								"tags": [
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 588,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 335,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 336,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 337,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 338,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 435
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 588,
											"character": 10
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.value",
								"id": 245
							}
						},
						{
							"id": 332,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 333,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 436
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 317
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 875,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 317
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								344,
								339,
								334
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								332
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1007,
							"character": 46
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 316
						},
						{
							"type": "reference",
							"name": "IContributionHandler",
							"id": 244
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IWiServiceContribution",
							"id": 349
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "WiServiceHandlerContribution",
							"id": 501
						}
					]
				},
				{
					"id": 319,
					"name": "IWiServiceProviderContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Provider Service contribution interface"
					},
					"children": [
						{
							"id": 326,
							"name": "getActionHandler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 327,
									"name": "getActionHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the action provider for a given button field in the form.\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ActionProvider extends AbstractActionProvider {\n  handleAction(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceProviderContribution {}\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 328,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribActionProvider",
										"id": 240
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1001,
									"character": 20
								}
							]
						},
						{
							"id": 320,
							"name": "getFieldProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 321,
									"name": "getFieldProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the FieldProvider for a given field.\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n  getFieldValue(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 322,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribFieldProvider",
										"id": 236
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 918,
									"character": 20
								}
							]
						},
						{
							"id": 329,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 330,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 436
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 317
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 875,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 317
							}
						},
						{
							"id": 323,
							"name": "getValidationProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 324,
									"name": "getValidationProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the vrules provider for a given field.\n\nHere is an example of a vrules provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ValidationProvider extends AbstractContribValidationProvider {\n     validate(context: IContributionContext): Observable<IValidationResult> {\n         return Observable.create(observer => {\n              let vresult: IValidationResult = ValidationResult.newValidationResult();\n                     observer.next(vresult);\n          });\n     }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 325,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribValidationProvider",
										"id": 232
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 956,
									"character": 25
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								326,
								320,
								329,
								323
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 881,
							"character": 47
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 316
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IWiServiceContribution",
							"id": 349
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "WiServiceProviderContribution",
							"id": 479
						}
					]
				},
				{
					"id": 427,
					"name": "ActionButton",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action item for button catalog"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 101,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 428,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 430,
									"name": "actionId",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 103,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 431,
									"name": "display",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 104,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "IFieldDisplay",
										"id": 140
									}
								},
								{
									"id": 429,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 102,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										430,
										431,
										429
									]
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 101,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 412,
					"name": "CONTRIBUTION_LOAD_RESULT",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "CONTRIBUTION_LOAD_RESULT type"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 62,
							"character": 36
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 413,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 415,
									"name": "data",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 62,
											"character": 61
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 414,
									"name": "status",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 62,
											"character": 47
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										415,
										414
									]
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 62,
									"character": 38
								}
							]
						}
					}
				},
				{
					"id": 406,
					"name": "FUNCTION_CONTRIBUTION",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "FUNCTION_CONTRIBUTION type",
						"tags": [
							{
								"tag": "typeparam",
								"text": "The generic type parameter indicating the value type being returned.",
								"param": "T"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 52,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 407,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 409,
									"name": "category",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 54,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 411,
									"name": "function",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 56,
											"character": 12
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 408,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 53,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 410,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 55,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "CONTRIBUTION_TYPE",
										"id": 396
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										409,
										411,
										408,
										410
									]
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 52,
									"character": 38
								}
							]
						}
					}
				},
				{
					"id": 435,
					"name": "IContributionTypes",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Union Type from all contribution types"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 506,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "IContributionContext",
								"id": 137
							},
							{
								"type": "reference",
								"name": "ITriggerContribution",
								"id": 180
							},
							{
								"type": "reference",
								"name": "IActivityContribution",
								"id": 195
							},
							{
								"type": "reference",
								"name": "IConnectorContribution",
								"id": 212
							}
						]
					}
				},
				{
					"id": 398,
					"name": "MODULE_CONTRIBUTION",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "MODULE_CONTRIBUTION type",
						"tags": [
							{
								"tag": "typeparam",
								"text": "The generic type parameter indicating the value type being returned",
								"param": "T"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 39,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 399,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 404,
									"name": "files",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 44,
											"character": 9
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 400,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 40,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 402,
									"name": "route",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 42,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 403,
									"name": "routePath",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 43,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 405,
									"name": "service",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 45,
											"character": 11
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 401,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 41,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "CONTRIBUTION_TYPE",
										"id": 396
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										404,
										400,
										402,
										403,
										405,
										401
									]
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 39,
									"character": 36
								}
							]
						}
					}
				},
				{
					"id": 422,
					"name": "AUTHENTICATION_TYPE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 91,
							"character": 32
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 92,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "BASIC"
							},
							{
								"type": "stringLiteral",
								"value": "OAUTH1"
							},
							{
								"type": "stringLiteral",
								"value": "OAUTH2"
							},
							{
								"type": "stringLiteral",
								"value": "OAUTH2_TWOLEG"
							}
						]
					},
					"defaultValue": " strEnum([\"BASIC\", \"OAUTH1\", \"OAUTH2\", \"OAUTH2_TWOLEG\"])"
				},
				{
					"id": 420,
					"name": "ButtonStyle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " Button Style string enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string|string|string|string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 88,
							"character": 24
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 89,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "primary"
							},
							{
								"type": "stringLiteral",
								"value": "success"
							},
							{
								"type": "stringLiteral",
								"value": "info"
							},
							{
								"type": "stringLiteral",
								"value": "warning"
							},
							{
								"type": "stringLiteral",
								"value": "danger"
							}
						]
					},
					"defaultValue": " strEnum([\"default\", \"primary\", \"success\", \"info\", \"warning\", \"danger\"])"
				},
				{
					"id": 418,
					"name": "ButtonType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Button Type string enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 82,
							"character": 23
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 83,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "button"
							},
							{
								"type": "stringLiteral",
								"value": "submit"
							},
							{
								"type": "stringLiteral",
								"value": "reset"
							}
						]
					},
					"defaultValue": " strEnum([\"submit\", \"reset\", \"button\"])"
				},
				{
					"id": 396,
					"name": "CONTRIBUTION_TYPE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Contribution type enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string|string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 10,
							"character": 30
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 11,
							"character": 29
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "trigger"
							},
							{
								"type": "stringLiteral",
								"value": "activity"
							},
							{
								"type": "stringLiteral",
								"value": "connector"
							},
							{
								"type": "stringLiteral",
								"value": "function"
							}
						]
					},
					"defaultValue": " strEnum([\"trigger\", \"activity\", \"connector\", \"function\"])"
				},
				{
					"id": 424,
					"name": "CONTRIB_PROXY_END_POINT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 94,
							"character": 36
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "/wistudio/v1/contributions/proxy/"
					},
					"defaultValue": "\"/wistudio/v1/contributions/proxy/\""
				},
				{
					"id": 434,
					"name": "DEFAULT_CONTRIBUTION_CATEGORY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Default contribution category",
						"tags": [
							{
								"tag": "type",
								"text": "{string}"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 288,
							"character": 42
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "General"
					},
					"defaultValue": "\"General\""
				},
				{
					"id": 416,
					"name": "DisplayFieldType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " DisplayField Type string enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string|string|string|string|string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 76,
							"character": 29
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 77,
							"character": 28
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "connection"
							},
							{
								"type": "stringLiteral",
								"value": "dropdown"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "texteditor"
							},
							{
								"type": "stringLiteral",
								"value": "fileselector"
							},
							{
								"type": "stringLiteral",
								"value": "connectiondata"
							},
							{
								"type": "stringLiteral",
								"value": "button"
							},
							{
								"type": "stringLiteral",
								"value": "params"
							}
						]
					},
					"defaultValue": " strEnum([\"connection\", \"dropdown\", \"table\", \"texteditor\", \"fileselector\", \"connectiondata\", \"button\", \"params\"])"
				},
				{
					"id": 432,
					"name": "FieldType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "FieldType string enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string | string | string | string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 205,
							"character": 22
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 206,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "array"
							},
							{
								"type": "stringLiteral",
								"value": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "integer"
							},
							{
								"type": "stringLiteral",
								"value": "number"
							},
							{
								"type": "stringLiteral",
								"value": "object"
							},
							{
								"type": "stringLiteral",
								"value": "string"
							},
							{
								"type": "stringLiteral",
								"value": "complex_object"
							}
						]
					},
					"defaultValue": " strEnum([\"string\", \"number\", \"boolean\", \"complex_object\", \"array\", \"object\", \"integer\"])"
				},
				{
					"id": 425,
					"name": "HTTP_METHOD",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 96,
							"character": 24
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 97,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "GET"
							},
							{
								"type": "stringLiteral",
								"value": "POST"
							},
							{
								"type": "stringLiteral",
								"value": "PUT"
							},
							{
								"type": "stringLiteral",
								"value": "DELETE"
							}
						]
					},
					"defaultValue": " strEnum([\"GET\", \"POST\", \"PUT\", \"DELETE\"])"
				},
				{
					"id": 436,
					"name": "IServiceContributionType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Service Contribution Type",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 864,
							"character": 37
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 865,
							"character": 36
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "Provider"
							},
							{
								"type": "stringLiteral",
								"value": "Handler"
							}
						]
					},
					"defaultValue": " strEnum([\"Provider\", \"Handler\"])"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						297,
						277,
						130,
						381
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						209,
						260,
						195,
						273,
						316,
						376,
						158,
						212,
						240,
						236,
						232,
						137,
						170,
						244,
						161,
						140,
						224,
						227,
						178,
						378,
						180,
						349,
						331,
						319
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						427,
						412,
						406,
						435,
						398
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						422,
						420,
						418,
						396,
						424,
						434,
						416,
						432,
						425,
						436
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 35,
			"name": "\"common/models/validation\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/pdhar/dev/cloud/wi-studio/client/common/models/validation.ts",
			"children": [
				{
					"id": 71,
					"name": "EnumValidationState",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Field Validation State Enumeration"
					},
					"children": [
						{
							"id": 72,
							"name": "WI_READONLY",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The field is read only based on the bit flag",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 118,
									"character": 15
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 74,
							"name": "WI_VALID",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The field is valid based on the bit flag",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 128,
									"character": 12
								}
							],
							"defaultValue": "8"
						},
						{
							"id": 73,
							"name": "WI_VISIBLE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " The field is visible based on the bit flag",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 123,
									"character": 14
								}
							],
							"defaultValue": "4"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								72,
								74,
								73
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 113,
							"character": 31
						}
					]
				},
				{
					"id": 49,
					"name": "ValidationError",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Validation Error Implementation"
					},
					"children": [
						{
							"id": 54,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Constructor - Create a new validation error instance",
								"tags": [
									{
										"tag": "constructor",
										"text": ""
									}
								]
							},
							"signatures": [
								{
									"id": 58,
									"name": "new ValidationError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Constructor - Create a new validation error instance",
										"tags": [
											{
												"tag": "constructor",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 59,
											"name": "errorCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 60,
											"name": "errorMsg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 61,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"name": "STRING_MAP",
												"id": 8,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ValidationError",
										"id": 49
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 61,
									"character": 5
								}
							]
						},
						{
							"id": 57,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "\n"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 70,
									"character": 81
								}
							],
							"type": {
								"type": "reference",
								"name": "STRING_MAP",
								"id": 8,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.context",
								"id": 39
							}
						},
						{
							"id": 55,
							"name": "errorCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 70,
									"character": 32
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.errorCode",
								"id": 37
							}
						},
						{
							"id": 56,
							"name": "errorMsg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 70,
									"character": 57
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.errorMsg",
								"id": 38
							}
						},
						{
							"id": 62,
							"name": "getErrorCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 63,
									"name": "getErrorCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Error Code",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationError.getErrorCode",
										"id": 41
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 80,
									"character": 23
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.getErrorCode",
								"id": 40
							}
						},
						{
							"id": 64,
							"name": "getErrorMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 65,
									"name": "getErrorMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Error Message",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationError.getErrorMessage",
										"id": 43
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 88,
									"character": 26
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.getErrorMessage",
								"id": 42
							}
						},
						{
							"id": 68,
							"name": "setContext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 69,
									"name": "setContext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "Set the error context"
									},
									"parameters": [
										{
											"id": 70,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "STRING_MAP",
												"id": 8,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationError.setContext",
										"id": 47
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 105,
									"character": 21
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.setContext",
								"id": 46
							}
						},
						{
							"id": 66,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 67,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a string representation of the error",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationError.toString",
										"id": 45
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 96,
									"character": 19
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.toString",
								"id": 44
							}
						},
						{
							"id": 50,
							"name": "newError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 51,
									"name": "newError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Static Constructor Create a new validation error instance",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 52,
											"name": "errorCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 53,
											"name": "errorMsg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationError",
										"id": 36
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 59,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								54
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								57,
								55,
								56
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								62,
								64,
								68,
								66,
								50
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 52,
							"character": 28
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IValidationError",
							"id": 36
						}
					]
				},
				{
					"id": 99,
					"name": "ValidationResult",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Validation Result Implementation"
					},
					"children": [
						{
							"id": 105,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "constructor",
										"text": ""
									}
								]
							},
							"signatures": [
								{
									"id": 106,
									"name": "new ValidationResult",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "constructor",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 107,
											"name": "errors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 36
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IValidationError",
															"id": 36
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ValidationResult",
										"id": 99
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 216,
									"character": 5
								}
							]
						},
						{
							"id": 101,
							"name": "errors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 207,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IValidationError",
									"id": 36
								}
							},
							"defaultValue": " []",
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.errors",
								"id": 77
							}
						},
						{
							"id": 100,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 206,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "EnumValidationState",
										"id": 71
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"defaultValue": " EnumValidationState.WI_VALID | EnumValidationState.WI_VISIBLE",
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.state",
								"id": 76
							}
						},
						{
							"id": 127,
							"name": "getErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 128,
									"name": "getErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IValidationError",
											"id": 36
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.getErrors",
										"id": 98
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 268,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.getErrors",
								"id": 97
							}
						},
						{
							"id": 108,
							"name": "isReadOnly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 109,
									"name": "isReadOnly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.isReadOnly",
										"id": 79
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 236,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.isReadOnly",
								"id": 78
							}
						},
						{
							"id": 112,
							"name": "isValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 113,
									"name": "isValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.isValid",
										"id": 83
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 244,
									"character": 11
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.isValid",
								"id": 82
							}
						},
						{
							"id": 110,
							"name": "isVisible",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 111,
									"name": "isVisible",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.isVisible",
										"id": 81
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 240,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.isVisible",
								"id": 80
							}
						},
						{
							"id": 123,
							"name": "setError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 124,
									"name": "setError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 125,
											"name": "errorCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 126,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 75
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.setError",
										"id": 94
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 263,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setError",
								"id": 93
							}
						},
						{
							"id": 114,
							"name": "setReadOnly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 115,
									"name": "setReadOnly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 116,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 75
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.setReadOnly",
										"id": 85
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 248,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setReadOnly",
								"id": 84
							}
						},
						{
							"id": 120,
							"name": "setValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 121,
									"name": "setValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 122,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 75
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.setValid",
										"id": 91
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 258,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setValid",
								"id": 90
							}
						},
						{
							"id": 117,
							"name": "setVisible",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 118,
									"name": "setVisible",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 119,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 75
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.setVisible",
										"id": 88
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 253,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setVisible",
								"id": 87
							}
						},
						{
							"id": 102,
							"name": "newValidationResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 103,
									"name": "newValidationResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Static constructor",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 104,
											"name": "errors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 36
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IValidationError",
															"id": 36
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 75
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 214,
									"character": 30
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								105
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								101,
								100
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								127,
								108,
								112,
								110,
								123,
								114,
								120,
								117,
								102
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 203,
							"character": 29
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IValidationResult",
							"id": 75
						}
					]
				},
				{
					"id": 36,
					"name": "IValidationError",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Validation Error Interface"
					},
					"children": [
						{
							"id": 39,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Error Context"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 21,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "STRING_MAP",
								"id": 8,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 37,
							"name": "errorCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Error Code"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 11,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38,
							"name": "errorMsg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Error Message"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 16,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40,
							"name": "getErrorCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 41,
									"name": "getErrorCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Error Code",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 27,
									"character": 16
								}
							]
						},
						{
							"id": 42,
							"name": "getErrorMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 43,
									"name": "getErrorMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Error Message",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 33,
									"character": 19
								}
							]
						},
						{
							"id": 46,
							"name": "setContext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 47,
									"name": "setContext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "Set Context Map for the Error i.e Flow -> Activity -> Property"
									},
									"parameters": [
										{
											"id": 48,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "STRING_MAP",
												"id": 8,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 46,
									"character": 14
								}
							]
						},
						{
							"id": 44,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 45,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a string representation of the Error",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 39,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								39,
								37,
								38
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								40,
								42,
								46,
								44
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 6,
							"character": 33
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "ValidationError",
							"id": 49
						}
					]
				},
				{
					"id": 75,
					"name": "IValidationResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Validation Result interface"
					},
					"children": [
						{
							"id": 77,
							"name": "errors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Validation Errors"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 144,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IValidationError",
									"id": 36
								}
							}
						},
						{
							"id": 76,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Validation State"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 139,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "EnumValidationState",
										"id": 71
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 97,
							"name": "getErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 98,
									"name": "getErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Validation Errors",
										"returns": "\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IValidationError",
											"id": 36
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 197,
									"character": 13
								}
							]
						},
						{
							"id": 78,
							"name": "isReadOnly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 79,
									"name": "isReadOnly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the Validation Read Only state",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 150,
									"character": 14
								}
							]
						},
						{
							"id": 82,
							"name": "isValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 83,
									"name": "isValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the Validation validity state",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 162,
									"character": 11
								}
							]
						},
						{
							"id": 80,
							"name": "isVisible",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 81,
									"name": "isVisible",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the Validation Visible state",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 156,
									"character": 13
								}
							]
						},
						{
							"id": 93,
							"name": "setError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 94,
									"name": "setError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds Validation error",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 95,
											"name": "errorCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 96,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 75
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 191,
									"character": 12
								}
							]
						},
						{
							"id": 84,
							"name": "setReadOnly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 85,
									"name": "setReadOnly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Validation Read Only state",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 86,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 75
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 169,
									"character": 15
								}
							]
						},
						{
							"id": 90,
							"name": "setValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 91,
									"name": "setValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Validation valid state",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 92,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 75
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 183,
									"character": 12
								}
							]
						},
						{
							"id": 87,
							"name": "setVisible",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 88,
									"name": "setVisible",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Validation Visible state",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 89,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 75
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 176,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								77,
								76
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								97,
								78,
								82,
								80,
								93,
								84,
								90,
								87
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 134,
							"character": 34
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "ValidationResult",
							"id": 99
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						71
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						49,
						99
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						36,
						75
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/validation.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"common/types\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/pdhar/dev/cloud/wi-studio/client/common/types.ts",
			"children": [
				{
					"id": 2,
					"name": "JSONSCHEMATypeInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "JSON Schema Type Information"
					},
					"children": [
						{
							"id": 4,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 68,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "JSON_FORMAT",
								"id": 26
							}
						},
						{
							"id": 7,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 71,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 6,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 70,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5,
							"name": "pattern",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 69,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 67,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "JSON_TYPE",
								"id": 24
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4,
								7,
								6,
								5,
								3
							]
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 66,
							"character": 35
						}
					]
				},
				{
					"id": 23,
					"name": "ARRAY_STR_ARRAY",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 19,
							"character": 27
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9,
					"name": "ENUM_MAP",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 2,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Map",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "E"
							},
							{
								"type": "typeParameter",
								"name": "P"
							}
						]
					}
				},
				{
					"id": 30,
					"name": "JSON_SCHEMA_TYPE",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 73,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "JSONSCHEMATypeInfo",
						"id": 2
					}
				},
				{
					"id": 8,
					"name": "STRING_MAP",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 1,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "Map",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "typeParameter",
								"name": "P"
							}
						]
					}
				},
				{
					"id": 28,
					"name": "GOLANG_TYPE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "GO Lang Type enumerations",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string | string | string | string | string | string | string | string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 60,
							"character": 24
						},
						{
							"fileName": "common/types.ts",
							"line": 61,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "any"
							},
							{
								"type": "stringLiteral",
								"value": "array"
							},
							{
								"type": "stringLiteral",
								"value": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "integer"
							},
							{
								"type": "stringLiteral",
								"value": "number"
							},
							{
								"type": "stringLiteral",
								"value": "object"
							},
							{
								"type": "stringLiteral",
								"value": "string"
							},
							{
								"type": "stringLiteral",
								"value": "complex_object"
							}
						]
					},
					"defaultValue": " strEnum([\"string\", \"integer\", \"number\", \"boolean\", \"object\", \"array\", \"any\", \"complex_object\"])"
				},
				{
					"id": 26,
					"name": "JSON_FORMAT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "JSON Schema Type Format enumerations\nhttps://developers.google.com/discovery/v1/type-format\nhttp://json-schema.org/latest/json-schema-validation.html#rfc.section.3.2",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string | string | string | string | string | string | string | string | string | string | string | string | string | string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 35,
							"character": 24
						},
						{
							"fileName": "common/types.ts",
							"line": 54,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "object"
							},
							{
								"type": "stringLiteral",
								"value": "int32"
							},
							{
								"type": "stringLiteral",
								"value": "uint32"
							},
							{
								"type": "stringLiteral",
								"value": "double"
							},
							{
								"type": "stringLiteral",
								"value": "float"
							},
							{
								"type": "stringLiteral",
								"value": "byte"
							},
							{
								"type": "stringLiteral",
								"value": "date"
							},
							{
								"type": "stringLiteral",
								"value": "date_time"
							},
							{
								"type": "stringLiteral",
								"value": "int64"
							},
							{
								"type": "stringLiteral",
								"value": "uint64"
							},
							{
								"type": "stringLiteral",
								"value": "email"
							},
							{
								"type": "stringLiteral",
								"value": "hostname"
							},
							{
								"type": "stringLiteral",
								"value": "ipv4"
							},
							{
								"type": "stringLiteral",
								"value": "ipv6"
							},
							{
								"type": "stringLiteral",
								"value": "uri"
							},
							{
								"type": "stringLiteral",
								"value": "uri_reference"
							},
							{
								"type": "stringLiteral",
								"value": "uri_template"
							},
							{
								"type": "stringLiteral",
								"value": "json_pointer"
							}
						]
					},
					"defaultValue": " strEnum([\n    \"int32\",\n    \"uint32\",\n    \"double\",\n    \"float\",\n    \"byte\",\n    \"date\",\n    \"date_time\",\n    \"int64\",\n    \"uint64\",\n    \"object\",\n    \"email\",\n    \"hostname\",\n    \"ipv4\",\n    \"ipv6\",\n    \"uri\",\n    \"uri_reference\",\n    \"uri_template\",\n    \"json_pointer\"])"
				},
				{
					"id": 31,
					"name": "JSON_RT_TYPE_MAPPING",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 75,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"name": "ENUM_MAP",
						"id": 9,
						"typeArguments": [
							{
								"type": "reference",
								"name": "GOLANG_TYPE",
								"id": 28
							},
							{
								"type": "reference",
								"name": "JSON_SCHEMA_TYPE",
								"id": 30
							}
						]
					},
					"defaultValue": " new Map<GOLANG_TYPE, JSON_SCHEMA_TYPE>()"
				},
				{
					"id": 24,
					"name": "JSON_TYPE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "JSON Schema Type enumerations\nhttps://developers.google.com/discovery/v1/type-format\nhttp://json-schema.org/latest/json-schema-validation.html#rfc.section.3.2",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string | string | string | string | string | string | string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 26,
							"character": 22
						},
						{
							"fileName": "common/types.ts",
							"line": 27,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "any"
							},
							{
								"type": "stringLiteral",
								"value": "array"
							},
							{
								"type": "stringLiteral",
								"value": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "integer"
							},
							{
								"type": "stringLiteral",
								"value": "number"
							},
							{
								"type": "stringLiteral",
								"value": "object"
							},
							{
								"type": "stringLiteral",
								"value": "string"
							}
						]
					},
					"defaultValue": " strEnum([\"any\", \"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\"])"
				},
				{
					"id": 32,
					"name": "RTtoJSONTypeMap",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 33,
							"name": "RTtoJSONTypeMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a {{JSON_SCHEMA_TYPE}}",
								"tags": [
									{
										"tag": "constructor",
										"text": "\n"
									}
								]
							},
							"parameters": [
								{
									"id": 34,
									"name": "rtType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "GOLANG_TYPE",
										"id": 28
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "JSON_SCHEMA_TYPE",
								"id": 30
							}
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 91,
							"character": 31
						}
					]
				},
				{
					"id": 18,
					"name": "jsonToMap",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 19,
							"name": "jsonToMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 20,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 21,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 22,
									"name": "jsonStr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Map",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "K"
									},
									{
										"type": "typeParameter",
										"name": "V"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 15,
							"character": 25
						}
					]
				},
				{
					"id": 15,
					"name": "mapToJson",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 16,
							"name": "mapToJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 17,
									"name": "map",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 12,
							"character": 25
						}
					]
				},
				{
					"id": 10,
					"name": "strEnum",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 11,
							"name": "strEnum",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 12,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 13,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Array",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "common/types.ts",
											"line": 4,
											"character": 55
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 4,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						23,
						9,
						30,
						8
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						28,
						26,
						31,
						24
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						32,
						18,
						15,
						10
					]
				}
			],
			"sources": [
				{
					"fileName": "common/types.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				438,
				129,
				35,
				1
			]
		}
	]
}