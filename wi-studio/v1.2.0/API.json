{
	"id": 0,
	"name": "Web Integrator Studio (wi-studio) SDK ",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 719,
			"name": "\"app/contrib/wi-contrib\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/src/client/app/contrib/wi-contrib.ts",
			"children": [
				{
					"id": 737,
					"name": "AbstractContribActionProvider",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Abstract Action Provider"
					},
					"children": [
						{
							"id": 738,
							"name": "handleAction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 739,
									"name": "handleAction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "abstract handle action function"
									},
									"parameters": [
										{
											"id": 740,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 712
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"name": "IContribActionProvider.handleAction",
										"id": 343
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 106,
									"character": 25
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IContribActionProvider.handleAction",
								"id": 342
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								738
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 101,
							"character": 51
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IContribActionProvider",
							"id": 341
						}
					]
				},
				{
					"id": 727,
					"name": "AbstractContribFieldProvider",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Abstract contrib field provider"
					},
					"children": [
						{
							"id": 728,
							"name": "getFieldValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 729,
									"name": "getFieldValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "getFieldValue"
									},
									"parameters": [
										{
											"id": 730,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 712
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"name": "IContribFieldProvider.getFieldValue",
										"id": 339
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 73,
									"character": 26
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IContribFieldProvider.getFieldValue",
								"id": 338
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								728
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 61,
							"character": 50
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IContribFieldProvider",
							"id": 337
						}
					]
				},
				{
					"id": 741,
					"name": "AbstractContribRemoveProvider",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Abstract Remove Provider"
					},
					"children": [
						{
							"id": 742,
							"name": "handleRemove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 743,
									"name": "handleRemove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "abstract handle remove function",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 744,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 712
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IActionResult",
												"id": 369
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 369
													}
												]
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"name": "IContribRemoveProvider.handleRemove",
										"id": 347
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 118,
									"character": 25
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IContribRemoveProvider.handleRemove",
								"id": 346
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								742
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 112,
							"character": 51
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IContribRemoveProvider",
							"id": 345
						}
					]
				},
				{
					"id": 720,
					"name": "AbstractContribValidationProvider",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Abstract Validation Provider"
					},
					"children": [
						{
							"id": 721,
							"name": "validate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 722,
									"name": "validate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "validate"
									},
									"parameters": [
										{
											"id": 723,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 712
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationResult",
												"id": 79
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 79
													}
												]
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"name": "IContribValidationProvider.validate",
										"id": 335
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 46,
									"character": 21
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IContribValidationProvider.validate",
								"id": 334
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								721
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 34,
							"character": 55
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IContribValidationProvider",
							"id": 333
						}
					]
				},
				{
					"id": 884,
					"name": "WiContribMessaging",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "WiContrib Messaging implementation",
						"tags": [
							{
								"tag": "description",
								"text": "There can be different messaging use cases where different type of Subjects can be used\ni.e. {Rx.Subject} or {Rx.BehaviorSubject} which determines what behavior is required for the use case.\n"
							},
							{
								"tag": "example:",
								"text": "\n```\n // Field messaging example\n let messaging = new WiContribMessaging();\n // Emitting data\n messaging.emit<any>(\"Field1\",{ name: \"Robert\" });\n // Handling data\n messaging.on<any>(\"Field1\", (data)=>{ console.log(data.name); } ) // prints \"Robert\"\n // Deleting subject\n messaging.off(\"Field1\");\n // Disposing WiContribMessaging();\n messaging.dispose();\n```\n\n\n```\n import {IMessaging} from \"wi-studio/common/models/messaging\";\n import {WiContribMessaging} from \"wi-studio/app/contrib/wi-contrib\";\n @Injectable()\n @WiContrib({})\n\n export class RestTriggerService extends WiServiceHandlerContribution {\n   private messaging: IMessaging;\n   constructor() {\n      messaging = new WiContribMessaging();\n      super();\n   }\n\n   value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n      if (fieldName === \"field1\") {\n          let field: IFieldDefinition = context.getField(\"field1\");\n          this.messaging.emit<any>(\"field1\",{ name: field.value });\n          return field.value;\n      } else if (fieldName === \"field2\") {\n         return Observable.create(observer => {\n             this.messaging.on<any>(\"field1\", (data)=>{\n                 console.log(data.name);  // prints \"Robert\"\n                 // Calculate the field2 data\n                 observer.next(\"<FIELD2DATA>\");\n                 // The user can delete the subject using this.messaging.off(\"field1\"); if field2 is the only subscriber\n                 // In case of multiple subscribers there is no need to delete as WiContribMessaging uses rxjs/BehaviorSubject\n                 // which only returns the last emitted value to all subscribers\n             });\n         });\n      }\n      return null;\n   }\n\n   ...\n }\n\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 885,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 886,
									"name": "new WiContribMessaging",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "WiContribMessaging",
										"id": 884
									},
									"overwrites": {
										"type": "reference",
										"name": "AbstractMessaging.__constructor",
										"id": 161
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1203,
									"character": 59
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "AbstractMessaging.__constructor",
								"id": 161
							}
						},
						{
							"id": 890,
							"name": "subjects",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 81,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMessaging.subjects",
								"id": 160
							}
						},
						{
							"id": 891,
							"name": "Subjects",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 892,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "AbstractMessaging.Subjects",
										"id": 167
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 91,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMessaging.Subjects",
								"id": 167
							},
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.Subjects",
								"id": 135
							}
						},
						{
							"id": 897,
							"name": "createName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 898,
									"name": "createName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 899,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "AbstractMessaging.createName",
										"id": 173
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 105,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMessaging.createName",
								"id": 173
							}
						},
						{
							"id": 914,
							"name": "dispose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 915,
									"name": "dispose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 916,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "AbstractMessaging.dispose",
										"id": 190
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 132,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMessaging.dispose",
								"id": 190
							},
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.dispose",
								"id": 157
							}
						},
						{
							"id": 900,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 901,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 902,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 903,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 904,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "AbstractMessaging.emit",
										"id": 176
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.emit",
										"id": 144
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 109,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMessaging.emit",
								"id": 176
							},
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.emit",
								"id": 143
							}
						},
						{
							"id": 893,
							"name": "getObservable",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 894,
									"name": "getObservable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 895,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 896,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "AbstractMessaging.getObservable",
										"id": 169
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.getObservable",
										"id": 140
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 95,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMessaging.getObservable",
								"id": 169
							},
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.getObservable",
								"id": 139
							}
						},
						{
							"id": 887,
							"name": "newSubject",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 888,
									"name": "newSubject",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 889,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"type": {
										"type": "reference",
										"name": "Subject",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "AbstractMessaging.newSubject",
										"id": 164
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.newSubject",
										"id": 137
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1208,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "AbstractMessaging.newSubject",
								"id": 164
							},
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.newSubject",
								"id": 136
							}
						},
						{
							"id": 910,
							"name": "off",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 911,
									"name": "off",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 912,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 913,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "AbstractMessaging.off",
										"id": 186
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.off",
										"id": 154
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 124,
									"character": 7
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMessaging.off",
								"id": 186
							},
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.off",
								"id": 153
							}
						},
						{
							"id": 905,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 906,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 907,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 908,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 909,
											"name": "handler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HANDLER_FUNCTION",
												"id": 35,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "AbstractMessaging.on",
										"id": 181
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.on",
										"id": 149
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 117,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "AbstractMessaging.on",
								"id": 181
							},
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.on",
								"id": 148
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								885
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								890
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								891
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								897,
								914,
								900,
								893,
								887,
								910,
								905
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 1203,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "AbstractMessaging",
							"id": 159
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IMessaging",
							"id": 134
						}
					]
				},
				{
					"id": 917,
					"name": "WiContribModelService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "WiContribModelService",
						"tags": [
							{
								"tag": "description",
								"text": "Model Service class for getting and creating model artifacts.\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 919,
							"name": "application",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1221,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"name": "IApplication",
								"id": 432
							}
						},
						{
							"id": 918,
							"name": "contribService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1220,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "ContribService"
							}
						},
						{
							"id": 920,
							"name": "bindContribService",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 921,
									"name": "bindContribService",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Bind ContribService to ModelService"
									},
									"parameters": [
										{
											"id": 922,
											"name": "service",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "ContribService"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1227,
									"character": 22
								}
							]
						},
						{
							"id": 940,
							"name": "createBranchElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 941,
									"name": "createBranchElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a branch element",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IMutableFlowElement",
										"id": 477
									},
									"implementationOf": {
										"type": "reference",
										"name": "IModelService.createBranchElement",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1278,
									"character": 32
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IModelService.createBranchElement",
								"id": 558
							}
						},
						{
							"id": 933,
							"name": "createFlow",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 934,
									"name": "createFlow",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a FlowModel",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 935,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 936,
											"name": "description",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IMutableFlow",
										"id": 444
									},
									"implementationOf": {
										"type": "reference",
										"name": "IModelService.createFlow",
										"id": 552
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1265,
									"character": 23
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IModelService.createFlow",
								"id": 551
							}
						},
						{
							"id": 937,
							"name": "createFlowElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 938,
									"name": "createFlowElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a flow element from element type id = {{Contribution Category}}/{{Contribution Name}}",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 939,
											"name": "element_type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IMutableFlowElement",
										"id": 477
									},
									"implementationOf": {
										"type": "reference",
										"name": "IModelService.createFlowElement",
										"id": 556
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1272,
									"character": 30
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IModelService.createFlowElement",
								"id": 555
							}
						},
						{
							"id": 930,
							"name": "createTriggerElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 931,
									"name": "createTriggerElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a Trigger Element",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 932,
											"name": "element_type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ITriggerElement",
										"id": 406
									},
									"implementationOf": {
										"type": "reference",
										"name": "IModelService.createTriggerElement",
										"id": 549
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1257,
									"character": 33
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IModelService.createTriggerElement",
								"id": 548
							}
						},
						{
							"id": 925,
							"name": "getApplication",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 926,
									"name": "getApplication",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the application models",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IApplication",
										"id": 432
									},
									"implementationOf": {
										"type": "reference",
										"name": "IModelService.getApplication",
										"id": 547
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1248,
									"character": 27
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IModelService.getApplication",
								"id": 546
							}
						},
						{
							"id": 923,
							"name": "getContribService",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 924,
									"name": "getContribService",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get ContribService",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "ContribService"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1237,
									"character": 21
								}
							]
						},
						{
							"id": 927,
							"name": "setApplication",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 928,
									"name": "setApplication",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 929,
											"name": "app",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IApplication",
												"id": 432
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1250,
									"character": 27
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								919,
								918
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								920,
								940,
								933,
								937,
								930,
								925,
								923,
								927
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 1218,
							"character": 43
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IModelService",
							"id": 545
						}
					]
				},
				{
					"id": 831,
					"name": "WiContributionUtils",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " Contribution Utility\n This utility class provides functions to get User defined connections,\n Server Configuration, Context Object unique id's"
					},
					"children": [
						{
							"id": 836,
							"name": "getConnection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 837,
									"name": "getConnection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a connection for a given connection name",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 838,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 839,
											"name": "connection_id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IConnectorContribution",
														"id": 303
													}
												]
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 944,
									"character": 31
								}
							]
						},
						{
							"id": 832,
							"name": "getConnections",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 833,
									"name": "getConnections",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a list of available connections for a given connector type",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 834,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 835,
											"name": "connector_type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IConnectorContribution",
													"id": 303
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 913,
									"character": 32
								}
							]
						},
						{
							"id": 840,
							"name": "getEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 841,
									"name": "getEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets Server Environment Information",
										"returns": "\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 842,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 843,
											"name": "envName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 994,
									"character": 32
								}
							]
						},
						{
							"id": 844,
							"name": "getUniqueId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 845,
									"name": "getUniqueId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the unique id for a given context object",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 846,
											"name": "ctx",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 712
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1007,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								836,
								832,
								840,
								844
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 907,
							"character": 32
						}
					]
				},
				{
					"id": 847,
					"name": "WiProxyCORSUtils",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Proxy Cross Origin Resource Sharing Utility",
						"tags": [
							{
								"tag": "desc",
								"text": "This utility routes client side HTTP requests via a Server proxy to SAAS\nproviders which have CORS restrictions when accessing the APIs.\n"
							}
						]
					},
					"children": [
						{
							"id": 858,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Constructor"
							},
							"signatures": [
								{
									"id": 861,
									"name": "new WiProxyCORSUtils",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Constructor"
									},
									"parameters": [
										{
											"id": 862,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 863,
											"name": "remoteUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 847
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1039,
									"character": 5
								}
							]
						},
						{
							"id": 851,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1021,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 849,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1019,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "STRING_MAP",
								"id": 8,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 859,
							"name": "http",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1046,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "Http"
							}
						},
						{
							"id": 850,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1020,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "HTTP_METHOD",
								"id": 702
							},
							"defaultValue": " HTTP_METHOD.GET"
						},
						{
							"id": 848,
							"name": "queryParams",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1018,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "STRING_MAP",
								"id": 8,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 860,
							"name": "remoteUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "\n"
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1046,
									"character": 51
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 875,
							"name": "addBody",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 876,
									"name": "addBody",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add Http Body"
									},
									"parameters": [
										{
											"id": 877,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 847
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1086,
									"character": 11
								}
							]
						},
						{
							"id": 868,
							"name": "addHeader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 869,
									"name": "addHeader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add Header key value",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 870,
											"name": "header",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 871,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 847
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1068,
									"character": 13
								}
							]
						},
						{
							"id": 872,
							"name": "addMethod",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 873,
									"name": "addMethod",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Add HTTP method {HTTP_METHOD}"
									},
									"parameters": [
										{
											"id": 874,
											"name": "method",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "HTTP_METHOD",
												"id": 702
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 847
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1077,
									"character": 13
								}
							]
						},
						{
							"id": 864,
							"name": "addQueryParams",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 865,
									"name": "addQueryParams",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add Query Parameters",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 866,
											"name": "param",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 867,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 847
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1057,
									"character": 18
								}
							]
						},
						{
							"id": 880,
							"name": "buildUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 881,
									"name": "buildUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Build URL",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 882,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 883,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "STRING_MAP",
												"id": 8,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1128,
									"character": 12
								}
							]
						},
						{
							"id": 856,
							"name": "getHttp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 857,
									"name": "getHttp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the http connection object",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Http"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1037,
									"character": 18
								}
							]
						},
						{
							"id": 878,
							"name": "send",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 879,
									"name": "send",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Send Http Request and return and Observable for Response",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Response"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1095,
									"character": 8
								}
							]
						},
						{
							"id": 852,
							"name": "createRequest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 853,
									"name": "createRequest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create Http Request",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 854,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 855,
											"name": "remoteUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Remote URL is the URL from r"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiProxyCORSUtils",
										"id": 847
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 1029,
									"character": 31
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								858
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								851,
								849,
								859,
								850,
								848,
								860
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								875,
								868,
								872,
								864,
								880,
								856,
								878,
								852
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 1017,
							"character": 29
						}
					]
				},
				{
					"id": 750,
					"name": "WiServiceContribution",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The [[WiServiceContribution]] being the abstract base class is extended  by a contribution provider handler [[WiServiceHandlerContribution]]\nor a [[WiServiceProviderContribution]]. The user can choose either implmentation model to suit their needs.",
						"text": "## [[WiServiceHandlerContribution]]\nThe [[WiServiceHandlerContribution]] represents one way of providing contribution where the contribution will have its own single implementation\nof [[WiServiceHandlerContribution]] and the @[[Injectable]] class decorator will tell the loader that it is loadable by Angular and the single class\nwill provide handler functions for value, validation and action. The @WiContrib({}) deoorator with null metadata indicates it is a one abstract class\n[[WiServiceHandlerContribution]] implmentation.\n\n ### Example [[WiServiceHandlerContribution]]  Contribution Handler Typescript file\n ```\n import {Injectable, Injector} from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import {ValidationResult} from \"../../../../common/models/validation\";\n import {IActivityContribution, ActionResult, IActionResult} from \"../../../../common/models/contrib\";\n import {WiContrib, WiServiceHandlerContribution} from \"../../wi-contrib\";\n import {Http} from \"@angular/http\";\n import {IValidationResult} from \"../../../../common/models/validation\";\n\n @WiContrib({})\n @Injectable()\n export class RestContributionHandler extends WiServiceHandlerContribution {\n     constructor(injector: Injector, http: Http) {\n      super(injector, http);\n  }\n\n  value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n      return Observable.create(observer => {\n          observer.next(\"\");\n     });\n  }\n\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n      return Observable.create(observer => {\n           let vresult: IValidationResult = ValidationResult.newValidationResult();\n           observer.next(vresult);\n       });\n  }\n\n   action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n      return Observable.create(observer => {\n           let aresult: IActionResult = ActionResult.newActionResult();\n           observer.next(aresult);\n       });\n   }\n }\n ```\n ### Example [[WiServiceHandlerContribution]]  Contribution Module Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./rest-contrib\";\n import {WiServiceContribution} from \"../../wi-contrib\";\n @NgModule({\n   imports: [CommonModule,HttpModule],\n   exports: [],\n   declarations: [],\n   entryComponents: [],\n   providers: [{\n     provide: WiServiceContribution,\n     useClass: RestContributionHandler\n   }],\n   bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n## [[WiServiceProviderContribution]]\nThe [[WiServiceProviderContribution]] represents another way of providing contribution\nwhere each field will have its own [[AbstractContribFieldProvider]],[[AbstractContribValidationProvider]],[[AbstractActionProvider]] and the [[WiServiceProviderContribution]]\nimplementation with @[[WiContrib]] decorator will tell the loader that the module is of type [[WiServiceProviderContribution]]. Each field value,validation\nand action provider is also a Angular injectable Service and must be decorated by @Injectable(). The contribution service is also a Angular injectable service\nas decorated with @Injectable() and also a Contribution Service with @WiContrib(metadata) deoorator.\n\n ### Example [[WiServiceProviderContribution]]  Contribution Service Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./timer-contrib\";\n import {WiServiceContribution} from \"wi-contrib\";\n @NgModule({\n imports: [CommonModule,HttpModule],\n exports: [],\n declarations: [],\n entryComponents: [],\n providers: [\n  {\n    provide: WiServiceContribution,\n    useClass: TimerContribService\n  },\n  {\n    provide: Field1Provider,\n    useClass: Field1Provider\n  },\n  {\n    provide: Field1ValidationProvider,\n    useClass: Field1ValidationProvider\n  }],\n bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n ### Example [[WiServiceProviderContribution]]  Contribution Module Typescript file\n ```\n import { ValidationResult } from \"wi-studio/common/models/validation\";\n import { IActivityContribution, IContributionContext } from \"wi-studio/common/models/contrib\";\n import { Injectable, Inject, Injector } from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import { Http } from \"@angular/http\";\n import { AbstractContribFieldProvider, AbstractContribValidationProvider, WiContrib, WiServiceContribution } from \"wi-studio/app/wi-contrib\";\n import {IValidationResult} from \"wi-studio/common/models/validation\";\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n   getFieldValue(context: IActivityContribution): Observable<string[]> {\n       return Observable.create(observer => {\n           observer.next(\"\");\n      });\n   }}\n @Injectable()\n export class Field1ValidationProvider extends AbstractContribValidationProvider {\n    validate(context: IContributionContext): Observable<IValidationResult> {\n        return Observable.create(observer => {\n            // tslint:disable-next-line:no-bitwise\n            let vresult: IValidationResult = ValidationResult.newValidationResult();\n            observer.next(vresult);\n        });\n    }}\n\n @WiContrib({\n    validationProviders: [{\n           field: \"field1\",\n            useClass: Field1ValidationProvider\n        }],\n    fieldProviders: [{\n            field: \"field1\",\n            useClass: Field1Provider\n        }]\n })\n @Injectable()\n export class TimerContribService extends WiServiceProviderContribution {}\n```\n"
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 751,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "constructor"
							},
							"signatures": [
								{
									"id": 755,
									"name": "new WiServiceContribution",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "constructor"
									},
									"parameters": [
										{
											"id": 756,
											"name": "_injector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Injector"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Injector"
											}
										},
										{
											"id": 757,
											"name": "_http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Http"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 758,
											"name": "_modelService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "WiContribModelService"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "IModelService",
												"id": 545
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiServiceContribution",
										"id": 750
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 445,
									"character": 81
								}
							]
						},
						{
							"id": 753,
							"name": "_http",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true,
								"isOptional": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "Http"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 452,
									"character": 91
								}
							],
							"type": {
								"type": "reference",
								"name": "Http"
							}
						},
						{
							"id": 752,
							"name": "_injector",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true,
								"isOptional": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "Injector"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 452,
									"character": 51
								}
							],
							"type": {
								"type": "reference",
								"name": "Injector"
							}
						},
						{
							"id": 754,
							"name": "_modelService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "\n"
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "WiContribModelService"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 452,
									"character": 152
								}
							],
							"type": {
								"type": "reference",
								"name": "IModelService",
								"id": 545
							}
						},
						{
							"id": 761,
							"name": "getAnnotations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 762,
									"name": "getAnnotations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "get annotation from metadata"
									},
									"type": {
										"type": "reference",
										"name": "WiContribMetaData",
										"id": 745
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 472,
									"character": 28
								}
							]
						},
						{
							"id": 765,
							"name": "getHttp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 766,
									"name": "getHttp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the [[Http]] object",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Http"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 491,
									"character": 21
								}
							]
						},
						{
							"id": 763,
							"name": "getInjector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 764,
									"name": "getInjector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the injector",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Injector"
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 482,
									"character": 25
								}
							]
						},
						{
							"id": 767,
							"name": "getModelService",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 768,
									"name": "getModelService",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the [[WiContribModelService]] object",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IModelService",
										"id": 545
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 499,
									"character": 29
								}
							]
						},
						{
							"id": 759,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 760,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 717
									},
									"implementationOf": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 581
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 459,
									"character": 18
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 580
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								751
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								753,
								752,
								754
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								761,
								765,
								763,
								767,
								759
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 445,
							"character": 43
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "WiServiceProviderContribution",
							"id": 769
						},
						{
							"type": "reference",
							"name": "WiServiceHandlerContribution",
							"id": 796
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 579
						}
					]
				},
				{
					"id": 796,
					"name": "WiServiceHandlerContribution",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Abstract Service Handler Contribution\n## [[WiServiceHandlerContribution]]\nThe [[WiServiceHandlerContribution]] represents one way of providing contribution where the contribution will have its own single implementation\nof [[WiServiceHandlerContribution]] and the @[[Injectable]] class decorator will tell the loader that it is loadable by Angular and the single class\nwill provide handler functions for value, validation and action. The @WiContrib({}) deoorator with null metadata indicates it is a one abstract class\n[[WiServiceHandlerContribution]] implmentation.\n\n ### Example [[WiServiceHandlerContribution]]  Contribution Handler Typescript file\n ```\n import {Injectable, Injector} from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import {ValidationResult} from \"../../../../common/models/validation\";\n import {IActivityContribution, ActionResult, IActionResult} from \"../../../../common/models/contrib\";\n import {WiContrib, WiServiceHandlerContribution} from \"../../wi-contrib\";\n import {Http} from \"@angular/http\";\n import {IValidationResult} from \"../../../../common/models/validation\";\n\n @WiContrib({})\n @Injectable()\n export class RestContributionHandler extends WiServiceHandlerContribution {\n     constructor(injector: Injector, http: Http) {\n      super(injector, http);\n  }\n\n  value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n      return Observable.create(observer => {\n          observer.next(\"\");\n     });\n  }\n\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n      return Observable.create(observer => {\n           let vresult: IValidationResult = ValidationResult.newValidationResult();\n           observer.next(vresult);\n       });\n  }\n\n   action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n      return Observable.create(observer => {\n           let aresult: IActionResult = ActionResult.newActionResult();\n           observer.next(aresult);\n       });\n   }\n }\n ```\n ### Example [[WiServiceHandlerContribution]]  Contribution Module Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./rest-contrib\";\n import {WiServiceContribution} from \"../../wi-contrib\";\n @NgModule({\n   imports: [CommonModule,HttpModule],\n   exports: [],\n   declarations: [],\n   entryComponents: [],\n   providers: [{\n     provide: WiServiceContribution,\n     useClass: RestContributionHandler\n   }],\n   bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 797,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "constructor",
										"text": "\n*  ## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http, modelService: IModelService) {\n    super(injector, http);\n }\n...\n}\n```"
									}
								]
							},
							"signatures": [
								{
									"id": 798,
									"name": "new WiServiceHandlerContribution",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "constructor",
												"text": "\n*  ## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http, modelService: IModelService) {\n    super(injector, http);\n }\n...\n}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 799,
											"name": "injector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Injector"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Injector"
											}
										},
										{
											"id": 800,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Http"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 801,
											"name": "modelService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "WiContribModelService"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "IModelService",
												"id": 545
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiServiceHandlerContribution",
										"id": 796
									},
									"overwrites": {
										"type": "reference",
										"name": "WiServiceContribution.__constructor",
										"id": 751
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 735,
									"character": 123
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "WiServiceContribution.__constructor",
								"id": 751
							}
						},
						{
							"id": 812,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional action handler for form buttons\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```\n"
									},
									{
										"tag": "param",
										"text": "",
										"param": "actionId"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 845,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 813,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 814,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 815,
													"name": "actionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 816,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 712
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 369
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 369
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "app/contrib/wi-contrib.ts",
											"line": 845,
											"character": 19
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.action",
								"id": 609
							}
						},
						{
							"id": 817,
							"name": "remove",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional remove handler for handling cleanup actions on external domains, invoked when the contribution\ninstance is deleted. The key information for delete comes from the context itself."
									},
									{
										"tag": "example",
										"text": "\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class MyConnectionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n remove = (context: IConnectorContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 875,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 818,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 819,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 820,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 712
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 369
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 369
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "app/contrib/wi-contrib.ts",
											"line": 875,
											"character": 19
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.remove",
								"id": 614
							}
						},
						{
							"id": 807,
							"name": "validate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Validate a specified field name parameter\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n```\n"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 815,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 808,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 809,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 810,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 811,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 712
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IValidationResult",
																"id": 79
															}
														]
													},
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 79
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "app/contrib/wi-contrib.ts",
											"line": 815,
											"character": 20
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.validate",
								"id": 604
							}
						},
						{
							"id": 802,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
								"text": "Here is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```",
								"tags": [
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 786,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 803,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 804,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 805,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 806,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 712
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "app/contrib/wi-contrib.ts",
											"line": 786,
											"character": 17
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.value",
								"id": 599
							}
						},
						{
							"id": 823,
							"name": "getAnnotations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 824,
									"name": "getAnnotations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "get annotation from metadata"
									},
									"type": {
										"type": "reference",
										"name": "WiContribMetaData",
										"id": 745
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getAnnotations",
										"id": 761
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 472,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getAnnotations",
								"id": 761
							}
						},
						{
							"id": 827,
							"name": "getHttp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 828,
									"name": "getHttp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the [[Http]] object",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Http"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getHttp",
										"id": 765
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 491,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getHttp",
								"id": 765
							}
						},
						{
							"id": 825,
							"name": "getInjector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 826,
									"name": "getInjector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the injector",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Injector"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getInjector",
										"id": 763
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 482,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getInjector",
								"id": 763
							}
						},
						{
							"id": 829,
							"name": "getModelService",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 830,
									"name": "getModelService",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the [[WiContribModelService]] object",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IModelService",
										"id": 545
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getModelService",
										"id": 767
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 499,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getModelService",
								"id": 767
							}
						},
						{
							"id": 821,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 822,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 717
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getType",
										"id": 759
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceHandlerContribution.getType",
										"id": 598
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 459,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getType",
								"id": 759
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceHandlerContribution.getType",
								"id": 597
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								797
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								812,
								817,
								807,
								802
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								823,
								827,
								825,
								829,
								821
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 735,
							"character": 50
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "WiServiceContribution",
							"id": 750
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 579
						},
						{
							"type": "reference",
							"name": "IWiServiceHandlerContribution",
							"id": 596
						}
					]
				},
				{
					"id": 769,
					"name": "WiServiceProviderContribution",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "Abstract Service Contribution\n## [[WiServiceProviderContribution]]\nThe [[WiServiceProviderContribution]] represents another way of providing contribution\nwhere each field will have its own [[AbstractContribFieldProvider]],[[AbstractContribValidationProvider]],[[AbstractActionProvider]] and the [[WiServiceProviderContribution]]\nimplementation with @[[WiContrib]] decorator will tell the loader that the module is of type [[WiServiceProviderContribution]]. Each field value,validation\nand action provider is also a Angular injectable Service and must be decorated by @Injectable(). The contribution service is also a Angular injectable service\nas decorated with @Injectable() and also a Contribution Service with @WiContrib(metadata) deoorator.\n\n ### Example [[WiServiceProviderContribution]]  Contribution Service Typescript file\n\n ```\n import { HttpModule } from \"@angular/http\";\n import { NgModule } from \"@angular/core\";\n import { CommonModule } from \"@angular/common\";\n import { RestContributionHandler } from \"./timer-contrib\";\n import {WiServiceContribution} from \"wi-contrib\";\n @NgModule({\n imports: [CommonModule,HttpModule],\n exports: [],\n declarations: [],\n entryComponents: [],\n providers: [\n  {\n    provide: WiServiceContribution,\n    useClass: TimerContribService\n  },\n  {\n    provide: Field1Provider,\n    useClass: Field1Provider\n  },\n  {\n    provide: Field1ValidationProvider,\n    useClass: Field1ValidationProvider\n  }],\n bootstrap: []\n })\n export class RestContribModule {}\n ```\n\n ### Example [[WiServiceProviderContribution]]  Contribution Module Typescript file\n ```\n import { ValidationResult } from \"wi-studio/common/models/validation\";\n import { IActivityContribution, IContributionContext } from \"wi-studio/common/models/contrib\";\n import { Injectable, Inject, Injector } from \"@angular/core\";\n import {Observable} from \"../../../../common/rxjs-extensions\";\n import { Http } from \"@angular/http\";\n import { AbstractContribFieldProvider, AbstractContribValidationProvider, WiContrib, WiServiceContribution } from \"wi-studio/app/wi-contrib\";\n import {IValidationResult} from \"wi-studio/common/models/validation\";\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n   getFieldValue(context: IActivityContribution): Observable<string[]> {\n       return Observable.create(observer => {\n           observer.next(\"\");\n      });\n   }}\n @Injectable()\n export class Field1ValidationProvider extends AbstractContribValidationProvider {\n    validate(context: IContributionContext): Observable<IValidationResult> {\n        return Observable.create(observer => {\n            // tslint:disable-next-line:no-bitwise\n            let vresult: IValidationResult = ValidationResult.newValidationResult();\n            observer.next(vresult);\n        });\n    }}\n\n @WiContrib({\n    validationProviders: [{\n           field: \"field1\",\n            useClass: Field1ValidationProvider\n        }],\n    fieldProviders: [{\n            field: \"field1\",\n            useClass: Field1Provider\n        }]\n })\n @Injectable()\n export class TimerContribService extends WiServiceProviderContribution {}\n```\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 770,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "constructor"
							},
							"signatures": [
								{
									"id": 771,
									"name": "new WiServiceProviderContribution",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "constructor"
									},
									"parameters": [
										{
											"id": 772,
											"name": "injector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Injector"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Injector"
											}
										},
										{
											"id": 773,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "Http"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Http"
											}
										},
										{
											"id": 774,
											"name": "modelService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "WiContribModelService"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "IModelService",
												"id": 545
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "WiServiceProviderContribution",
										"id": 769
									},
									"overwrites": {
										"type": "reference",
										"name": "WiServiceContribution.__constructor",
										"id": 751
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 588,
									"character": 125
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "WiServiceContribution.__constructor",
								"id": 751
							}
						},
						{
							"id": 781,
							"name": "getActionHandler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 782,
									"name": "getActionHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "get action provider"
									},
									"parameters": [
										{
											"id": 783,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribActionProvider",
										"id": 341
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getActionHandler",
										"id": 590
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 638,
									"character": 20
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getActionHandler",
								"id": 589
							}
						},
						{
							"id": 788,
							"name": "getAnnotations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 789,
									"name": "getAnnotations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "get annotation from metadata"
									},
									"type": {
										"type": "reference",
										"name": "WiContribMetaData",
										"id": 745
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getAnnotations",
										"id": 761
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 472,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getAnnotations",
								"id": 761
							}
						},
						{
							"id": 775,
							"name": "getFieldProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 776,
									"name": "getFieldProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "get field provider"
									},
									"parameters": [
										{
											"id": 777,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribFieldProvider",
										"id": 337
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getFieldProvider",
										"id": 584
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 604,
									"character": 20
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getFieldProvider",
								"id": 583
							}
						},
						{
							"id": 792,
							"name": "getHttp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 793,
									"name": "getHttp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the [[Http]] object",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Http"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getHttp",
										"id": 765
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 491,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getHttp",
								"id": 765
							}
						},
						{
							"id": 790,
							"name": "getInjector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 791,
									"name": "getInjector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isProtected": true
									},
									"comment": {
										"shortText": "Returns the injector",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Injector"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getInjector",
										"id": 763
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 482,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getInjector",
								"id": 763
							}
						},
						{
							"id": 794,
							"name": "getModelService",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 795,
									"name": "getModelService",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the [[WiContribModelService]] object",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IModelService",
										"id": 545
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getModelService",
										"id": 767
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 499,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getModelService",
								"id": 767
							}
						},
						{
							"id": 784,
							"name": "getRemoveProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 785,
									"name": "getRemoveProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "get the remove provider",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IContribRemoveProvider",
										"id": 345
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getRemoveProvider",
										"id": 593
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 654,
									"character": 21
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getRemoveProvider",
								"id": 592
							}
						},
						{
							"id": 786,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 787,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 717
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "WiServiceContribution.getType",
										"id": 759
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getType",
										"id": 595
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 459,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "WiServiceContribution.getType",
								"id": 759
							},
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getType",
								"id": 594
							}
						},
						{
							"id": 778,
							"name": "getValidationProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 779,
									"name": "getValidationProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "get validation provider"
									},
									"parameters": [
										{
											"id": 780,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribValidationProvider",
										"id": 333
									},
									"implementationOf": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getValidationProvider",
										"id": 587
									}
								}
							],
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 621,
									"character": 25
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getValidationProvider",
								"id": 586
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								770
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								781,
								788,
								775,
								792,
								790,
								794,
								784,
								786,
								778
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 588,
							"character": 51
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "WiServiceContribution",
							"id": 750
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 579
						},
						{
							"type": "reference",
							"name": "IWiServiceProviderContribution",
							"id": 582
						}
					]
				},
				{
					"id": 734,
					"name": "IContribActionProviderMap",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action Provider Map"
					},
					"children": [
						{
							"id": 735,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Field Name"
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 91,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 736,
							"name": "useClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Action Provider Class"
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 95,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IContribActionProvider",
										"id": 341
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								735,
								736
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 87,
							"character": 42
						}
					]
				},
				{
					"id": 731,
					"name": "IContribFieldProviderMap",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "field provider map"
					},
					"children": [
						{
							"id": 732,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 80,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 733,
							"name": "useClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 81,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IContribFieldProvider",
										"id": 337
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								732,
								733
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 79,
							"character": 41
						}
					]
				},
				{
					"id": 724,
					"name": "IContribValidationProviderMap",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "interface Validation provider map"
					},
					"children": [
						{
							"id": 725,
							"name": "field",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 53,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 726,
							"name": "useClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 54,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IContribValidationProvider",
										"id": 333
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								725,
								726
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 52,
							"character": 46
						}
					]
				},
				{
					"id": 745,
					"name": "WiContribMetaData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Type of the WiContrib metadata."
					},
					"children": [
						{
							"id": 748,
							"name": "actionProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Defines the set of action providers that are available in the contribution\nof this module.\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ActionProvider extends AbstractActionProvider {\n  handleAction(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceProviderContribution {}\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 249,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IContribActionProviderMap",
									"id": 734
								}
							}
						},
						{
							"id": 747,
							"name": "fieldProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Defines the set of validation providers that are available in the contribution\nof this module.\n\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1Provider extends AbstractContribFieldProvider {\n  getFieldValue(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 206,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IContribFieldProviderMap",
									"id": 731
								}
							}
						},
						{
							"id": 749,
							"name": "removeProvider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional remove handler for handling cleanup actions on external domains, invoked when the contribution\ninstance is deleted. The key information for delete comes from the context itself."
									},
									{
										"tag": "example",
										"text": "\n## Simple Example\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class MyConnectionRemoveProvider extends AbstractActionProvider {\n  handleRemove(context: IConnectorContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ],\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ],\n  removeProvider : MyConnectionRemoveProvider\n})\n```\n\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 291,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IContribRemoveProvider",
										"id": 345
									}
								]
							}
						},
						{
							"id": 746,
							"name": "validationProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the set of validation providers that are available in the contribution\nof this module.",
								"text": "## Simple Example\n\nHere is an example of a validation provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ValidationProvider extends AbstractContribValidationProvider {\n     validate(context: IContributionContext): Observable<IValidationResult> {\n         return Observable.create(observer => {\n              let vresult: IValidationResult = ValidationResult.newValidationResult();\n                     observer.next(vresult);\n          });\n     }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```\n"
							},
							"sources": [
								{
									"fileName": "app/contrib/wi-contrib.ts",
									"line": 169,
									"character": 23
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IContribValidationProviderMap",
									"id": 724
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								748,
								747,
								749,
								746
							]
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 131,
							"character": 34
						}
					]
				},
				{
					"id": 942,
					"name": "WI_CONTRIB_SYMBOL",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"tags": [
							{
								"tag": "type",
								"text": "{symbol}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 125,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "symbol"
					},
					"defaultValue": " Symbol(\"@WiContrib\")"
				},
				{
					"id": 943,
					"name": "WiContrib",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 944,
							"name": "WiContrib",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "This decorator and annotation indicates the typescript class is a Web Integrator contribution\n## Example\n```\n\n  @WiContrib()\n  class RestService {}\n```\n\n"
									},
									{
										"tag": "constructor",
										"text": "\n"
									}
								]
							},
							"parameters": [
								{
									"id": 945,
									"name": "metadata",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "WiContribMetaData",
										"id": 745
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 946,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 947,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 948,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Function"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "app/contrib/wi-contrib.ts",
											"line": 894,
											"character": 55
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "app/contrib/wi-contrib.ts",
							"line": 894,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						737,
						727,
						741,
						720,
						884,
						917,
						831,
						847,
						750,
						796,
						769
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						734,
						731,
						724,
						745
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						942
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						943
					]
				}
			],
			"sources": [
				{
					"fileName": "app/contrib/wi-contrib.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 194,
			"name": "\"common/models/contrib\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/src/client/common/models/contrib.ts",
			"children": [
				{
					"id": 212,
					"name": "ELEMENT_TYPE",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 214,
							"name": "ELEMENT_ACTIVITY",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 90,
									"character": 20
								}
							]
						},
						{
							"id": 215,
							"name": "ELEMENT_BRANCH",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 91,
									"character": 18
								}
							]
						},
						{
							"id": 213,
							"name": "ELEMENT_TRIGGER",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 89,
									"character": 19
								}
							]
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								214,
								215,
								213
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 88,
							"character": 24
						}
					]
				},
				{
					"id": 209,
					"name": "MODE",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 211,
							"name": "PALETTE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 85,
									"character": 11
								}
							]
						},
						{
							"id": 210,
							"name": "WIZARD",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 84,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								211,
								210
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 83,
							"character": 16
						}
					]
				},
				{
					"id": 560,
					"name": "ActionResult",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action Result implementation"
					},
					"children": [
						{
							"id": 566,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {},
							"signatures": [
								{
									"id": 567,
									"name": "new ActionResult",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 568,
											"name": "result",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 40
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ActionResult",
										"id": 560
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1202,
									"character": 5
								}
							]
						},
						{
							"id": 562,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1193,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IValidationError",
										"id": 40
									},
									{
										"type": "reference",
										"name": "IAuthenticationResult",
										"id": 382
									},
									{
										"type": "reference",
										"name": "ICreateFlowActionResult",
										"id": 526
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.result",
								"id": 371
							}
						},
						{
							"id": 561,
							"name": "success",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1192,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.success",
								"id": 370
							}
						},
						{
							"id": 577,
							"name": "getResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 578,
									"name": "getResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "get Result Data",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IActionResult.getResult",
										"id": 381
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1246,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.getResult",
								"id": 380
							}
						},
						{
							"id": 569,
							"name": "isSuccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 570,
									"name": "isSuccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns if the action is successful or not",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IActionResult.isSuccess",
										"id": 373
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1218,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.isSuccess",
								"id": 372
							}
						},
						{
							"id": 574,
							"name": "setResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 575,
									"name": "setResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set result data",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 576,
											"name": "result",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 40
													},
													{
														"type": "reference",
														"name": "IAuthenticationResult",
														"id": 382
													},
													{
														"type": "reference",
														"name": "ICreateFlowActionResult",
														"id": 526
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 369
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1237,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.setResult",
								"id": 377
							}
						},
						{
							"id": 571,
							"name": "setSuccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 572,
									"name": "setSuccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "set success or failure boolean state",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 573,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 369
									},
									"implementationOf": {
										"type": "reference",
										"name": "IActionResult.setSuccess",
										"id": 375
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1227,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IActionResult.setSuccess",
								"id": 374
							}
						},
						{
							"id": 563,
							"name": "newActionResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 564,
									"name": "newActionResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "static constructor",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 565,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 40
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 369
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1200,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								566
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								562,
								561
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								577,
								569,
								574,
								571,
								563
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1191,
							"character": 25
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IActionResult",
							"id": 369
						}
					]
				},
				{
					"id": 386,
					"name": "AuthenticationResult",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "AuthenticationResult implementation"
					},
					"children": [
						{
							"id": 393,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "constructor"
							},
							"signatures": [
								{
									"id": 394,
									"name": "new AuthenticationResult",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "constructor"
									},
									"parameters": [
										{
											"id": 395,
											"name": "atype",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"name": "AUTHENTICATION_TYPE",
												"id": 699
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "AuthenticationResult",
										"id": 386
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 890,
									"character": 5
								}
							]
						},
						{
							"id": 389,
							"name": "authData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 881,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "IOAuthData",
								"id": 653
							},
							"implementationOf": {
								"type": "reference",
								"name": "IAuthenticationResult.authData",
								"id": 385
							}
						},
						{
							"id": 387,
							"name": "authType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 879,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "AUTHENTICATION_TYPE",
								"id": 699
							},
							"implementationOf": {
								"type": "reference",
								"name": "IAuthenticationResult.authType",
								"id": 383
							}
						},
						{
							"id": 388,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 880,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IConnectorContribution",
								"id": 303
							},
							"implementationOf": {
								"type": "reference",
								"name": "IAuthenticationResult.context",
								"id": 384
							}
						},
						{
							"id": 401,
							"name": "getAuthData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 402,
									"name": "getAuthData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the Authentication Data Object {{IOAuthData}} which holds the information for {AUTHENTICATION_TYPE.BASIC}\nOR\nReturns the Authentication Data Object {{IOAuthData}} which holds\nthe information for {AUTHENTICATION_TYPE.OAUTH1} | {AUTHENTICATION_TYPE.OAUTH2} |{AUTHENTICATION_TYPE.OAUTH2_TWOLEG}\ntype authentication mechanisms. The contribution developer needs to provide this information based on which\nthe contribution mechanism will introspect the callback return state information. It is not assumed that every authentication\ntype will not have this information requirement as it may not involve a callback. In case of OAUTH type authentication\nit is also not assumed that the state information is available by introspecting a fixed parameter name e.g. \"state\" so\nthe contribution developer need to provide this based on the SAAS authentication provider specifications.",
										"returns": "| {IBasicAuthData}\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IOAuthData",
												"id": 653
											},
											{
												"type": "reference",
												"name": "IBasicAuthData",
												"id": 651
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 932,
									"character": 15
								}
							]
						},
						{
							"id": 396,
							"name": "getContext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 397,
									"name": "getContext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "desc",
												"text": "Returns the Connector contribution JSON object which has the\nwhole connection context object passed to the Handler or Provider\nand gives the connector contribution mechanism to identify the connection\ninstance being created."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "IConnectorContribution",
										"id": 303
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 907,
									"character": 14
								}
							]
						},
						{
							"id": 403,
							"name": "setAuthData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 404,
									"name": "setAuthData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Authentication Data Object {{IOAuthData}} which holds the information for {AUTHENTICATION_TYPE.BASIC}\nOR\nSets the Authentication Data Object {{IOAuthData}} which holds\nthe information for {AUTHENTICATION_TYPE.OAUTH1} | {AUTHENTICATION_TYPE.OAUTH2} |{AUTHENTICATION_TYPE.OAUTH2_TWOLEG}\ntype authentication mechanisms. The contribution developer needs to provide this information based on which\nthe contribution mechanism will introspect the callback return state information. It is not assumed that every authentication\ntype will not have this information requirement as it may not involve a callback. In case of OAUTH type authentication\nit is also not assumed that the state information is available by introspecting a fixed parameter name e.g. \"state\" so\nthe contribution developer need to provide this based on the SAAS authentication provider specifications."
									},
									"parameters": [
										{
											"id": 405,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IOAuthData",
												"id": 653
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 948,
									"character": 15
								}
							]
						},
						{
							"id": 398,
							"name": "setContext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 399,
									"name": "setContext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "desc",
												"text": "Sets the connection context object passed to the Handler or Provider\nand gives the connector contribution mechanism to identify the connection"
											}
										]
									},
									"parameters": [
										{
											"id": 400,
											"name": "ctx",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IConnectorContribution",
												"id": 303
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 916,
									"character": 14
								}
							]
						},
						{
							"id": 390,
							"name": "newAuthenticationResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 391,
									"name": "newAuthenticationResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "static constructor",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 392,
											"name": "atype",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "AUTHENTICATION_TYPE",
												"id": 699
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IAuthenticationResult",
										"id": 382
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 888,
									"character": 34
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								393
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								389,
								387,
								388
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								401,
								396,
								403,
								398,
								390
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 878,
							"character": 33
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IAuthenticationResult",
							"id": 382
						}
					]
				},
				{
					"id": 195,
					"name": "ContributionTypeConverter",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Contribution type converter from Flogo types"
					},
					"children": [
						{
							"id": 196,
							"name": "fromString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 197,
									"name": "fromString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 198,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CONTRIBUTION_TYPE",
										"id": 671
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 19,
									"character": 28
								}
							]
						},
						{
							"id": 199,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 200,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 201,
											"name": "ctype",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CONTRIBUTION_TYPE",
												"id": 671
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 31,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								196,
								199
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 18,
							"character": 38
						}
					]
				},
				{
					"id": 533,
					"name": "CreateFlowActionResult",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "CreateFlowActionResult implementation"
					},
					"children": [
						{
							"id": 537,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"comment": {
								"shortText": "constructor"
							},
							"signatures": [
								{
									"id": 538,
									"name": "new CreateFlowActionResult",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "constructor"
									},
									"type": {
										"type": "reference",
										"name": "CreateFlowActionResult",
										"id": 533
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1116,
									"character": 5
								}
							]
						},
						{
							"id": 534,
							"name": "triggerElementMaps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " map trigger element to flow model"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1108,
									"character": 22
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ITriggerFlowModelMapping",
									"id": 427
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 539,
							"name": "addTriggerFlowMapping",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 540,
									"name": "addTriggerFlowMapping",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a named flow to the trigger result"
									},
									"parameters": [
										{
											"id": 541,
											"name": "triggerElement",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "ITriggerElement",
												"id": 406
											}
										},
										{
											"id": 542,
											"name": "flowModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IFlow",
												"id": 437
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ICreateFlowActionResult",
										"id": 526
									},
									"implementationOf": {
										"type": "reference",
										"name": "ICreateFlowActionResult.addTriggerFlowMapping",
										"id": 530
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1131,
									"character": 32
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ICreateFlowActionResult.addTriggerFlowMapping",
								"id": 529
							}
						},
						{
							"id": 543,
							"name": "getTriggerFlowMaps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 544,
									"name": "getTriggerFlowMaps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get Flows from the trigger result",
										"returns": "\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "ITriggerFlowModelMapping",
											"id": 427
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "ICreateFlowActionResult.getTriggerFlowMaps",
										"id": 528
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1140,
									"character": 29
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ICreateFlowActionResult.getTriggerFlowMaps",
								"id": 527
							}
						},
						{
							"id": 535,
							"name": "newActionResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 536,
									"name": "newActionResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "static constructor",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "ICreateFlowActionResult",
										"id": 526
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1114,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								537
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								534
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								539,
								543,
								535
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1104,
							"character": 35
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "ICreateFlowActionResult",
							"id": 526
						}
					]
				},
				{
					"id": 656,
					"name": "OAuthData",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "IOAuthData implementation",
						"tags": [
							{
								"tag": "desc",
								"text": "Helper class to create {{IOAuthData}} objects\n"
							}
						]
					},
					"children": [
						{
							"id": 663,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "constructor"
							},
							"signatures": [
								{
									"id": 664,
									"name": "new OAuthData",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "constructor"
									},
									"parameters": [
										{
											"id": 665,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 666,
											"name": "stateQueryParam",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OAuthData",
										"id": 656
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1507,
									"character": 5
								}
							]
						},
						{
							"id": 657,
							"name": "authLoginUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1496,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IOAuthData.authLoginUrl",
								"id": 654
							}
						},
						{
							"id": 658,
							"name": "authStateQueryParam",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1497,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IOAuthData.authStateQueryParam",
								"id": 655
							}
						},
						{
							"id": 667,
							"name": "getAuthLoginURL",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 668,
									"name": "getAuthLoginURL",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "desc",
												"text": "Returns the Authentication Login URL provided by the Connector without any state information parameters"
											},
											{
												"tag": "example",
												"text": "https://login.salesforce.com/services/oauth2/authorize?response_type=code&client_id=CLIENTID&redirect_uri=REDIRECTURL&display=popup&prompt=login consent\n where REDIRECT_URL=https://localdev-integration.cloud.tibco.com/wistudio/connectiondetails\n NOTE: state information parameter for Salesforce \"state\" is not part of the URL"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1526,
									"character": 19
								}
							]
						},
						{
							"id": 669,
							"name": "getAuthStateQueryParam",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 670,
									"name": "getAuthStateQueryParam",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the property which tells the Contribution Model what is the state information parameter name being used by the OAUTH provider\nto return state of the Application before making the authentication request to the SAAS authentication provider.",
										"returns": "\n",
										"tags": [
											{
												"tag": "example",
												"text": "For Saleforce the state information parameter is \"state\""
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1536,
									"character": 26
								}
							]
						},
						{
							"id": 659,
							"name": "newOAuthData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 660,
									"name": "newOAuthData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "static constructor",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 661,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 662,
											"name": "stateQueryParam",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OAuthData",
										"id": 656
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1505,
									"character": 23
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								663
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								657,
								658
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								667,
								669,
								659
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1495,
							"character": 22
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IOAuthData",
							"id": 653
						}
					]
				},
				{
					"id": 300,
					"name": "IActionDefinition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action Definition interface"
					},
					"children": [
						{
							"id": 302,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Button display settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 461,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IFieldDisplay",
								"id": 216
							}
						},
						{
							"id": 301,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Unique name to identify the button. If display name is not provided name will be used."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 457,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								302,
								301
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 453,
							"character": 34
						}
					]
				},
				{
					"id": 369,
					"name": "IActionResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The result of any button action is return values."
					},
					"children": [
						{
							"id": 371,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "if the action is a failure then any associated errors are returned.\nOR Authentication Results OR any"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 817,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IValidationError",
										"id": 40
									},
									{
										"type": "reference",
										"name": "IAuthenticationResult",
										"id": 382
									},
									{
										"type": "reference",
										"name": "ICreateFlowActionResult",
										"id": 526
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 370,
							"name": "success",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "property hold status if the action was a success or a failure"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 812,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 380,
							"name": "getResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 381,
									"name": "getResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "property getter for [[result]]",
										"returns": "\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationError",
												"id": 40
											},
											{
												"type": "reference",
												"name": "IAuthenticationResult",
												"id": 382
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 843,
									"character": 13
								}
							]
						},
						{
							"id": 372,
							"name": "isSuccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 373,
									"name": "isSuccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " getter function of [[success]] property",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 823,
									"character": 13
								}
							]
						},
						{
							"id": 377,
							"name": "setResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 378,
									"name": "setResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "property setter for [[result]]",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 379,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 40
													},
													{
														"type": "reference",
														"name": "IAuthenticationResult",
														"id": 382
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 369
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 837,
									"character": 13
								}
							]
						},
						{
							"id": 374,
							"name": "setSuccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 375,
									"name": "setSuccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "property setter for [[success]]",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 376,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IActionResult",
										"id": 369
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 830,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								371,
								370
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								380,
								372,
								377,
								374
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 808,
							"character": 30
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "ActionResult",
							"id": 560
						}
					]
				},
				{
					"id": 282,
					"name": "IActivityContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Activity Contribution"
					},
					"children": [
						{
							"id": 295,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 71,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.appId",
								"id": 204
							}
						},
						{
							"id": 294,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.changelist",
								"id": 203
							}
						},
						{
							"id": 288,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display Settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 433,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IContributionDisplay",
								"id": 252
							}
						},
						{
							"id": 289,
							"name": "inputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity Inputs"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 437,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 242
								}
							}
						},
						{
							"id": 283,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity name, must be unique, no spaces"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 413,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 290,
							"name": "outputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity Outputs"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 441,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 242
								}
							}
						},
						{
							"id": 287,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "URI reference for the contribution"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 429,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 284,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Title to display on the activity tile"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 417,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 286,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 425,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 285,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Version number, use semver versioning"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 421,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 298,
							"name": "getElementType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 299,
									"name": "getElementType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the mode whether it is from Wizard or palette."
									},
									"type": {
										"type": "reference",
										"name": "ELEMENT_TYPE",
										"id": 212
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IContributionContext.getElementType",
										"id": 207
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 80,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.getElementType",
								"id": 207
							}
						},
						{
							"id": 291,
							"name": "getField",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 292,
									"name": "getField",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a field from inputs,outputs. Field Names must be unique within the activity"
									},
									"parameters": [
										{
											"id": 293,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IFieldDefinition",
										"id": 242
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 447,
									"character": 12
								}
							]
						},
						{
							"id": 296,
							"name": "getMode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 297,
									"name": "getMode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the mode whether it is from Wizard or palette."
									},
									"type": {
										"type": "reference",
										"name": "MODE",
										"id": 209
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IContributionContext.getMode",
										"id": 205
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 75,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.getMode",
								"id": 205
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								295,
								294,
								288,
								289,
								283,
								290,
								287,
								284,
								286,
								285
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								298,
								291,
								296
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 409,
							"character": 38
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IContributionContext",
							"id": 202
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IFlowElement",
							"id": 454
						}
					]
				},
				{
					"id": 432,
					"name": "IApplication",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 433,
							"name": "getName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 434,
									"name": "getName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the application name",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 989,
									"character": 11
								}
							]
						},
						{
							"id": 435,
							"name": "getTriggerFlowModelMaps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 436,
									"name": "getTriggerFlowModelMaps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the table of trigger and flow combinations",
										"returns": "\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "ITriggerFlowModelMapping",
											"id": 427
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 995,
									"character": 27
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								433,
								435
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 984,
							"character": 29
						}
					]
				},
				{
					"id": 382,
					"name": "IAuthenticationResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents the Authentication Result data structure returned by the\nconnector contribution developer when a OAUTH login action is invoked from the\nconnector form buttons defined in connector.json",
						"text": "The {{IAuthenticationResult}} is returned with the {{IActionResult}} result\nparameter.\n"
					},
					"children": [
						{
							"id": 385,
							"name": "authData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Depending on {{AUTHENTICATION_TYPE}} authData will hold different\ntypes of Data Interfaces.\n * {{AUTHENTICATION_TYPE.BASIC}} : {{IBasicAuthData}}\n * {{AUTHENTICATION_TYPE.OAUTH1}} : {{IOAuthData}}\n * {{AUTHENTICATION_TYPE.OAUTH2}} : {{IOAuthData}}\n * {{AUTHENTICATION_TYPE.OAUTH2_TWOLEG}} : {{IOAuthData}}"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 871,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "IOAuthData",
										"id": 653
									},
									{
										"type": "reference",
										"name": "IBasicAuthData",
										"id": 651
									}
								]
							}
						},
						{
							"id": 383,
							"name": "authType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The {{AUTHENTICATION_TYPE}} being used for the action result"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 858,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "AUTHENTICATION_TYPE",
								"id": 699
							}
						},
						{
							"id": 384,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The contribution context being used in the action handler OR provider"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 862,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IConnectorContribution",
								"id": 303
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								385,
								383,
								384
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 854,
							"character": 38
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AuthenticationResult",
							"id": 386
						}
					]
				},
				{
					"id": 579,
					"name": "IBaseServiceContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Base Service Contribution"
					},
					"children": [
						{
							"id": 580,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 581,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 717
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1266,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								580
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1261,
							"character": 41
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IWiServiceProviderContribution",
							"id": 582
						},
						{
							"type": "reference",
							"name": "IWiServiceHandlerContribution",
							"id": 596
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "WiServiceContribution",
							"id": 750
						},
						{
							"type": "reference",
							"name": "WiServiceHandlerContribution",
							"id": 796
						},
						{
							"type": "reference",
							"name": "WiServiceProviderContribution",
							"id": 769
						}
					]
				},
				{
					"id": 651,
					"name": "IBasicAuthData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents the OAUTH data structure in {{IAuthenticationResult}} returned by the\nconnector contribution developer when a OAUTH login action is invoked from the\nconnector form buttons defined in connector.json",
						"text": "Authentication Data Structure if {AUTHENTICATION_TYPE} is\n * {AUTHENTICATION_TYPE.BASIC}\n"
					},
					"children": [
						{
							"id": 652,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1462,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								652
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1461,
							"character": 31
						}
					]
				},
				{
					"id": 239,
					"name": "IConnectionAllowedValue",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "desc",
								"text": "This interface defines the contract between the value provider of a field\nwhose display field type is {{DisplayFieldType.connection}}.\n"
							}
						]
					},
					"children": [
						{
							"id": 241,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This is a name which is either calculated or provided via field value\nin the connection JSON settings. In absence of name unique_id will be\nused for display as a drop down choice."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 249,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 240,
							"name": "unique_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "desc",
										"text": "This is the unique id assigned to a new connection during creation"
									},
									{
										"tag": "example",
										"text": "uuid\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 243,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								241,
								240
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 238,
							"character": 40
						}
					]
				},
				{
					"id": 303,
					"name": "IConnectorContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Connector Contribution"
					},
					"children": [
						{
							"id": 312,
							"name": "actions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Form Action configuration"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 521,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IActionDefinition",
									"id": 300
								}
							}
						},
						{
							"id": 314,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 71,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.appId",
								"id": 204
							}
						},
						{
							"id": 313,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.changelist",
								"id": 203
							}
						},
						{
							"id": 310,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display Settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 497,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IContributionDisplay",
								"id": 252
							}
						},
						{
							"id": 309,
							"name": "keyfield",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Provider the field name in settings section which will hold identifiable\nname for the connection. In the absence of this keyfield the unique\nconnection record identifier e.g. uuid will be used for display."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 493,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 304,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Connector name. Must be unique, no spaces"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 471,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 308,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "URI reference for connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 487,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 311,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Static connector configurations e.g. connection name, connection description, connection configuration etc.",
								"text": "FOR {{AUTHENTICATION_TYPE}} IS {{AUTHENTICATION_TYPE.OAUTH1 }} | {{AUTHENTICATION_TYPE.OAUTH2 }} | {{AUTHENTICATION_TYPE.OAUTH2_TWOLEG }}\nFIXED ReEntry Field Name **WI_STUDIO_OAUTH_CONNECTOR_INFO** is mandatory.\n\nThis field is not required for other Authentication purposes where it does not\ninvolve a round trip to the third party auth system with a callback\nThe user can save all the required authentication tokens in this field which is\nthen used by the activity contribution developer to use this information.\n\n{\n  \"name\" : \"WI_STUDIO_OAUTH_CONNECTOR_INFO\",\n  \"type\" : \"string\",\n  \"display\": {\n     \"visible\": false\n  }\n }\n"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 517,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 242
								}
							}
						},
						{
							"id": 305,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Title to display on the connection tile"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 475,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 307,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 483,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 306,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Connector version. Must follow semver versioning"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 479,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 317,
							"name": "getElementType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 318,
									"name": "getElementType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the mode whether it is from Wizard or palette."
									},
									"type": {
										"type": "reference",
										"name": "ELEMENT_TYPE",
										"id": 212
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IContributionContext.getElementType",
										"id": 207
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 80,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.getElementType",
								"id": 207
							}
						},
						{
							"id": 315,
							"name": "getMode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 316,
									"name": "getMode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the mode whether it is from Wizard or palette."
									},
									"type": {
										"type": "reference",
										"name": "MODE",
										"id": 209
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IContributionContext.getMode",
										"id": 205
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 75,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.getMode",
								"id": 205
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								312,
								314,
								313,
								310,
								309,
								304,
								308,
								311,
								305,
								307,
								306
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								317,
								315
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 467,
							"character": 39
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IContributionContext",
							"id": 202
						}
					]
				},
				{
					"id": 341,
					"name": "IContribActionProvider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "interface Action handler provider"
					},
					"children": [
						{
							"id": 342,
							"name": "handleAction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 343,
									"name": "handleAction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "handle action",
										"returns": "\n",
										"tags": [
											{
												"tag": "typeparam",
												"text": "The generic type parameter indicating the value type being returned.",
												"param": "T"
											}
										]
									},
									"parameters": [
										{
											"id": 344,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 712
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 658,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								342
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 650,
							"character": 39
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AbstractContribActionProvider",
							"id": 737
						}
					]
				},
				{
					"id": 337,
					"name": "IContribFieldProvider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "interface Field Provider"
					},
					"children": [
						{
							"id": 338,
							"name": "getFieldValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 339,
									"name": "getFieldValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets Field Value",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 340,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 712
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 644,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								338
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 637,
							"character": 38
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AbstractContribFieldProvider",
							"id": 727
						}
					]
				},
				{
					"id": 345,
					"name": "IContribRemoveProvider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "interface remove  provider"
					},
					"children": [
						{
							"id": 346,
							"name": "handleRemove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 347,
									"name": "handleRemove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "handle remove",
										"returns": "\n",
										"tags": [
											{
												"tag": "typeparam",
												"text": "The generic type parameter indicating the value type being returned.",
												"param": "T"
											}
										]
									},
									"parameters": [
										{
											"id": 348,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 712
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IActionResult",
												"id": 369
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 369
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 672,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								346
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 663,
							"character": 39
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AbstractContribRemoveProvider",
							"id": 741
						}
					]
				},
				{
					"id": 333,
					"name": "IContribValidationProvider",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "interface Validation provider"
					},
					"children": [
						{
							"id": 334,
							"name": "validate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 335,
									"name": "validate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "validate",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 336,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IContributionTypes",
												"id": 712
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IValidationResult",
												"id": 79
											},
											{
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 79
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 631,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								334
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 625,
							"character": 43
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AbstractContribValidationProvider",
							"id": 720
						}
					]
				},
				{
					"id": 202,
					"name": "IContributionContext",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The UI form sends the IContributionContext"
					},
					"children": [
						{
							"id": 204,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 71,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 203,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 207,
							"name": "getElementType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 208,
									"name": "getElementType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the mode whether it is from Wizard or palette."
									},
									"type": {
										"type": "reference",
										"name": "ELEMENT_TYPE",
										"id": 212
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 80,
									"character": 18
								}
							]
						},
						{
							"id": 205,
							"name": "getMode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 206,
									"name": "getMode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the mode whether it is from Wizard or palette."
									},
									"type": {
										"type": "reference",
										"name": "MODE",
										"id": 209
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 75,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								204,
								203
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								207,
								205
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 69,
							"character": 37
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ITriggerContribution",
							"id": 263
						},
						{
							"type": "reference",
							"name": "IActivityContribution",
							"id": 282
						},
						{
							"type": "reference",
							"name": "IConnectorContribution",
							"id": 303
						}
					]
				},
				{
					"id": 252,
					"name": "IContributionDisplay",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Display attributes for the contribution"
					},
					"children": [
						{
							"id": 254,
							"name": "category",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Specifies the category of the contribution e.g. Salesforce,Marketo , default is \"General\""
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 314,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 258,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Description"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 330,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 257,
							"name": "largeIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the small icon path. The path is relative to the contribution folder root. i.e. icons/file.png"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 326,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 253,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "display name for the contribution"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 310,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259,
							"name": "sections",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sections for dynamic tabs"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 334,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 256,
							"name": "smallIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the small icon path. The path is relative to the contribution folder root. i.e. icons/file.png"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 322,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 255,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies if a contribution is visible and enabled"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 318,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 260,
							"name": "wizard",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Step labels for trigger wizard display"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 338,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								254,
								258,
								257,
								253,
								259,
								256,
								255,
								260
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 306,
							"character": 37
						}
					]
				},
				{
					"id": 349,
					"name": "IContributionHandler",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " Contribution Handler interface",
						"tags": [
							{
								"tag": "description",
								"text": "A comtribution handler implementation provides the following handlers\n * value - value provider for the given field\n * validate - vrules provider for the given field\n * action - action handler for a given button.\n"
							}
						]
					},
					"children": [
						{
							"id": 360,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional action handler for form buttons\n"
									},
									{
										"tag": "example",
										"text": "\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "actionId"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 773,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 361,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 362,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 363,
													"name": "actionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 364,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 712
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 369
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 369
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 773,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 365,
							"name": "remove",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional remove handler for handling cleanup actions on external domains, invoked when the contribution\ninstance is deleted. The key information for delete comes from the context itself."
									},
									{
										"tag": "example",
										"text": "\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class MyConnectionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n remove = (context: IConnectorContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 802,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 366,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 367,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 368,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 712
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 369
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 369
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 802,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 355,
							"name": "validate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Validate a specified field name parameter\n"
									},
									{
										"tag": "example",
										"text": "\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n* ```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 743,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 356,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 357,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 358,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 359,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 712
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IValidationResult",
																"id": 79
															}
														]
													},
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 79
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 743,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 350,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
								"tags": [
									{
										"tag": "example",
										"text": "\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 713,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 351,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 352,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 353,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 354,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 712
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 713,
											"character": 10
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								360,
								365,
								355,
								350
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 685,
							"character": 37
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IWiServiceHandlerContribution",
							"id": 596
						}
					]
				},
				{
					"id": 503,
					"name": "ICreateFlowActionContext",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Create FlowModel Action Context"
					},
					"children": [
						{
							"id": 521,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 71,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.appId",
								"id": 204
							}
						},
						{
							"id": 520,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.changelist",
								"id": 203
							}
						},
						{
							"id": 513,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display Settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 385,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IContributionDisplay",
								"id": 252
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.display",
								"id": 269
							}
						},
						{
							"id": 515,
							"name": "handler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger handler endpoint settings, e.g. for each port setting there can be multiple handlers"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 393,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IHandlerDefinition",
								"id": 261
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.handler",
								"id": 271
							}
						},
						{
							"id": 508,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " trigger name, must be unique, no spaces"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 365,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.name",
								"id": 264
							}
						},
						{
							"id": 516,
							"name": "outputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger output fields"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 397,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 242
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.outputs",
								"id": 272
							}
						},
						{
							"id": 512,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "URI reference for the contribution"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 381,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.ref",
								"id": 268
							}
						},
						{
							"id": 514,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger static settings i.e. port number, logging etc."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 389,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 242
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.settings",
								"id": 270
							}
						},
						{
							"id": 509,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Title to display on the trigger tile"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 369,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.title",
								"id": 265
							}
						},
						{
							"id": 511,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 377,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.type",
								"id": 267
							}
						},
						{
							"id": 510,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Version number , use semver versioning"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 373,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.version",
								"id": 266
							}
						},
						{
							"id": 524,
							"name": "getElementType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 525,
									"name": "getElementType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the mode whether it is from Wizard or palette."
									},
									"type": {
										"type": "reference",
										"name": "ELEMENT_TYPE",
										"id": 212
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IContributionContext.getElementType",
										"id": 207
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 80,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.getElementType",
								"id": 207
							}
						},
						{
							"id": 517,
							"name": "getField",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 518,
									"name": "getField",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a field from settings,endpoint,outputs. Field names must be unique within the trigger"
									},
									"parameters": [
										{
											"id": 519,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IFieldDefinition",
										"id": 242
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ITriggerContribution.getField",
										"id": 273
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 403,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.getField",
								"id": 273
							}
						},
						{
							"id": 506,
							"name": "getFlowDescription",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 507,
									"name": "getFlowDescription",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the flow description",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1075,
									"character": 22
								}
							]
						},
						{
							"id": 504,
							"name": "getFlowName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 505,
									"name": "getFlowName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the flow name",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1069,
									"character": 15
								}
							]
						},
						{
							"id": 522,
							"name": "getMode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 523,
									"name": "getMode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the mode whether it is from Wizard or palette."
									},
									"type": {
										"type": "reference",
										"name": "MODE",
										"id": 209
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IContributionContext.getMode",
										"id": 205
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 75,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.getMode",
								"id": 205
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								521,
								520,
								513,
								515,
								508,
								516,
								512,
								514,
								509,
								511,
								510
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								524,
								517,
								506,
								504,
								522
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1064,
							"character": 41
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ITriggerContribution",
							"id": 263
						}
					]
				},
				{
					"id": 526,
					"name": "ICreateFlowActionResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Create FlowModel Action Result interface"
					},
					"children": [
						{
							"id": 529,
							"name": "addTriggerFlowMapping",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 530,
									"name": "addTriggerFlowMapping",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a named flow to the create flow action result"
									},
									"parameters": [
										{
											"id": 531,
											"name": "triggerElement",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "ITriggerElement",
												"id": 406
											}
										},
										{
											"id": 532,
											"name": "flow",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "IFlow",
												"id": 437
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1097,
									"character": 25
								}
							]
						},
						{
							"id": 527,
							"name": "getTriggerFlowMaps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 528,
									"name": "getTriggerFlowMaps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get Flows from the trigger result",
										"returns": "\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "ITriggerFlowModelMapping",
											"id": 427
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1090,
									"character": 22
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								529,
								527
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1084,
							"character": 40
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "CreateFlowActionResult",
							"id": 533
						}
					]
				},
				{
					"id": 242,
					"name": "IFieldDefinition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Field Definition"
					},
					"children": [
						{
							"id": 247,
							"name": "allowed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "specified allowed value for display field type \"dropdown\", keeping it same as flogo\nFor field display type == {{DisplayFieldType.connections}} then allowed property should\nreturn array of {{IConnectionAllowedValue}}"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 284,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IConnectionAllowedValue",
											"id": 239
										}
									}
								]
							}
						},
						{
							"id": 249,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Description"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 292,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 250,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Field display settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 296,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IFieldDisplay",
								"id": 216
							}
						},
						{
							"id": 243,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "name of the field, not same as display name"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 266,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 246,
							"name": "required",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "specifies if the form field is required"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 278,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 248,
							"name": "section",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to place the field in a customized form tab section"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 288,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 244,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "data type of the field in string e.g. string,number"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 270,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "FieldType",
								"id": 709
							}
						},
						{
							"id": 245,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "value of the field"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 274,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 251,
							"name": "wizard",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Field display settings for wizard"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 300,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "IFieldWizardDisplay",
								"id": 234
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								247,
								249,
								250,
								243,
								246,
								248,
								244,
								245,
								251
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 262,
							"character": 33
						}
					]
				},
				{
					"id": 216,
					"name": "IFieldDisplay",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Field display settings"
					},
					"children": [
						{
							"id": 227,
							"name": "buttonStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Button Styles when display type is button. Default style is \"btn-default\""
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 183,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonStyle",
								"id": 697
							}
						},
						{
							"id": 226,
							"name": "buttonType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the button type. Default type is \"button\""
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 179,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "ButtonType",
								"id": 695
							}
						},
						{
							"id": 220,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Descrption for the field"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 155,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 221,
							"name": "fileExtensions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used with display field type fileselector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 159,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 232,
							"name": "inputSettingsOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display in only Input Settings but not in mapper"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 204,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 222,
							"name": "mappable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "true when field is also shown in mapper, else false"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 163,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 217,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Named used in display"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 143,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 233,
							"name": "outputSettingsOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display in only Output Settings but not in output tree"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 209,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 228,
							"name": "readonly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sets the widget in read-only mode"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 187,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 224,
							"name": "schema",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used with display field type table"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 171,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 219,
							"name": "selection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used with display field type dropdown"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 151,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 231,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display in only mapper but not on input settings/ output settings even though there is display section"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 199,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 223,
							"name": "syntax",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": " Used with display field type texteditor"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 167,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 218,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display field type"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 147,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "DisplayFieldType",
								"id": 691
							}
						},
						{
							"id": 230,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 194,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 229,
							"name": "valid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether the field is valid or not"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 191,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 225,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "specifies if the field is visible , the field is always enabled. The default is true."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 175,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								227,
								226,
								220,
								221,
								232,
								222,
								217,
								233,
								228,
								224,
								219,
								231,
								223,
								218,
								230,
								229,
								225
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 139,
							"character": 30
						}
					]
				},
				{
					"id": 234,
					"name": "IFieldWizardDisplay",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Field display settings for wizard"
					},
					"children": [
						{
							"id": 238,
							"name": "css",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "inline CSS for the field item"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 231,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 236,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Field Display Name to be shown on wizard page"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 223,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 235,
							"name": "step",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Wizard Step Label"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 219,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 237,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Field Widget type"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 227,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								238,
								236,
								235,
								237
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 215,
							"character": 36
						}
					]
				},
				{
					"id": 437,
					"name": "IFlow",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "FlowModel Model Interface"
					},
					"children": [
						{
							"id": 440,
							"name": "getDescription",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 441,
									"name": "getDescription",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the description of the flow model",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1013,
									"character": 18
								}
							]
						},
						{
							"id": 442,
							"name": "getFlowElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 443,
									"name": "getFlowElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the flow",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IFlowElement",
										"id": 454
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1019,
									"character": 18
								}
							]
						},
						{
							"id": 438,
							"name": "getName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 439,
									"name": "getName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the name of the flow model",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1007,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								440,
								442,
								438
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1002,
							"character": 22
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IMutableFlow",
							"id": 444
						}
					]
				},
				{
					"id": 454,
					"name": "IFlowElement",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "FlowModel Result interface"
					},
					"children": [
						{
							"id": 472,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 71,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.appId",
								"id": 204
							}
						},
						{
							"id": 471,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.changelist",
								"id": 203
							}
						},
						{
							"id": 465,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display Settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 433,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IContributionDisplay",
								"id": 252
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.display",
								"id": 288
							}
						},
						{
							"id": 455,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1036,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 466,
							"name": "inputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity Inputs"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 437,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 242
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.inputs",
								"id": 289
							}
						},
						{
							"id": 460,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity name, must be unique, no spaces"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 413,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.name",
								"id": 283
							}
						},
						{
							"id": 467,
							"name": "outputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity Outputs"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 441,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 242
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.outputs",
								"id": 290
							}
						},
						{
							"id": 464,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "URI reference for the contribution"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 429,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.ref",
								"id": 287
							}
						},
						{
							"id": 461,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Title to display on the activity tile"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 417,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.title",
								"id": 284
							}
						},
						{
							"id": 463,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 425,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.type",
								"id": 286
							}
						},
						{
							"id": 462,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Version number, use semver versioning"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 421,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.version",
								"id": 285
							}
						},
						{
							"id": 458,
							"name": "getChildren",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 459,
									"name": "getChildren",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the map of flow element children",
										"returns": "\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IFlowElement",
											"id": 454
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1049,
									"character": 15
								}
							]
						},
						{
							"id": 475,
							"name": "getElementType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 476,
									"name": "getElementType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the mode whether it is from Wizard or palette."
									},
									"type": {
										"type": "reference",
										"name": "ELEMENT_TYPE",
										"id": 212
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IContributionContext.getElementType",
										"id": 207
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 80,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.getElementType",
								"id": 207
							}
						},
						{
							"id": 468,
							"name": "getField",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 469,
									"name": "getField",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a field from inputs,outputs. Field Names must be unique within the activity"
									},
									"parameters": [
										{
											"id": 470,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IFieldDefinition",
										"id": 242
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IActivityContribution.getField",
										"id": 291
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 447,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.getField",
								"id": 291
							}
						},
						{
							"id": 456,
							"name": "getId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 457,
									"name": "getId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the id of the flow element",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1042,
									"character": 9
								}
							]
						},
						{
							"id": 473,
							"name": "getMode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 474,
									"name": "getMode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the mode whether it is from Wizard or palette."
									},
									"type": {
										"type": "reference",
										"name": "MODE",
										"id": 209
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IContributionContext.getMode",
										"id": 205
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 75,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.getMode",
								"id": 205
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								472,
								471,
								465,
								455,
								466,
								460,
								467,
								464,
								461,
								463,
								462
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								458,
								475,
								468,
								456,
								473
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1035,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IActivityContribution",
							"id": 282
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IMutableFlowElement",
							"id": 477
						}
					]
				},
				{
					"id": 319,
					"name": "IFunctionArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Function args"
					},
					"children": [
						{
							"id": 322,
							"name": "array",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates if the argument should be an array.\nFalse by default.\nThis field in combination with type determine the expected parameter type.",
								"tags": [
									{
										"tag": "example",
										"text": "\n { name: \"example\", type: \"string\", array: true } means function expects a parameter of type string[] or Array<string>\n\n @default false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 547,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 320,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Argument name"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 532,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 323,
							"name": "required",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates that the argument is required. Otherwise it will be considered as optional.\nTrue by default.",
								"text": "* @default true\n"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 554,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 321,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Argument type",
								"tags": [
									{
										"tag": "example",
										"text": "string, integer, object, boolean, any\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 537,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 324,
							"name": "variable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates that the function can handle an indefinite number of arguments starting in this argument's position.\nFalse by default.\nOnly allowed for trailing arguments.",
								"text": "This flag works in combination with the \"required\" flag in the following way:\nvariable=true and required=true => argument expected one or more times\nvariable=true and required=false => argument expected zero or more times\n",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 566,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								322,
								320,
								323,
								321,
								324
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 528,
							"character": 30
						}
					]
				},
				{
					"id": 328,
					"name": "IFunctionContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Function contribution"
					},
					"children": [
						{
							"id": 331,
							"name": "args",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Function argument definition"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 604,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFunctionArgs",
									"id": 319
								}
							}
						},
						{
							"id": 330,
							"name": "category",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Function category"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 600,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 329,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Name of the function"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 596,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 332,
							"name": "return",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Return information"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 608,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "IFunctionReturn",
								"id": 325
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								331,
								330,
								329,
								332
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 592,
							"character": 38
						}
					]
				},
				{
					"id": 325,
					"name": "IFunctionReturn",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Function return"
					},
					"children": [
						{
							"id": 327,
							"name": "array",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates if the argument should be an array.\nFalse by default.\nThis field in combination with type determine the expected parameter type.",
								"tags": [
									{
										"tag": "default",
										"text": "false"
									},
									{
										"tag": "example",
										"text": "\n { type: \"string\", array: true } means function expects a parameter of type string[] or Array<string>\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 586,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 326,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Argument type",
								"tags": [
									{
										"tag": "example",
										"text": "string, integer, object, boolean, any\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 577,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								327,
								326
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 572,
							"character": 32
						}
					]
				},
				{
					"id": 261,
					"name": "IHandlerDefinition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Endpoint Definition"
					},
					"children": [
						{
							"id": 262,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Endpoint settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 355,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 242
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								262
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 351,
							"character": 35
						}
					]
				},
				{
					"id": 545,
					"name": "IModelService",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Model Service interface"
					},
					"children": [
						{
							"id": 558,
							"name": "createBranchElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 559,
									"name": "createBranchElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a branch element",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IMutableFlowElement",
										"id": 477
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1184,
									"character": 23
								}
							]
						},
						{
							"id": 551,
							"name": "createFlow",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 552,
									"name": "createFlow",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a FlowModel",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 553,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 554,
											"name": "description",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IMutableFlow",
										"id": 444
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1169,
									"character": 14
								}
							]
						},
						{
							"id": 555,
							"name": "createFlowElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 556,
									"name": "createFlowElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a flow element",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 557,
											"name": "element_type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IMutableFlowElement",
										"id": 477
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1177,
									"character": 21
								}
							]
						},
						{
							"id": 548,
							"name": "createTriggerElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 549,
									"name": "createTriggerElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create a Trigger Element",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 550,
											"name": "element_type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ITriggerElement",
										"id": 406
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1161,
									"character": 24
								}
							]
						},
						{
							"id": 546,
							"name": "getApplication",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 547,
									"name": "getApplication",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return the application",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IApplication",
										"id": 432
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1154,
									"character": 18
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								558,
								551,
								555,
								548,
								546
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1149,
							"character": 30
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "WiContribModelService",
							"id": 917
						}
					]
				},
				{
					"id": 444,
					"name": "IMutableFlow",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 445,
							"name": "addFlowElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 446,
									"name": "addFlowElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a flow child trigger element",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 447,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IFlowElement",
												"id": 454
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IFlow",
										"id": 437
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1028,
									"character": 18
								}
							]
						},
						{
							"id": 450,
							"name": "getDescription",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 451,
									"name": "getDescription",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the description of the flow model",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IFlow.getDescription",
										"id": 440
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1013,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IFlow.getDescription",
								"id": 440
							}
						},
						{
							"id": 452,
							"name": "getFlowElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 453,
									"name": "getFlowElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the flow",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IFlowElement",
										"id": 454
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IFlow.getFlowElement",
										"id": 442
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1019,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IFlow.getFlowElement",
								"id": 442
							}
						},
						{
							"id": 448,
							"name": "getName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 449,
									"name": "getName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the name of the flow model",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IFlow.getName",
										"id": 438
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1007,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IFlow.getName",
								"id": 438
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								445,
								450,
								452,
								448
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1022,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IFlow",
							"id": 437
						}
					]
				},
				{
					"id": 477,
					"name": "IMutableFlowElement",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 498,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 71,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.appId",
								"id": 204
							}
						},
						{
							"id": 497,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.changelist",
								"id": 203
							}
						},
						{
							"id": 491,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display Settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 433,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IContributionDisplay",
								"id": 252
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.display",
								"id": 288
							}
						},
						{
							"id": 481,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1036,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IFlowElement.id",
								"id": 455
							}
						},
						{
							"id": 492,
							"name": "inputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity Inputs"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 437,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 242
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.inputs",
								"id": 289
							}
						},
						{
							"id": 486,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity name, must be unique, no spaces"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 413,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.name",
								"id": 283
							}
						},
						{
							"id": 493,
							"name": "outputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Activity Outputs"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 441,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 242
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.outputs",
								"id": 290
							}
						},
						{
							"id": 490,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "URI reference for the contribution"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 429,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.ref",
								"id": 287
							}
						},
						{
							"id": 487,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Title to display on the activity tile"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 417,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.title",
								"id": 284
							}
						},
						{
							"id": 489,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 425,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.type",
								"id": 286
							}
						},
						{
							"id": 488,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Version number, use semver versioning"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 421,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.version",
								"id": 285
							}
						},
						{
							"id": 478,
							"name": "addElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 479,
									"name": "addElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds a child flow element",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 480,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "IFlowElement",
												"id": 454
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IFlowElement",
										"id": 454
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1058,
									"character": 14
								}
							]
						},
						{
							"id": 484,
							"name": "getChildren",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 485,
									"name": "getChildren",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the map of flow element children",
										"returns": "\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IFlowElement",
											"id": 454
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IFlowElement.getChildren",
										"id": 458
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1049,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IFlowElement.getChildren",
								"id": 458
							}
						},
						{
							"id": 501,
							"name": "getElementType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 502,
									"name": "getElementType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the mode whether it is from Wizard or palette."
									},
									"type": {
										"type": "reference",
										"name": "ELEMENT_TYPE",
										"id": 212
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IContributionContext.getElementType",
										"id": 207
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 80,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.getElementType",
								"id": 207
							}
						},
						{
							"id": 494,
							"name": "getField",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 495,
									"name": "getField",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a field from inputs,outputs. Field Names must be unique within the activity"
									},
									"parameters": [
										{
											"id": 496,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IFieldDefinition",
										"id": 242
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IActivityContribution.getField",
										"id": 291
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 447,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IActivityContribution.getField",
								"id": 291
							}
						},
						{
							"id": 482,
							"name": "getId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 483,
									"name": "getId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the id of the flow element",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IFlowElement.getId",
										"id": 456
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1042,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IFlowElement.getId",
								"id": 456
							}
						},
						{
							"id": 499,
							"name": "getMode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 500,
									"name": "getMode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the mode whether it is from Wizard or palette."
									},
									"type": {
										"type": "reference",
										"name": "MODE",
										"id": 209
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IContributionContext.getMode",
										"id": 205
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 75,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.getMode",
								"id": 205
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								498,
								497,
								491,
								481,
								492,
								486,
								493,
								490,
								487,
								489,
								488
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								478,
								484,
								501,
								494,
								482,
								499
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1052,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IFlowElement",
							"id": 454
						}
					]
				},
				{
					"id": 653,
					"name": "IOAuthData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents the OAUTH data structure in {IAuthenticationResult} returned by the\nconnector contribution developer when a OAUTH login action is invoked from the\nconnector form buttons defined in connector.json",
						"text": "Authentication Data Structure if {AUTHENTICATION_TYPE} is\n * {AUTHENTICATION_TYPE.OAUTH1}\n * {AUTHENTICATION_TYPE.OAUTH2}\n * {AUTHENTICATION_TYPE.OAUTH2_TWOLEG}\n"
					},
					"children": [
						{
							"id": 654,
							"name": "authLoginUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Authentication Login URL provided by the Connector without any state information parameters",
								"tags": [
									{
										"tag": "example",
										"text": "https://login.salesforce.com/services/oauth2/authorize?response_type=code&client_id=CLIENTID&redirect_uri=REDIRECTURL&display=popup&prompt=login consent\n where REDIRECT_URL=https://localdev-integration.cloud.tibco.com/wistudio/connectiondetails\n NOTE: state information parameter for Salesforce \"state\" is not part of the URL\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1482,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 655,
							"name": "authStateQueryParam",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "This property will tell the Contribution Model what is the state information parameter name being used by the OAUTH provider\nto return state of the Application before making the authentication request to the SAAS authentication provider.",
								"tags": [
									{
										"tag": "example",
										"text": "For Saleforce the state information parameter is \"state\"\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1488,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								654,
								655
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1475,
							"character": 27
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "OAuthData",
							"id": 656
						}
					]
				},
				{
					"id": 263,
					"name": "ITriggerContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Trigger Contribution interface"
					},
					"children": [
						{
							"id": 277,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 71,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.appId",
								"id": 204
							}
						},
						{
							"id": 276,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.changelist",
								"id": 203
							}
						},
						{
							"id": 269,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display Settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 385,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IContributionDisplay",
								"id": 252
							}
						},
						{
							"id": 271,
							"name": "handler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger handler endpoint settings, e.g. for each port setting there can be multiple handlers"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 393,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IHandlerDefinition",
								"id": 261
							}
						},
						{
							"id": 264,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " trigger name, must be unique, no spaces"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 365,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 272,
							"name": "outputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger output fields"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 397,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 242
								}
							}
						},
						{
							"id": 268,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "URI reference for the contribution"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 381,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 270,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger static settings i.e. port number, logging etc."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 389,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 242
								}
							}
						},
						{
							"id": 265,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Title to display on the trigger tile"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 369,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 267,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 377,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 266,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Version number , use semver versioning"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 373,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 280,
							"name": "getElementType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 281,
									"name": "getElementType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the mode whether it is from Wizard or palette."
									},
									"type": {
										"type": "reference",
										"name": "ELEMENT_TYPE",
										"id": 212
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IContributionContext.getElementType",
										"id": 207
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 80,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.getElementType",
								"id": 207
							}
						},
						{
							"id": 273,
							"name": "getField",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 274,
									"name": "getField",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a field from settings,endpoint,outputs. Field names must be unique within the trigger"
									},
									"parameters": [
										{
											"id": 275,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IFieldDefinition",
										"id": 242
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 403,
									"character": 12
								}
							]
						},
						{
							"id": 278,
							"name": "getMode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 279,
									"name": "getMode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the mode whether it is from Wizard or palette."
									},
									"type": {
										"type": "reference",
										"name": "MODE",
										"id": 209
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IContributionContext.getMode",
										"id": 205
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 75,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.getMode",
								"id": 205
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								277,
								276,
								269,
								271,
								264,
								272,
								268,
								270,
								265,
								267,
								266
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								280,
								273,
								278
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 361,
							"character": 37
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IContributionContext",
							"id": 202
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ITriggerElement",
							"id": 406
						},
						{
							"type": "reference",
							"name": "ICreateFlowActionContext",
							"id": 503
						}
					]
				},
				{
					"id": 406,
					"name": "ITriggerElement",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 422,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 71,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.appId",
								"id": 204
							}
						},
						{
							"id": 421,
							"name": "changelist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.changelist",
								"id": 203
							}
						},
						{
							"id": 414,
							"name": "display",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Display Settings"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 385,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IContributionDisplay",
								"id": 252
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.display",
								"id": 269
							}
						},
						{
							"id": 416,
							"name": "handler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger handler endpoint settings, e.g. for each port setting there can be multiple handlers"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 393,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "IHandlerDefinition",
								"id": 261
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.handler",
								"id": 271
							}
						},
						{
							"id": 409,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " trigger name, must be unique, no spaces"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 365,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.name",
								"id": 264
							}
						},
						{
							"id": 417,
							"name": "outputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger output fields"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 397,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 242
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.outputs",
								"id": 272
							}
						},
						{
							"id": 413,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "URI reference for the contribution"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 381,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.ref",
								"id": 268
							}
						},
						{
							"id": 415,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Trigger static settings i.e. port number, logging etc."
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 389,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IFieldDefinition",
									"id": 242
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.settings",
								"id": 270
							}
						},
						{
							"id": 410,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Title to display on the trigger tile"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 369,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.title",
								"id": 265
							}
						},
						{
							"id": 412,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Type of contribution flogo:activity or flogo:trigger or flogo:connector"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 377,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.type",
								"id": 267
							}
						},
						{
							"id": 411,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Version number , use semver versioning"
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 373,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.version",
								"id": 266
							}
						},
						{
							"id": 425,
							"name": "getElementType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 426,
									"name": "getElementType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the mode whether it is from Wizard or palette."
									},
									"type": {
										"type": "reference",
										"name": "ELEMENT_TYPE",
										"id": 212
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IContributionContext.getElementType",
										"id": 207
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 80,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.getElementType",
								"id": 207
							}
						},
						{
							"id": 418,
							"name": "getField",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 419,
									"name": "getField",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a field from settings,endpoint,outputs. Field names must be unique within the trigger"
									},
									"parameters": [
										{
											"id": 420,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IFieldDefinition",
										"id": 242
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ITriggerContribution.getField",
										"id": 273
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 403,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ITriggerContribution.getField",
								"id": 273
							}
						},
						{
							"id": 407,
							"name": "getId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 408,
									"name": "getId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 961,
									"character": 9
								}
							]
						},
						{
							"id": 423,
							"name": "getMode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 424,
									"name": "getMode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the mode whether it is from Wizard or palette."
									},
									"type": {
										"type": "reference",
										"name": "MODE",
										"id": 209
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IContributionContext.getMode",
										"id": 205
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 75,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionContext.getMode",
								"id": 205
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								422,
								421,
								414,
								416,
								409,
								417,
								413,
								415,
								410,
								412,
								411
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								425,
								418,
								407,
								423
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 960,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ITriggerContribution",
							"id": 263
						}
					]
				},
				{
					"id": 427,
					"name": "ITriggerFlowModelMapping",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Trigger and FlowModel Model mapping interface"
					},
					"children": [
						{
							"id": 430,
							"name": "getFlowModel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 431,
									"name": "getFlowModel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the first flow element",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IFlow",
										"id": 437
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 979,
									"character": 16
								}
							]
						},
						{
							"id": 428,
							"name": "getTriggerElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 429,
									"name": "getTriggerElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the Trigger Element",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "ITriggerElement",
										"id": 406
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 973,
									"character": 21
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								430,
								428
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 968,
							"character": 41
						}
					]
				},
				{
					"id": 618,
					"name": "IWiServiceContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Service contribution interface"
					},
					"children": [
						{
							"id": 631,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional action handler for form buttons\n"
									},
									{
										"tag": "example",
										"text": "\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "actionId"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 773,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 632,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 633,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 634,
													"name": "actionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 635,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 712
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 369
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 369
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 773,
											"character": 12
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.action",
								"id": 360
							}
						},
						{
							"id": 636,
							"name": "remove",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional remove handler for handling cleanup actions on external domains, invoked when the contribution\ninstance is deleted. The key information for delete comes from the context itself."
									},
									{
										"tag": "example",
										"text": "\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class MyConnectionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n remove = (context: IConnectorContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 802,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 637,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 638,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 639,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 712
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 369
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 369
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 802,
											"character": 12
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.remove",
								"id": 365
							}
						},
						{
							"id": 626,
							"name": "validate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Validate a specified field name parameter\n"
									},
									{
										"tag": "example",
										"text": "\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n* ```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 743,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 627,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 628,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 629,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 630,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 712
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IValidationResult",
																"id": 79
															}
														]
													},
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 79
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 743,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.validate",
								"id": 355
							}
						},
						{
							"id": 621,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
								"tags": [
									{
										"tag": "example",
										"text": "\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 713,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 622,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 623,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 624,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 625,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 712
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 713,
											"character": 10
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.value",
								"id": 350
							}
						},
						{
							"id": 646,
							"name": "getActionHandler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 647,
									"name": "getActionHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the action provider for a given button field in the form."
											},
											{
												"tag": "example",
												"text": "\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ActionProvider extends AbstractActionProvider {\n  handleAction(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ],\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceProviderContribution {}\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 648,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribActionProvider",
										"id": 341
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getActionHandler",
										"id": 589
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1394,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getActionHandler",
								"id": 589
							}
						},
						{
							"id": 640,
							"name": "getFieldProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 641,
									"name": "getFieldProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the FieldProvider for a given field."
											},
											{
												"tag": "example",
												"text": "\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n  getFieldValue(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 642,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribFieldProvider",
										"id": 337
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getFieldProvider",
										"id": 583
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1310,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getFieldProvider",
								"id": 583
							}
						},
						{
							"id": 649,
							"name": "getRemoveProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 650,
									"name": "getRemoveProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the action provider for a given button field in the form."
											},
											{
												"tag": "example",
												"text": "\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class MyConnectionRemoveProvider extends AbstractContribRemoveProvider {\n  handleRemove(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ],\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ],\n  removeProvider: MyConnectionRemoveProvider\n})\n @Injectable()\nexport class RestContribService extends WiServiceProviderContribution {}\n```"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "IContribRemoveProvider",
										"id": 345
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getRemoveProvider",
										"id": 592
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1438,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getRemoveProvider",
								"id": 592
							}
						},
						{
							"id": 619,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 620,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 717
									},
									"overwrites": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 580
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 580
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1266,
									"character": 11
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 580
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 580
							}
						},
						{
							"id": 643,
							"name": "getValidationProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 644,
									"name": "getValidationProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the vrules provider for a given field."
											},
											{
												"tag": "example",
												"text": "\nHere is an example of a vrules provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ValidationProvider extends AbstractContribValidationProvider {\n     validate(context: IContributionContext): Observable<IValidationResult> {\n         return Observable.create(observer => {\n              let vresult: IValidationResult = ValidationResult.newValidationResult();\n                     observer.next(vresult);\n          });\n     }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 645,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribValidationProvider",
										"id": 333
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IWiServiceProviderContribution.getValidationProvider",
										"id": 586
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1348,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IWiServiceProviderContribution.getValidationProvider",
								"id": 586
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								631,
								636,
								626,
								621
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								646,
								640,
								649,
								619,
								643
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1450,
							"character": 39
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IWiServiceHandlerContribution",
							"id": 596
						},
						{
							"type": "reference",
							"name": "IWiServiceProviderContribution",
							"id": 582
						}
					]
				},
				{
					"id": 596,
					"name": "IWiServiceHandlerContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Handler Service contribution interface"
					},
					"children": [
						{
							"id": 609,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional action handler for form buttons\n"
									},
									{
										"tag": "example",
										"text": "\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n action = (actionId: string, context: IActivityContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "actionId"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 773,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 610,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 611,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 612,
													"name": "actionId",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 613,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 712
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 369
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 369
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 773,
											"character": 12
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.action",
								"id": 360
							}
						},
						{
							"id": 614,
							"name": "remove",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Optional remove handler for handling cleanup actions on external domains, invoked when the contribution\ninstance is deleted. The key information for delete comes from the context itself."
									},
									{
										"tag": "example",
										"text": "\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class MyConnectionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n...\n remove = (context: IConnectorContribution): Observable<IActionResult> | IActionResult => {\n   return Observable.create(observer => {\n       let aresult: IActionResult = ActionResult.newActionResult();\n       observer.next(aresult);\n   });\n  }\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 802,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 615,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 616,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 617,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 712
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IActionResult",
																"id": 369
															}
														]
													},
													{
														"type": "reference",
														"name": "IActionResult",
														"id": 369
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 802,
											"character": 12
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.remove",
								"id": 365
							}
						},
						{
							"id": 604,
							"name": "validate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "description",
										"text": "Validate a specified field name parameter\n"
									},
									{
										"tag": "example",
										"text": "\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n...\n validate = (fieldName: string, context: IActivityContribution): Observable<IValidationResult> | IValidationResult => {\n  return Observable.create(observer => {\n      let vresult: IValidationResult = ValidationResult.newValidationResult();\n       observer.next(vresult);\n   });\n }\n\n}\n* ```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 743,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 605,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 606,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 607,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 608,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 712
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "reference",
																"name": "IValidationResult",
																"id": 79
															}
														]
													},
													{
														"type": "reference",
														"name": "IValidationResult",
														"id": 79
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 743,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.validate",
								"id": 355
							}
						},
						{
							"id": 599,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " @description Provide values for a specified field name parameter\n ## Simple Example",
								"tags": [
									{
										"tag": "example",
										"text": "\nHere is an example of a field value provider class that can be injected:\n\n```\n\n   @Injectable()\n  export class RestContributionHandler extends WiServiceHandlerContribution {\n  constructor(injector: Injector, http: Http) {\n    super(injector, http);\n }\n\n value = (fieldName: string, context: IActivityContribution): Observable<any> | any => {\n   return Observable.create(observer => {\n         observer.next(\"\");\n   });\n }\n\n}\n```"
									},
									{
										"tag": "param",
										"text": "",
										"param": "fieldName"
									},
									{
										"tag": "param",
										"text": "",
										"param": "context"
									},
									{
										"tag": "returns",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 713,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 600,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 601,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 602,
													"name": "fieldName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 603,
													"name": "context",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IContributionTypes",
														"id": 712
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Observable",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 713,
											"character": 10
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IContributionHandler.value",
								"id": 350
							}
						},
						{
							"id": 597,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 598,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 717
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 580
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1266,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 580
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								609,
								614,
								604,
								599
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								597
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1444,
							"character": 46
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 579
						},
						{
							"type": "reference",
							"name": "IContributionHandler",
							"id": 349
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IWiServiceContribution",
							"id": 618
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "WiServiceHandlerContribution",
							"id": 796
						}
					]
				},
				{
					"id": 582,
					"name": "IWiServiceProviderContribution",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Provider Service contribution interface"
					},
					"children": [
						{
							"id": 589,
							"name": "getActionHandler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 590,
									"name": "getActionHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the action provider for a given button field in the form."
											},
											{
												"tag": "example",
												"text": "\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ActionProvider extends AbstractActionProvider {\n  handleAction(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ],\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceProviderContribution {}\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 591,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribActionProvider",
										"id": 341
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1394,
									"character": 20
								}
							]
						},
						{
							"id": 583,
							"name": "getFieldProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 584,
									"name": "getFieldProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the FieldProvider for a given field."
											},
											{
												"tag": "example",
												"text": "\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\n export class Field1Provider extends AbstractContribFieldProvider {\n  getFieldValue(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 585,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribFieldProvider",
										"id": 337
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1310,
									"character": 20
								}
							]
						},
						{
							"id": 592,
							"name": "getRemoveProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 593,
									"name": "getRemoveProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the action provider for a given button field in the form."
											},
											{
												"tag": "example",
												"text": "\n## Simple Example\n\nHere is an example of a field value provider class that can be injected:\n\n```\n\n @Injectable()\nexport class MyConnectionRemoveProvider extends AbstractContribRemoveProvider {\n  handleRemove(context: IActivityContribution): Observable<string[]> {\n     return Observable.create(observer => {\n       observer.next(\"\");\n    });\n }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ],\n  actionProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1ActionProvider\n     }\n  ],\n  removeProvider: MyConnectionRemoveProvider\n})\n @Injectable()\nexport class RestContribService extends WiServiceProviderContribution {}\n```"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "IContribRemoveProvider",
										"id": 345
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1438,
									"character": 21
								}
							]
						},
						{
							"id": 594,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 595,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " Returns Type of contribution implementation , handler [[WiServiceProviderContribution]] or provider [[WiServiceHandlerContribution]]",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IServiceContributionType",
										"id": 717
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IBaseServiceContribution.getType",
										"id": 580
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1266,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IBaseServiceContribution.getType",
								"id": 580
							}
						},
						{
							"id": 586,
							"name": "getValidationProvider",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 587,
									"name": "getValidationProvider",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns the vrules provider for a given field."
											},
											{
												"tag": "example",
												"text": "\nHere is an example of a vrules provider class that can be injected:\n\n```\n\n @Injectable()\nexport class Field1ValidationProvider extends AbstractContribValidationProvider {\n     validate(context: IContributionContext): Observable<IValidationResult> {\n         return Observable.create(observer => {\n              let vresult: IValidationResult = ValidationResult.newValidationResult();\n                     observer.next(vresult);\n          });\n     }\n}\n @WiContrib({\n  validationProviders: [\n     {\n         field: \"field1\",\n         useClass: Field1ValidationProvider\n     }\n  ],\n  fieldProviders: [\n     {\n      field: \"field1\",\n      useClass: Field1Provider\n     }\n  ]\n})\n @Injectable()\nexport class RestContribService extends WiServiceContribution {}\n```"
											}
										]
									},
									"parameters": [
										{
											"id": 588,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IContribValidationProvider",
										"id": 333
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 1348,
									"character": 25
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								589,
								583,
								592,
								594,
								586
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1272,
							"character": 47
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IBaseServiceContribution",
							"id": 579
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IWiServiceContribution",
							"id": 618
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "WiServiceProviderContribution",
							"id": 769
						}
					]
				},
				{
					"id": 704,
					"name": "ActionButton",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action item for button catalog"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 130,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 705,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 707,
									"name": "actionId",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 132,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 708,
									"name": "display",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 133,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "IFieldDisplay",
										"id": 216
									}
								},
								{
									"id": 706,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 131,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										707,
										708,
										706
									]
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 130,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 687,
					"name": "CONTRIBUTION_LOAD_RESULT",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "CONTRIBUTION_LOAD_RESULT type"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 64,
							"character": 36
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 688,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 690,
									"name": "data",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 64,
											"character": 61
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 689,
									"name": "status",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 64,
											"character": 47
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										690,
										689
									]
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 64,
									"character": 38
								}
							]
						}
					}
				},
				{
					"id": 713,
					"name": "FLOW_ELEMENT_MAP_TYPE",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "FlowModel Element map type",
						"tags": [
							{
								"tag": "description",
								"text": "Maps id to the element\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 958,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 714,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": [
								{
									"id": 715,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {},
									"parameters": [
										{
											"id": 716,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IFlowElement",
										"id": 454
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 958,
									"character": 35
								}
							]
						}
					}
				},
				{
					"id": 681,
					"name": "FUNCTION_CONTRIBUTION",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "FUNCTION_CONTRIBUTION type",
						"tags": [
							{
								"tag": "typeparam",
								"text": "The generic type parameter indicating the value type being returned.",
								"param": "T"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 54,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 682,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 684,
									"name": "category",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 56,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 686,
									"name": "function",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 58,
											"character": 12
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 683,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 55,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 685,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 57,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "CONTRIBUTION_TYPE",
										"id": 671
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										684,
										686,
										683,
										685
									]
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 54,
									"character": 38
								}
							]
						}
					}
				},
				{
					"id": 712,
					"name": "IContributionTypes",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Union Type from all contribution types"
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 614,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "IContributionContext",
								"id": 202
							},
							{
								"type": "reference",
								"name": "ITriggerContribution",
								"id": 263
							},
							{
								"type": "reference",
								"name": "IActivityContribution",
								"id": 282
							},
							{
								"type": "reference",
								"name": "IConnectorContribution",
								"id": 303
							},
							{
								"type": "reference",
								"name": "ICreateFlowActionContext",
								"id": 503
							}
						]
					}
				},
				{
					"id": 673,
					"name": "MODULE_CONTRIBUTION",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "MODULE_CONTRIBUTION type",
						"tags": [
							{
								"tag": "typeparam",
								"text": "The generic type parameter indicating the value type being returned",
								"param": "T"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 41,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 674,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 679,
									"name": "files",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 46,
											"character": 9
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 675,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 42,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 677,
									"name": "route",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 44,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 678,
									"name": "routePath",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 45,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 680,
									"name": "service",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 47,
											"character": 11
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 676,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "common/models/contrib.ts",
											"line": 43,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "CONTRIBUTION_TYPE",
										"id": 671
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										679,
										675,
										677,
										678,
										680,
										676
									]
								}
							],
							"sources": [
								{
									"fileName": "common/models/contrib.ts",
									"line": 41,
									"character": 36
								}
							]
						}
					}
				},
				{
					"id": 699,
					"name": "AUTHENTICATION_TYPE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 120,
							"character": 32
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 121,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "BASIC"
							},
							{
								"type": "stringLiteral",
								"value": "OAUTH1"
							},
							{
								"type": "stringLiteral",
								"value": "OAUTH2"
							},
							{
								"type": "stringLiteral",
								"value": "OAUTH2_TWOLEG"
							}
						]
					},
					"defaultValue": " strEnum([\"BASIC\", \"OAUTH1\", \"OAUTH2\", \"OAUTH2_TWOLEG\"])"
				},
				{
					"id": 697,
					"name": "ButtonStyle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " Button Style string enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string|string|string|string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 117,
							"character": 24
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 118,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "primary"
							},
							{
								"type": "stringLiteral",
								"value": "success"
							},
							{
								"type": "stringLiteral",
								"value": "info"
							},
							{
								"type": "stringLiteral",
								"value": "warning"
							},
							{
								"type": "stringLiteral",
								"value": "danger"
							}
						]
					},
					"defaultValue": " strEnum([\"default\", \"primary\", \"success\", \"info\", \"warning\", \"danger\"])"
				},
				{
					"id": 695,
					"name": "ButtonType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Button Type string enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 111,
							"character": 23
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 112,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "button"
							},
							{
								"type": "stringLiteral",
								"value": "submit"
							},
							{
								"type": "stringLiteral",
								"value": "reset"
							}
						]
					},
					"defaultValue": " strEnum([\"submit\", \"reset\", \"button\"])"
				},
				{
					"id": 671,
					"name": "CONTRIBUTION_TYPE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Contribution type enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string|string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 12,
							"character": 30
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 13,
							"character": 29
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "trigger"
							},
							{
								"type": "stringLiteral",
								"value": "activity"
							},
							{
								"type": "stringLiteral",
								"value": "connector"
							},
							{
								"type": "stringLiteral",
								"value": "function"
							}
						]
					},
					"defaultValue": " strEnum([\"trigger\", \"activity\", \"connector\", \"function\"])"
				},
				{
					"id": 701,
					"name": "CONTRIB_PROXY_END_POINT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 123,
							"character": 36
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "/wistudio/v1/contributions/proxy/"
					},
					"defaultValue": "\"/wistudio/v1/contributions/proxy/\""
				},
				{
					"id": 711,
					"name": "DEFAULT_CONTRIBUTION_CATEGORY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {
						"shortText": "Default contribution category",
						"tags": [
							{
								"tag": "type",
								"text": "{string}"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 346,
							"character": 42
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "General"
					},
					"defaultValue": "\"General\""
				},
				{
					"id": 691,
					"name": "DisplayFieldType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " DisplayField Type string enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string|string|string|string|string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 98,
							"character": 29
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 99,
							"character": 28
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "connection"
							},
							{
								"type": "stringLiteral",
								"value": "dropdown"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "texteditor"
							},
							{
								"type": "stringLiteral",
								"value": "fileselector"
							},
							{
								"type": "stringLiteral",
								"value": "connectiondata"
							},
							{
								"type": "stringLiteral",
								"value": "button"
							},
							{
								"type": "stringLiteral",
								"value": "params"
							},
							{
								"type": "stringLiteral",
								"value": "password"
							}
						]
					},
					"defaultValue": " strEnum([\"connection\", \"dropdown\", \"table\", \"texteditor\", \"fileselector\", \"connectiondata\", \"button\", \"params\", \"password\"])"
				},
				{
					"id": 709,
					"name": "FieldType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "FieldType string enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string | string | string | string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 256,
							"character": 22
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 257,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "array"
							},
							{
								"type": "stringLiteral",
								"value": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "integer"
							},
							{
								"type": "stringLiteral",
								"value": "number"
							},
							{
								"type": "stringLiteral",
								"value": "object"
							},
							{
								"type": "stringLiteral",
								"value": "string"
							},
							{
								"type": "stringLiteral",
								"value": "complex_object"
							}
						]
					},
					"defaultValue": " strEnum([\"string\", \"number\", \"boolean\", \"complex_object\", \"array\", \"object\", \"integer\"])"
				},
				{
					"id": 702,
					"name": "HTTP_METHOD",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 125,
							"character": 24
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 126,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "GET"
							},
							{
								"type": "stringLiteral",
								"value": "POST"
							},
							{
								"type": "stringLiteral",
								"value": "PUT"
							},
							{
								"type": "stringLiteral",
								"value": "DELETE"
							}
						]
					},
					"defaultValue": " strEnum([\"GET\", \"POST\", \"PUT\", \"DELETE\"])"
				},
				{
					"id": 717,
					"name": "IServiceContributionType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Service Contribution Type",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 1255,
							"character": 37
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 1256,
							"character": 36
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "Provider"
							},
							{
								"type": "stringLiteral",
								"value": "Handler"
							}
						]
					},
					"defaultValue": " strEnum([\"Provider\", \"Handler\"])"
				},
				{
					"id": 693,
					"name": "WizardFieldType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": " WizardField Type string enumeration",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string|string|string|string|string|string|string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/models/contrib.ts",
							"line": 104,
							"character": 28
						},
						{
							"fileName": "common/models/contrib.ts",
							"line": 106,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "array"
							},
							{
								"type": "stringLiteral",
								"value": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "integer"
							},
							{
								"type": "stringLiteral",
								"value": "number"
							},
							{
								"type": "stringLiteral",
								"value": "object"
							},
							{
								"type": "stringLiteral",
								"value": "string"
							},
							{
								"type": "stringLiteral",
								"value": "complex_object"
							},
							{
								"type": "stringLiteral",
								"value": "connection"
							},
							{
								"type": "stringLiteral",
								"value": "dropdown"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "texteditor"
							},
							{
								"type": "stringLiteral",
								"value": "fileselector"
							},
							{
								"type": "stringLiteral",
								"value": "connectiondata"
							},
							{
								"type": "stringLiteral",
								"value": "button"
							},
							{
								"type": "stringLiteral",
								"value": "params"
							},
							{
								"type": "stringLiteral",
								"value": "selectButtons"
							}
						]
					},
					"defaultValue": " strEnum([\"connection\", \"dropdown\", \"table\", \"texteditor\", \"fileselector\", \"connectiondata\", \"button\", \"params\",\n    \"selectButtons\", \"string\", \"number\", \"boolean\", \"complex_object\", \"array\", \"object\", \"integer\"])"
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						212,
						209
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						560,
						386,
						195,
						533,
						656
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						300,
						369,
						282,
						432,
						382,
						579,
						651,
						239,
						303,
						341,
						337,
						345,
						333,
						202,
						252,
						349,
						503,
						526,
						242,
						216,
						234,
						437,
						454,
						319,
						328,
						325,
						261,
						545,
						444,
						477,
						653,
						263,
						406,
						427,
						618,
						596,
						582
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						704,
						687,
						713,
						681,
						712,
						673
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						699,
						697,
						695,
						671,
						701,
						711,
						691,
						709,
						702,
						717,
						693
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/contrib.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 133,
			"name": "\"common/models/messaging\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/src/client/common/models/messaging.ts",
			"children": [
				{
					"id": 159,
					"name": "AbstractMessaging",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Abstract Messaging implementation",
						"tags": [
							{
								"tag": "description",
								"text": "There can be different messaging use cases where different type of Subjects can be used\ni.e. {Rx.Subject} or {Rx.ReplaySubject} which determines what behavior is required for the use case.\n"
							},
							{
								"tag": "example:",
								"text": "\n```\n public class TestMessaging extends AbstractMessaging {\n  static fromSubjects(subjects: any): AppMessaging {\n     return new ContribMessaging(subjects);\n  }\n\n  constructor(subjects?: any) {\n      super(subjects);\n  }\n\n  public newSubject<T>(): Subject<T> {\n      return new ReplaySubject<T>();\n  }\n }\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 161,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 162,
									"name": "new AbstractMessaging",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 163,
											"name": "subjects",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "AbstractMessaging",
										"id": 159
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 81,
									"character": 23
								}
							]
						},
						{
							"id": 160,
							"name": "subjects",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 81,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 167,
							"name": "Subjects",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 168,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 91,
									"character": 16
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.Subjects",
								"id": 135
							}
						},
						{
							"id": 173,
							"name": "createName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 174,
									"name": "createName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 175,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 105,
									"character": 14
								}
							]
						},
						{
							"id": 190,
							"name": "dispose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 191,
									"name": "dispose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 192,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 132,
									"character": 11
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.dispose",
								"id": 157
							}
						},
						{
							"id": 176,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 177,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 178,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 179,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 180,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.emit",
										"id": 144
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 109,
									"character": 8
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.emit",
								"id": 143
							}
						},
						{
							"id": 169,
							"name": "getObservable",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 170,
									"name": "getObservable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 171,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 172,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.getObservable",
										"id": 140
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 95,
									"character": 17
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.getObservable",
								"id": 139
							}
						},
						{
							"id": 164,
							"name": "newSubject",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 165,
									"name": "newSubject",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 166,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"type": {
										"type": "reference",
										"name": "Subject",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.newSubject",
										"id": 137
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 89,
									"character": 23
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.newSubject",
								"id": 136
							}
						},
						{
							"id": 186,
							"name": "off",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 187,
									"name": "off",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 188,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 189,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.off",
										"id": 154
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 124,
									"character": 7
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.off",
								"id": 153
							}
						},
						{
							"id": 181,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 182,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 183,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 184,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 185,
											"name": "handler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HANDLER_FUNCTION",
												"id": 35,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IMessaging.on",
										"id": 149
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 117,
									"character": 6
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IMessaging.on",
								"id": 148
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								161
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								160
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								167
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								173,
								190,
								176,
								169,
								164,
								186,
								181
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/messaging.ts",
							"line": 80,
							"character": 39
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "WiContribMessaging",
							"id": 884
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IMessaging",
							"id": 134
						}
					]
				},
				{
					"id": 134,
					"name": "IMessaging",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Asynchronous Messaging interface",
						"tags": [
							{
								"tag": "description",
								"text": "The messaging interface provides a publisher-subscriber broadcastubg servuce where one\n side publishes data and other sides subscribe to the data.\n"
							}
						]
					},
					"children": [
						{
							"id": 135,
							"name": "Subjects",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Object for holding subjects as properties"
							},
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 16,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 157,
							"name": "dispose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 158,
									"name": "dispose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Dispose all the subjects and reinitialize the {Subjects} Object"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 55,
									"character": 11
								}
							]
						},
						{
							"id": 143,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 144,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "description",
												"text": "Emit data of type {T} for a given subject name"
											}
										]
									},
									"typeParameter": [
										{
											"id": 145,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 146,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 147,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 36,
									"character": 8
								}
							]
						},
						{
							"id": 139,
							"name": "getObservable",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 140,
									"name": "getObservable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Returns an Observable for the given subject name"
											}
										]
									},
									"typeParameter": [
										{
											"id": 141,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 142,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 29,
									"character": 17
								}
							]
						},
						{
							"id": 136,
							"name": "newSubject",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 137,
									"name": "newSubject",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "\n",
										"tags": [
											{
												"tag": "description",
												"text": "Creates a new Subject"
											}
										]
									},
									"typeParameter": [
										{
											"id": 138,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"type": {
										"type": "reference",
										"name": "Subject",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 22,
									"character": 14
								}
							]
						},
						{
							"id": 153,
							"name": "off",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 154,
									"name": "off",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Delete the subject from the messaging subjects"
									},
									"typeParameter": [
										{
											"id": 155,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 156,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 50,
									"character": 7
								}
							]
						},
						{
							"id": 148,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 149,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Handle data of type {T} for a given subject name"
									},
									"typeParameter": [
										{
											"id": 150,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 151,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 152,
											"name": "handler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "HANDLER_FUNCTION",
												"id": 35,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/messaging.ts",
									"line": 43,
									"character": 6
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								135
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								157,
								143,
								139,
								136,
								153,
								148
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/messaging.ts",
							"line": 12,
							"character": 27
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "AbstractMessaging",
							"id": 159
						},
						{
							"type": "reference",
							"name": "WiContribMessaging",
							"id": 884
						}
					]
				},
				{
					"id": 193,
					"name": "hasOwnProp",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/models/messaging.ts",
							"line": 4,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"name": "hasOwnProperty"
					},
					"defaultValue": " {}.hasOwnProperty"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						159
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						134
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						193
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/messaging.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 39,
			"name": "\"common/models/validation\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/src/client/common/models/validation.ts",
			"children": [
				{
					"id": 75,
					"name": "EnumValidationState",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Field Validation State Enumeration"
					},
					"children": [
						{
							"id": 76,
							"name": "WI_READONLY",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The field is read only based on the bit flag",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 118,
									"character": 15
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 78,
							"name": "WI_VALID",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The field is valid based on the bit flag",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 128,
									"character": 12
								}
							],
							"defaultValue": "8"
						},
						{
							"id": 77,
							"name": "WI_VISIBLE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " The field is visible based on the bit flag",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 123,
									"character": 14
								}
							],
							"defaultValue": "4"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								76,
								78,
								77
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 113,
							"character": 31
						}
					]
				},
				{
					"id": 53,
					"name": "ValidationError",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Validation Error Implementation"
					},
					"children": [
						{
							"id": 58,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Constructor - Create a new validation error instance",
								"tags": [
									{
										"tag": "constructor",
										"text": ""
									}
								]
							},
							"signatures": [
								{
									"id": 62,
									"name": "new ValidationError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Constructor - Create a new validation error instance",
										"tags": [
											{
												"tag": "constructor",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 63,
											"name": "errorCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 64,
											"name": "errorMsg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 65,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"name": "STRING_MAP",
												"id": 8,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ValidationError",
										"id": 53
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 61,
									"character": 5
								}
							]
						},
						{
							"id": 61,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "\n"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 70,
									"character": 81
								}
							],
							"type": {
								"type": "reference",
								"name": "STRING_MAP",
								"id": 8,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.context",
								"id": 43
							}
						},
						{
							"id": 59,
							"name": "errorCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 70,
									"character": 32
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.errorCode",
								"id": 41
							}
						},
						{
							"id": 60,
							"name": "errorMsg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 70,
									"character": 57
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.errorMsg",
								"id": 42
							}
						},
						{
							"id": 66,
							"name": "getErrorCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 67,
									"name": "getErrorCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Error Code",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationError.getErrorCode",
										"id": 45
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 80,
									"character": 23
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.getErrorCode",
								"id": 44
							}
						},
						{
							"id": 68,
							"name": "getErrorMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 69,
									"name": "getErrorMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Error Message",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationError.getErrorMessage",
										"id": 47
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 88,
									"character": 26
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.getErrorMessage",
								"id": 46
							}
						},
						{
							"id": 72,
							"name": "setContext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 73,
									"name": "setContext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "Set the error context"
									},
									"parameters": [
										{
											"id": 74,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "STRING_MAP",
												"id": 8,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationError.setContext",
										"id": 51
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 105,
									"character": 21
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.setContext",
								"id": 50
							}
						},
						{
							"id": 70,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 71,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a string representation of the error",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationError.toString",
										"id": 49
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 96,
									"character": 19
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationError.toString",
								"id": 48
							}
						},
						{
							"id": 54,
							"name": "newError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 55,
									"name": "newError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Static Constructor Create a new validation error instance",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 56,
											"name": "errorCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 57,
											"name": "errorMsg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationError",
										"id": 40
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 59,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								58
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								61,
								59,
								60
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								66,
								68,
								72,
								70,
								54
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 52,
							"character": 28
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IValidationError",
							"id": 40
						}
					]
				},
				{
					"id": 103,
					"name": "ValidationResult",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Validation Result Implementation"
					},
					"children": [
						{
							"id": 109,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "constructor",
										"text": ""
									}
								]
							},
							"signatures": [
								{
									"id": 110,
									"name": "new ValidationResult",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "constructor",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 111,
											"name": "errors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 40
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IValidationError",
															"id": 40
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ValidationResult",
										"id": 103
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 216,
									"character": 5
								}
							]
						},
						{
							"id": 105,
							"name": "errors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 207,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IValidationError",
									"id": 40
								}
							},
							"defaultValue": " []",
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.errors",
								"id": 81
							}
						},
						{
							"id": 104,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 206,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "EnumValidationState",
										"id": 75
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"defaultValue": " EnumValidationState.WI_VALID | EnumValidationState.WI_VISIBLE",
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.state",
								"id": 80
							}
						},
						{
							"id": 131,
							"name": "getErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 132,
									"name": "getErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IValidationError",
											"id": 40
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.getErrors",
										"id": 102
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 268,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.getErrors",
								"id": 101
							}
						},
						{
							"id": 112,
							"name": "isReadOnly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 113,
									"name": "isReadOnly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.isReadOnly",
										"id": 83
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 236,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.isReadOnly",
								"id": 82
							}
						},
						{
							"id": 116,
							"name": "isValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 117,
									"name": "isValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.isValid",
										"id": 87
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 244,
									"character": 11
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.isValid",
								"id": 86
							}
						},
						{
							"id": 114,
							"name": "isVisible",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 115,
									"name": "isVisible",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.isVisible",
										"id": 85
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 240,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.isVisible",
								"id": 84
							}
						},
						{
							"id": 127,
							"name": "setError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 128,
									"name": "setError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129,
											"name": "errorCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 130,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.setError",
										"id": 98
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 263,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setError",
								"id": 97
							}
						},
						{
							"id": 118,
							"name": "setReadOnly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 119,
									"name": "setReadOnly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 120,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.setReadOnly",
										"id": 89
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 248,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setReadOnly",
								"id": 88
							}
						},
						{
							"id": 124,
							"name": "setValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 125,
									"name": "setValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 126,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.setValid",
										"id": 95
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 258,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setValid",
								"id": 94
							}
						},
						{
							"id": 121,
							"name": "setVisible",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 122,
									"name": "setVisible",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 123,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									},
									"implementationOf": {
										"type": "reference",
										"name": "IValidationResult.setVisible",
										"id": 92
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 253,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IValidationResult.setVisible",
								"id": 91
							}
						},
						{
							"id": 106,
							"name": "newValidationResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 107,
									"name": "newValidationResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Static constructor",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 108,
											"name": "errors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IValidationError",
														"id": 40
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IValidationError",
															"id": 40
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 214,
									"character": 30
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								109
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								105,
								104
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								131,
								112,
								116,
								114,
								127,
								118,
								124,
								121,
								106
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 203,
							"character": 29
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IValidationResult",
							"id": 79
						}
					]
				},
				{
					"id": 40,
					"name": "IValidationError",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Validation Error Interface"
					},
					"children": [
						{
							"id": 43,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Error Context"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 21,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "STRING_MAP",
								"id": 8,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 41,
							"name": "errorCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Error Code"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 11,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 42,
							"name": "errorMsg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Error Message"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 16,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 44,
							"name": "getErrorCode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 45,
									"name": "getErrorCode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Error Code",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 27,
									"character": 16
								}
							]
						},
						{
							"id": 46,
							"name": "getErrorMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 47,
									"name": "getErrorMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Error Message",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 33,
									"character": 19
								}
							]
						},
						{
							"id": 50,
							"name": "setContext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 51,
									"name": "setContext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "Set Context Map for the Error i.e Flow -> Activity -> Property"
									},
									"parameters": [
										{
											"id": 52,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "STRING_MAP",
												"id": 8,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 46,
									"character": 14
								}
							]
						},
						{
							"id": 48,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 49,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a string representation of the Error",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 39,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								43,
								41,
								42
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								44,
								46,
								50,
								48
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 6,
							"character": 33
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "ValidationError",
							"id": 53
						}
					]
				},
				{
					"id": 79,
					"name": "IValidationResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Validation Result interface"
					},
					"children": [
						{
							"id": 81,
							"name": "errors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Validation Errors"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 144,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IValidationError",
									"id": 40
								}
							}
						},
						{
							"id": 80,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Validation State"
							},
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 139,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "EnumValidationState",
										"id": 75
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 101,
							"name": "getErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 102,
									"name": "getErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns Validation Errors",
										"returns": "\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IValidationError",
											"id": 40
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 197,
									"character": 13
								}
							]
						},
						{
							"id": 82,
							"name": "isReadOnly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 83,
									"name": "isReadOnly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the Validation Read Only state",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 150,
									"character": 14
								}
							]
						},
						{
							"id": 86,
							"name": "isValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 87,
									"name": "isValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the Validation validity state",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 162,
									"character": 11
								}
							]
						},
						{
							"id": 84,
							"name": "isVisible",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 85,
									"name": "isVisible",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the Validation Visible state",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 156,
									"character": 13
								}
							]
						},
						{
							"id": 97,
							"name": "setError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 98,
									"name": "setError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds Validation error",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 99,
											"name": "errorCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 100,
											"name": "errorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 191,
									"character": 12
								}
							]
						},
						{
							"id": 88,
							"name": "setReadOnly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 89,
									"name": "setReadOnly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Validation Read Only state",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 90,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 169,
									"character": 15
								}
							]
						},
						{
							"id": 94,
							"name": "setValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 95,
									"name": "setValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Validation valid state",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 96,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 183,
									"character": 12
								}
							]
						},
						{
							"id": 91,
							"name": "setVisible",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 92,
									"name": "setVisible",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the Validation Visible state",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 93,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IValidationResult",
										"id": 79
									}
								}
							],
							"sources": [
								{
									"fileName": "common/models/validation.ts",
									"line": 176,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								81,
								80
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								101,
								82,
								86,
								84,
								97,
								88,
								94,
								91
							]
						}
					],
					"sources": [
						{
							"fileName": "common/models/validation.ts",
							"line": 134,
							"character": 34
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "ValidationResult",
							"id": 103
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						75
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						53,
						103
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						40,
						79
					]
				}
			],
			"sources": [
				{
					"fileName": "common/models/validation.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"common/types\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/src/client/common/types.ts",
			"children": [
				{
					"id": 2,
					"name": "JSONSCHEMATypeInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "JSON Schema Type Information"
					},
					"children": [
						{
							"id": 4,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 68,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "JSON_FORMAT",
								"id": 26
							}
						},
						{
							"id": 7,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 71,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 6,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 70,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5,
							"name": "pattern",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 69,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 67,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "JSON_TYPE",
								"id": 24
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4,
								7,
								6,
								5,
								3
							]
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 66,
							"character": 35
						}
					]
				},
				{
					"id": 23,
					"name": "ARRAY_STR_ARRAY",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 19,
							"character": 27
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9,
					"name": "ENUM_MAP",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 2,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Map",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "E"
							},
							{
								"type": "typeParameter",
								"name": "P"
							}
						]
					}
				},
				{
					"id": 35,
					"name": "HANDLER_FUNCTION",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Messaging handler function prototype"
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 98,
							"character": 28
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 37,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 38,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "common/types.ts",
									"line": 98,
									"character": 33
								}
							]
						}
					}
				},
				{
					"id": 30,
					"name": "JSON_SCHEMA_TYPE",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 73,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "JSONSCHEMATypeInfo",
						"id": 2
					}
				},
				{
					"id": 8,
					"name": "STRING_MAP",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 1,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "Map",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "typeParameter",
								"name": "P"
							}
						]
					}
				},
				{
					"id": 28,
					"name": "GOLANG_TYPE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "GO Lang Type enumerations",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string | string | string | string | string | string | string | string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 60,
							"character": 24
						},
						{
							"fileName": "common/types.ts",
							"line": 61,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "any"
							},
							{
								"type": "stringLiteral",
								"value": "array"
							},
							{
								"type": "stringLiteral",
								"value": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "integer"
							},
							{
								"type": "stringLiteral",
								"value": "number"
							},
							{
								"type": "stringLiteral",
								"value": "object"
							},
							{
								"type": "stringLiteral",
								"value": "string"
							},
							{
								"type": "stringLiteral",
								"value": "complex_object"
							}
						]
					},
					"defaultValue": " strEnum([\"string\", \"integer\", \"number\", \"boolean\", \"object\", \"array\", \"any\", \"complex_object\"])"
				},
				{
					"id": 26,
					"name": "JSON_FORMAT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "JSON Schema Type Format enumerations\nhttps://developers.google.com/discovery/v1/type-format\nhttp://json-schema.org/latest/json-schema-validation.html#rfc.section.3.2",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string | string | string | string | string | string | string | string | string | string | string | string | string | string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 35,
							"character": 24
						},
						{
							"fileName": "common/types.ts",
							"line": 54,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "object"
							},
							{
								"type": "stringLiteral",
								"value": "int32"
							},
							{
								"type": "stringLiteral",
								"value": "uint32"
							},
							{
								"type": "stringLiteral",
								"value": "double"
							},
							{
								"type": "stringLiteral",
								"value": "float"
							},
							{
								"type": "stringLiteral",
								"value": "byte"
							},
							{
								"type": "stringLiteral",
								"value": "date"
							},
							{
								"type": "stringLiteral",
								"value": "date_time"
							},
							{
								"type": "stringLiteral",
								"value": "int64"
							},
							{
								"type": "stringLiteral",
								"value": "uint64"
							},
							{
								"type": "stringLiteral",
								"value": "email"
							},
							{
								"type": "stringLiteral",
								"value": "hostname"
							},
							{
								"type": "stringLiteral",
								"value": "ipv4"
							},
							{
								"type": "stringLiteral",
								"value": "ipv6"
							},
							{
								"type": "stringLiteral",
								"value": "uri"
							},
							{
								"type": "stringLiteral",
								"value": "uri_reference"
							},
							{
								"type": "stringLiteral",
								"value": "uri_template"
							},
							{
								"type": "stringLiteral",
								"value": "json_pointer"
							}
						]
					},
					"defaultValue": " strEnum([\n    \"int32\",\n    \"uint32\",\n    \"double\",\n    \"float\",\n    \"byte\",\n    \"date\",\n    \"date_time\",\n    \"int64\",\n    \"uint64\",\n    \"object\",\n    \"email\",\n    \"hostname\",\n    \"ipv4\",\n    \"ipv6\",\n    \"uri\",\n    \"uri_reference\",\n    \"uri_template\",\n    \"json_pointer\"])"
				},
				{
					"id": 31,
					"name": "JSON_RT_TYPE_MAPPING",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 75,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"name": "ENUM_MAP",
						"id": 9,
						"typeArguments": [
							{
								"type": "reference",
								"name": "GOLANG_TYPE",
								"id": 28
							},
							{
								"type": "reference",
								"name": "JSON_SCHEMA_TYPE",
								"id": 30
							}
						]
					},
					"defaultValue": " new Map<GOLANG_TYPE, JSON_SCHEMA_TYPE>()"
				},
				{
					"id": 24,
					"name": "JSON_TYPE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "JSON Schema Type enumerations\nhttps://developers.google.com/discovery/v1/type-format\nhttp://json-schema.org/latest/json-schema-validation.html#rfc.section.3.2",
						"tags": [
							{
								"tag": "type",
								"text": "{{[K in string | string | string | string | string | string | string]:K}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 26,
							"character": 22
						},
						{
							"fileName": "common/types.ts",
							"line": 27,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "any"
							},
							{
								"type": "stringLiteral",
								"value": "array"
							},
							{
								"type": "stringLiteral",
								"value": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "integer"
							},
							{
								"type": "stringLiteral",
								"value": "number"
							},
							{
								"type": "stringLiteral",
								"value": "object"
							},
							{
								"type": "stringLiteral",
								"value": "string"
							}
						]
					},
					"defaultValue": " strEnum([\"any\", \"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\"])"
				},
				{
					"id": 32,
					"name": "RTtoJSONTypeMap",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 33,
							"name": "RTtoJSONTypeMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a {{JSON_SCHEMA_TYPE}}",
								"tags": [
									{
										"tag": "constructor",
										"text": "\n"
									}
								]
							},
							"parameters": [
								{
									"id": 34,
									"name": "rtType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "GOLANG_TYPE",
										"id": 28
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "JSON_SCHEMA_TYPE",
								"id": 30
							}
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 91,
							"character": 31
						}
					]
				},
				{
					"id": 18,
					"name": "jsonToMap",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 19,
							"name": "jsonToMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 20,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 21,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 22,
									"name": "jsonStr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Map",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "K"
									},
									{
										"type": "typeParameter",
										"name": "V"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 15,
							"character": 25
						}
					]
				},
				{
					"id": 15,
					"name": "mapToJson",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 16,
							"name": "mapToJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 17,
									"name": "map",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 12,
							"character": 25
						}
					]
				},
				{
					"id": 10,
					"name": "strEnum",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 11,
							"name": "strEnum",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 12,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 13,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Array",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "common/types.ts",
											"line": 4,
											"character": 55
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "common/types.ts",
							"line": 4,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						23,
						9,
						35,
						30,
						8
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						28,
						26,
						31,
						24
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						32,
						18,
						15,
						10
					]
				}
			],
			"sources": [
				{
					"fileName": "common/types.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				719,
				194,
				133,
				39,
				1
			]
		}
	]
}